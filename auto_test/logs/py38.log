INFO 2021-04-09 20:25:39,119 [test_register.py-->line:24]:=========注册接口开始测试==========
INFO 2021-04-09 20:25:39,119 [test_register.py-->line:32]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
DEBUG 2021-04-09 20:25:39,221 [test_register.py-->line:48]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 20:25:39,221 [test_register.py-->line:49]:method:post
DEBUG 2021-04-09 20:25:39,221 [test_register.py-->line:50]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15852491366, 'pwd': '12345678'}}
INFO 2021-04-09 20:25:39,377 [test_register.py-->line:63]:状态码断言成功！
INFO 2021-04-09 20:25:39,377 [test_register.py-->line:76]:请求结果断言成功！
INFO 2021-04-09 20:25:39,477 [test_register.py-->line:89]:数据库断言成功
INFO 2021-04-09 20:25:39,478 [test_register.py-->line:91]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-09 20:25:39,479 [test_register.py-->line:32]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
DEBUG 2021-04-09 20:25:39,579 [test_register.py-->line:48]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 20:25:39,579 [test_register.py-->line:49]:method:post
DEBUG 2021-04-09 20:25:39,579 [test_register.py-->line:50]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15889762319, 'pwd': '12345678', 'type': 0, 'reg_name': '美丽可爱的小简'}}
INFO 2021-04-09 20:25:39,741 [test_register.py-->line:63]:状态码断言成功！
INFO 2021-04-09 20:25:39,742 [test_register.py-->line:76]:请求结果断言成功！
INFO 2021-04-09 20:25:39,850 [test_register.py-->line:89]:数据库断言成功
INFO 2021-04-09 20:25:39,851 [test_register.py-->line:91]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-09 20:25:39,851 [test_register.py-->line:32]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
DEBUG 2021-04-09 20:25:39,952 [test_register.py-->line:48]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 20:25:39,953 [test_register.py-->line:49]:method:post
DEBUG 2021-04-09 20:25:39,953 [test_register.py-->line:50]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15892350763, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 20:25:40,107 [test_register.py-->line:63]:状态码断言成功！
INFO 2021-04-09 20:25:40,107 [test_register.py-->line:76]:请求结果断言成功！
INFO 2021-04-09 20:25:40,208 [test_register.py-->line:89]:数据库断言成功
INFO 2021-04-09 20:25:40,209 [test_register.py-->line:91]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-09 20:25:40,209 [test_register.py-->line:32]:用例【不输入手机号】开始测试>>>>>>>
DEBUG 2021-04-09 20:25:40,209 [test_register.py-->line:48]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 20:25:40,209 [test_register.py-->line:49]:method:post
DEBUG 2021-04-09 20:25:40,209 [test_register.py-->line:50]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 20:25:40,252 [test_register.py-->line:63]:状态码断言成功！
INFO 2021-04-09 20:25:40,252 [test_register.py-->line:76]:请求结果断言成功！
INFO 2021-04-09 20:25:40,252 [test_register.py-->line:91]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-09 20:25:40,252 [test_register.py-->line:32]:用例【手机号长度10位】开始测试>>>>>>>
DEBUG 2021-04-09 20:25:40,252 [test_register.py-->line:48]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 20:25:40,253 [test_register.py-->line:49]:method:post
DEBUG 2021-04-09 20:25:40,253 [test_register.py-->line:50]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 1550000000, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 20:25:40,304 [test_register.py-->line:63]:状态码断言成功！
INFO 2021-04-09 20:25:40,304 [test_register.py-->line:76]:请求结果断言成功！
INFO 2021-04-09 20:25:40,304 [test_register.py-->line:91]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-09 20:25:40,304 [test_register.py-->line:32]:用例【手机号长度12位】开始测试>>>>>>>
DEBUG 2021-04-09 20:25:40,305 [test_register.py-->line:48]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 20:25:40,305 [test_register.py-->line:49]:method:post
DEBUG 2021-04-09 20:25:40,305 [test_register.py-->line:50]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 155000000001, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 20:25:40,344 [test_register.py-->line:63]:状态码断言成功！
INFO 2021-04-09 20:25:40,345 [test_register.py-->line:76]:请求结果断言成功！
INFO 2021-04-09 20:25:40,345 [test_register.py-->line:91]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-09 20:25:40,345 [test_register.py-->line:32]:用例【手机号含有非法字符】开始测试>>>>>>>
DEBUG 2021-04-09 20:25:40,345 [test_register.py-->line:48]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 20:25:40,345 [test_register.py-->line:49]:method:post
DEBUG 2021-04-09 20:25:40,345 [test_register.py-->line:50]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': '1550000000q', 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 20:25:40,381 [test_register.py-->line:63]:状态码断言成功！
INFO 2021-04-09 20:25:40,381 [test_register.py-->line:76]:请求结果断言成功！
INFO 2021-04-09 20:25:40,381 [test_register.py-->line:91]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-09 20:25:40,382 [test_register.py-->line:32]:用例【已注册过的手机号】开始测试>>>>>>>
DEBUG 2021-04-09 20:25:40,382 [test_register.py-->line:48]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 20:25:40,382 [test_register.py-->line:49]:method:post
DEBUG 2021-04-09 20:25:40,382 [test_register.py-->line:50]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15873061802, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 20:25:40,533 [test_register.py-->line:63]:状态码断言成功！
INFO 2021-04-09 20:25:40,533 [test_register.py-->line:76]:请求结果断言成功！
INFO 2021-04-09 20:25:40,533 [test_register.py-->line:91]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-09 20:25:40,533 [test_register.py-->line:32]:用例【密码7位】开始测试>>>>>>>
DEBUG 2021-04-09 20:25:40,533 [test_register.py-->line:48]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 20:25:40,533 [test_register.py-->line:49]:method:post
DEBUG 2021-04-09 20:25:40,534 [test_register.py-->line:50]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15500056781, 'pwd': '1234567', 'type': 1}}
INFO 2021-04-09 20:25:40,571 [test_register.py-->line:63]:状态码断言成功！
INFO 2021-04-09 20:25:40,571 [test_register.py-->line:76]:请求结果断言成功！
INFO 2021-04-09 20:25:40,572 [test_register.py-->line:91]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-09 20:25:40,572 [test_register.py-->line:32]:用例【密码17位】开始测试>>>>>>>
DEBUG 2021-04-09 20:25:40,572 [test_register.py-->line:48]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 20:25:40,572 [test_register.py-->line:49]:method:post
DEBUG 2021-04-09 20:25:40,572 [test_register.py-->line:50]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15500000001, 'pwd': '12345678901234567', 'type': 1}}
INFO 2021-04-09 20:25:40,625 [test_register.py-->line:63]:状态码断言成功！
INFO 2021-04-09 20:25:40,625 [test_register.py-->line:76]:请求结果断言成功！
INFO 2021-04-09 20:25:40,625 [test_register.py-->line:91]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-09 20:25:40,626 [test_register.py-->line:32]:用例【不输入密码】开始测试>>>>>>>
DEBUG 2021-04-09 20:25:40,626 [test_register.py-->line:48]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 20:25:40,627 [test_register.py-->line:49]:method:post
DEBUG 2021-04-09 20:25:40,627 [test_register.py-->line:50]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 13300000001, 'type': 1}}
INFO 2021-04-09 20:25:40,664 [test_register.py-->line:63]:状态码断言成功！
INFO 2021-04-09 20:25:40,664 [test_register.py-->line:76]:请求结果断言成功！
INFO 2021-04-09 20:25:40,664 [test_register.py-->line:91]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-09 20:25:40,664 [test_register.py-->line:32]:用例【昵称11位】开始测试>>>>>>>
DEBUG 2021-04-09 20:25:40,665 [test_register.py-->line:48]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 20:25:40,665 [test_register.py-->line:49]:method:post
DEBUG 2021-04-09 20:25:40,665 [test_register.py-->line:50]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 13303007856, 'pwd': '12345678', 'type': 1, 'reg_name': '12345678909991'}}
INFO 2021-04-09 20:25:40,705 [test_register.py-->line:63]:状态码断言成功！
INFO 2021-04-09 20:25:40,705 [test_register.py-->line:76]:请求结果断言成功！
INFO 2021-04-09 20:25:40,705 [test_register.py-->line:91]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-09 20:25:40,706 [test_register.py-->line:32]:用例【类型输入非0，1内容】开始测试>>>>>>>
DEBUG 2021-04-09 20:25:40,706 [test_register.py-->line:48]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 20:25:40,706 [test_register.py-->line:49]:method:post
DEBUG 2021-04-09 20:25:40,706 [test_register.py-->line:50]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 13300003456, 'pwd': '12345678', 'type': 2}}
INFO 2021-04-09 20:25:40,747 [test_register.py-->line:63]:状态码断言成功！
INFO 2021-04-09 20:25:40,747 [test_register.py-->line:76]:请求结果断言成功！
INFO 2021-04-09 20:25:40,747 [test_register.py-->line:91]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-09 20:25:40,748 [test_register.py-->line:28]:**********注册接口测试结束**********
INFO 2021-04-09 20:35:05,283 [test_register.py-->line:25]:=========注册接口开始测试==========
INFO 2021-04-09 20:35:05,284 [test_register.py-->line:33]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
DEBUG 2021-04-09 20:35:05,396 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 20:35:05,396 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 20:35:05,396 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15833417145, 'pwd': '12345678'}}
INFO 2021-04-09 20:35:05,560 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 20:35:05,560 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 20:35:05,673 [test_register.py-->line:92]:数据库断言成功
INFO 2021-04-09 20:35:05,673 [test_register.py-->line:94]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-09 20:35:05,673 [test_register.py-->line:33]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
DEBUG 2021-04-09 20:35:05,786 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 20:35:05,787 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 20:35:05,787 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15828344485, 'pwd': '12345678', 'type': 0, 'reg_name': '美丽可爱的小简'}}
INFO 2021-04-09 20:35:05,959 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 20:35:05,959 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 20:35:06,121 [test_register.py-->line:92]:数据库断言成功
INFO 2021-04-09 20:35:06,122 [test_register.py-->line:94]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-09 20:35:06,122 [test_register.py-->line:33]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
DEBUG 2021-04-09 20:35:06,233 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 20:35:06,233 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 20:35:06,233 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15864219320, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 20:35:06,390 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 20:35:06,390 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 20:35:06,503 [test_register.py-->line:92]:数据库断言成功
INFO 2021-04-09 20:35:06,503 [test_register.py-->line:94]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-09 20:35:06,503 [test_register.py-->line:33]:用例【不输入手机号】开始测试>>>>>>>
DEBUG 2021-04-09 20:35:06,503 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 20:35:06,504 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 20:35:06,504 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 20:35:06,541 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 20:35:06,541 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 20:35:06,541 [test_register.py-->line:94]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-09 20:35:06,541 [test_register.py-->line:33]:用例【手机号长度10位】开始测试>>>>>>>
DEBUG 2021-04-09 20:35:06,541 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 20:35:06,541 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 20:35:06,541 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 1550000000, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 20:35:06,593 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 20:35:06,593 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 20:35:06,594 [test_register.py-->line:94]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-09 20:35:06,594 [test_register.py-->line:33]:用例【手机号长度12位】开始测试>>>>>>>
DEBUG 2021-04-09 20:35:06,594 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 20:35:06,594 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 20:35:06,594 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 155000000001, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 20:35:06,631 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 20:35:06,632 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 20:35:06,632 [test_register.py-->line:94]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-09 20:35:06,632 [test_register.py-->line:33]:用例【手机号含有非法字符】开始测试>>>>>>>
DEBUG 2021-04-09 20:35:06,632 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 20:35:06,632 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 20:35:06,632 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': '1550000000q', 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 20:35:06,673 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 20:35:06,673 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 20:35:06,673 [test_register.py-->line:94]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-09 20:35:06,673 [test_register.py-->line:33]:用例【已注册过的手机号】开始测试>>>>>>>
DEBUG 2021-04-09 20:35:06,673 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 20:35:06,673 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 20:35:06,673 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15873061802, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 20:35:06,834 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 20:35:06,835 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 20:35:06,835 [test_register.py-->line:94]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-09 20:35:06,835 [test_register.py-->line:33]:用例【密码7位】开始测试>>>>>>>
DEBUG 2021-04-09 20:35:06,835 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 20:35:06,835 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 20:35:06,835 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15500056781, 'pwd': '1234567', 'type': 1}}
INFO 2021-04-09 20:35:06,873 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 20:35:06,873 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 20:35:06,873 [test_register.py-->line:94]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-09 20:35:06,874 [test_register.py-->line:33]:用例【密码17位】开始测试>>>>>>>
DEBUG 2021-04-09 20:35:06,874 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 20:35:06,874 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 20:35:06,874 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15500000001, 'pwd': '12345678901234567', 'type': 1}}
INFO 2021-04-09 20:35:06,929 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 20:35:06,929 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 20:35:06,929 [test_register.py-->line:94]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-09 20:35:06,929 [test_register.py-->line:33]:用例【不输入密码】开始测试>>>>>>>
DEBUG 2021-04-09 20:35:06,929 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 20:35:06,929 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 20:35:06,929 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 13300000001, 'type': 1}}
INFO 2021-04-09 20:35:06,967 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 20:35:06,967 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 20:35:06,967 [test_register.py-->line:94]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-09 20:35:06,967 [test_register.py-->line:33]:用例【昵称11位】开始测试>>>>>>>
DEBUG 2021-04-09 20:35:06,967 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 20:35:06,967 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 20:35:06,968 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 13303007856, 'pwd': '12345678', 'type': 1, 'reg_name': '12345678909991'}}
INFO 2021-04-09 20:35:07,020 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 20:35:07,020 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 20:35:07,021 [test_register.py-->line:94]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-09 20:35:07,021 [test_register.py-->line:33]:用例【类型输入非0，1内容】开始测试>>>>>>>
DEBUG 2021-04-09 20:35:07,021 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 20:35:07,021 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 20:35:07,021 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 13300003456, 'pwd': '12345678', 'type': 2}}
INFO 2021-04-09 20:35:07,071 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 20:35:07,072 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 20:35:07,072 [test_register.py-->line:94]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-09 20:35:07,072 [test_register.py-->line:29]:**********注册接口测试结束**********
INFO 2021-04-09 20:50:25,255 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-09 20:56:19,683 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-09 20:56:19,841 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-09 21:38:32,271 [test_register.py-->line:25]:=========注册接口开始测试==========
INFO 2021-04-09 21:38:32,272 [test_register.py-->line:33]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
DEBUG 2021-04-09 21:38:32,400 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:38:32,401 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:38:32,401 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15837002759, 'pwd': '12345678'}}
INFO 2021-04-09 21:38:32,567 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:38:32,567 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:38:32,676 [test_register.py-->line:92]:数据库断言成功
INFO 2021-04-09 21:38:32,677 [test_register.py-->line:94]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-09 21:38:32,677 [test_register.py-->line:33]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
DEBUG 2021-04-09 21:38:32,786 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:38:32,786 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:38:32,786 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15831645582, 'pwd': '12345678', 'type': 0, 'reg_name': '美丽可爱的小简'}}
INFO 2021-04-09 21:38:33,162 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:38:33,163 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:38:33,268 [test_register.py-->line:92]:数据库断言成功
INFO 2021-04-09 21:38:33,269 [test_register.py-->line:94]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-09 21:38:33,269 [test_register.py-->line:33]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
DEBUG 2021-04-09 21:38:33,374 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:38:33,375 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:38:33,375 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15861728792, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 21:38:34,054 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:38:34,055 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:38:34,186 [test_register.py-->line:92]:数据库断言成功
INFO 2021-04-09 21:38:34,186 [test_register.py-->line:94]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-09 21:38:34,187 [test_register.py-->line:33]:用例【不输入手机号】开始测试>>>>>>>
DEBUG 2021-04-09 21:38:34,187 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:38:34,187 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:38:34,187 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 21:38:34,236 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:38:34,237 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:38:34,237 [test_register.py-->line:94]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-09 21:38:34,237 [test_register.py-->line:33]:用例【手机号长度10位】开始测试>>>>>>>
DEBUG 2021-04-09 21:38:34,238 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:38:34,238 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:38:34,238 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 1550000000, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 21:38:34,506 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:38:34,507 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:38:34,507 [test_register.py-->line:94]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-09 21:38:34,508 [test_register.py-->line:33]:用例【手机号长度12位】开始测试>>>>>>>
DEBUG 2021-04-09 21:38:34,508 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:38:34,508 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:38:34,508 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 155000000001, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 21:38:34,564 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:38:34,564 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:38:34,564 [test_register.py-->line:94]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-09 21:38:34,565 [test_register.py-->line:33]:用例【手机号含有非法字符】开始测试>>>>>>>
DEBUG 2021-04-09 21:38:34,565 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:38:34,565 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:38:34,565 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': '1550000000q', 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 21:38:35,619 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:38:35,619 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:38:35,619 [test_register.py-->line:94]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-09 21:38:35,619 [test_register.py-->line:33]:用例【已注册过的手机号】开始测试>>>>>>>
DEBUG 2021-04-09 21:38:35,620 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:38:35,620 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:38:35,620 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15873061802, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 21:38:36,787 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:38:36,788 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:38:36,788 [test_register.py-->line:94]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-09 21:38:36,789 [test_register.py-->line:33]:用例【密码7位】开始测试>>>>>>>
DEBUG 2021-04-09 21:38:36,789 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:38:36,789 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:38:36,789 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15500056781, 'pwd': '1234567', 'type': 1}}
INFO 2021-04-09 21:38:36,829 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:38:36,830 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:38:36,830 [test_register.py-->line:94]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-09 21:38:36,830 [test_register.py-->line:33]:用例【密码17位】开始测试>>>>>>>
DEBUG 2021-04-09 21:38:36,830 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:38:36,831 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:38:36,831 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15500000001, 'pwd': '12345678901234567', 'type': 1}}
INFO 2021-04-09 21:38:36,870 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:38:36,871 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:38:36,871 [test_register.py-->line:94]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-09 21:38:36,871 [test_register.py-->line:33]:用例【不输入密码】开始测试>>>>>>>
DEBUG 2021-04-09 21:38:36,872 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:38:36,872 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:38:36,872 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 13300000001, 'type': 1}}
INFO 2021-04-09 21:38:36,915 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:38:36,915 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:38:36,915 [test_register.py-->line:94]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-09 21:38:36,915 [test_register.py-->line:33]:用例【昵称11位】开始测试>>>>>>>
DEBUG 2021-04-09 21:38:36,915 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:38:36,916 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:38:36,916 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 13303007856, 'pwd': '12345678', 'type': 1, 'reg_name': '12345678909991'}}
INFO 2021-04-09 21:38:36,960 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:38:36,960 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:38:36,960 [test_register.py-->line:94]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-09 21:38:36,960 [test_register.py-->line:33]:用例【类型输入非0，1内容】开始测试>>>>>>>
DEBUG 2021-04-09 21:38:36,961 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:38:36,961 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:38:36,961 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 13300003456, 'pwd': '12345678', 'type': 2}}
INFO 2021-04-09 21:38:37,001 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:38:37,002 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:38:37,002 [test_register.py-->line:94]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-09 21:38:37,002 [test_register.py-->line:29]:**********注册接口测试结束**********
INFO 2021-04-09 21:52:35,923 [test_recharge.py-->line:26]:=========充值接口开始测试==========
INFO 2021-04-09 21:52:36,253 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-09 21:52:36,254 [test_recharge.py-->line:34]:注册用户15823466074成功
INFO 2021-04-09 21:52:36,489 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-09 21:52:36,489 [test_recharge.py-->line:51]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-09 21:52:36,496 [test_recharge.py-->line:51]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-09 21:52:36,497 [test_recharge.py-->line:51]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-09 21:52:36,497 [test_recharge.py-->line:51]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-09 21:52:36,498 [test_recharge.py-->line:51]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-09 21:52:36,499 [test_recharge.py-->line:51]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-09 21:52:36,500 [test_recharge.py-->line:51]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-09 21:52:36,500 [test_recharge.py-->line:51]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-09 21:52:36,501 [test_recharge.py-->line:51]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-09 21:52:36,502 [test_recharge.py-->line:51]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-09 21:52:36,507 [test_recharge.py-->line:51]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-09 21:52:36,507 [test_recharge.py-->line:51]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-09 21:52:36,508 [test_recharge.py-->line:51]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-09 21:52:36,508 [test_recharge.py-->line:51]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-09 21:52:36,509 [test_recharge.py-->line:47]:**********充值接口测试结束**********
INFO 2021-04-09 21:52:36,509 [test_register.py-->line:25]:=========注册接口开始测试==========
INFO 2021-04-09 21:52:36,511 [test_register.py-->line:33]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
DEBUG 2021-04-09 21:52:36,669 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:52:36,669 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:52:36,669 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15818325949, 'pwd': '12345678'}}
INFO 2021-04-09 21:52:36,890 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:52:36,891 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:52:37,046 [test_register.py-->line:92]:数据库断言成功
INFO 2021-04-09 21:52:37,046 [test_register.py-->line:94]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-09 21:52:37,046 [test_register.py-->line:33]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
DEBUG 2021-04-09 21:52:37,201 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:52:37,201 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:52:37,201 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15806442927, 'pwd': '12345678', 'type': 0, 'reg_name': '美丽可爱的小简'}}
INFO 2021-04-09 21:52:37,415 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:52:37,415 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:52:37,572 [test_register.py-->line:92]:数据库断言成功
INFO 2021-04-09 21:52:37,573 [test_register.py-->line:94]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-09 21:52:37,573 [test_register.py-->line:33]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
DEBUG 2021-04-09 21:52:37,730 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:52:37,731 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:52:37,731 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15808686760, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 21:52:37,960 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:52:37,960 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:52:38,115 [test_register.py-->line:92]:数据库断言成功
INFO 2021-04-09 21:52:38,115 [test_register.py-->line:94]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-09 21:52:38,115 [test_register.py-->line:33]:用例【不输入手机号】开始测试>>>>>>>
DEBUG 2021-04-09 21:52:38,115 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:52:38,115 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:52:38,115 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 21:52:38,168 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:52:38,169 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:52:38,169 [test_register.py-->line:94]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-09 21:52:38,169 [test_register.py-->line:33]:用例【手机号长度10位】开始测试>>>>>>>
DEBUG 2021-04-09 21:52:38,169 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:52:38,169 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:52:38,169 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 1550000000, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 21:52:38,206 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:52:38,207 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:52:38,207 [test_register.py-->line:94]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-09 21:52:38,207 [test_register.py-->line:33]:用例【手机号长度12位】开始测试>>>>>>>
DEBUG 2021-04-09 21:52:38,207 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:52:38,207 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:52:38,207 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 155000000001, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 21:52:38,262 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:52:38,262 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:52:38,262 [test_register.py-->line:94]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-09 21:52:38,262 [test_register.py-->line:33]:用例【手机号含有非法字符】开始测试>>>>>>>
DEBUG 2021-04-09 21:52:38,262 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:52:38,262 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:52:38,262 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': '1550000000q', 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 21:52:38,312 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:52:38,312 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:52:38,312 [test_register.py-->line:94]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-09 21:52:38,313 [test_register.py-->line:33]:用例【已注册过的手机号】开始测试>>>>>>>
DEBUG 2021-04-09 21:52:38,313 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:52:38,313 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:52:38,313 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15873061802, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 21:52:38,545 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:52:38,545 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:52:38,545 [test_register.py-->line:94]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-09 21:52:38,545 [test_register.py-->line:33]:用例【密码7位】开始测试>>>>>>>
DEBUG 2021-04-09 21:52:38,545 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:52:38,545 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:52:38,545 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15500056781, 'pwd': '1234567', 'type': 1}}
INFO 2021-04-09 21:52:38,597 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:52:38,597 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:52:38,597 [test_register.py-->line:94]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-09 21:52:38,597 [test_register.py-->line:33]:用例【密码17位】开始测试>>>>>>>
DEBUG 2021-04-09 21:52:38,597 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:52:38,597 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:52:38,597 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15500000001, 'pwd': '12345678901234567', 'type': 1}}
INFO 2021-04-09 21:52:38,637 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:52:38,637 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:52:38,637 [test_register.py-->line:94]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-09 21:52:38,637 [test_register.py-->line:33]:用例【不输入密码】开始测试>>>>>>>
DEBUG 2021-04-09 21:52:38,638 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:52:38,638 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:52:38,638 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 13300000001, 'type': 1}}
INFO 2021-04-09 21:52:38,678 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:52:38,678 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:52:38,678 [test_register.py-->line:94]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-09 21:52:38,678 [test_register.py-->line:33]:用例【昵称11位】开始测试>>>>>>>
DEBUG 2021-04-09 21:52:38,678 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:52:38,678 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:52:38,678 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 13303007856, 'pwd': '12345678', 'type': 1, 'reg_name': '12345678909991'}}
INFO 2021-04-09 21:52:38,729 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:52:38,730 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:52:38,730 [test_register.py-->line:94]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-09 21:52:38,730 [test_register.py-->line:33]:用例【类型输入非0，1内容】开始测试>>>>>>>
DEBUG 2021-04-09 21:52:38,730 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:52:38,730 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:52:38,730 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 13300003456, 'pwd': '12345678', 'type': 2}}
INFO 2021-04-09 21:52:38,788 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:52:38,788 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:52:38,788 [test_register.py-->line:94]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-09 21:52:38,788 [test_register.py-->line:29]:**********注册接口测试结束**********
INFO 2021-04-09 21:55:11,978 [test_recharge.py-->line:26]:=========充值接口开始测试==========
INFO 2021-04-09 21:55:12,370 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-09 21:55:12,371 [test_recharge.py-->line:34]:注册用户15812176191成功
INFO 2021-04-09 21:55:12,596 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-09 21:55:12,597 [test_recharge.py-->line:51]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-09 21:55:12,598 [test_recharge.py-->line:51]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-09 21:55:12,599 [test_recharge.py-->line:51]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-09 21:55:12,600 [test_recharge.py-->line:51]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-09 21:55:12,601 [test_recharge.py-->line:51]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-09 21:55:12,601 [test_recharge.py-->line:51]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-09 21:55:12,602 [test_recharge.py-->line:51]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-09 21:55:12,602 [test_recharge.py-->line:51]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-09 21:55:12,603 [test_recharge.py-->line:51]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-09 21:55:12,603 [test_recharge.py-->line:51]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-09 21:55:12,604 [test_recharge.py-->line:51]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-09 21:55:12,605 [test_recharge.py-->line:51]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-09 21:55:12,605 [test_recharge.py-->line:51]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-09 21:55:12,606 [test_recharge.py-->line:51]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-09 21:55:12,606 [test_recharge.py-->line:47]:**********充值接口测试结束**********
INFO 2021-04-09 21:55:12,606 [test_register.py-->line:25]:=========注册接口开始测试==========
INFO 2021-04-09 21:55:12,606 [test_register.py-->line:33]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
DEBUG 2021-04-09 21:55:12,761 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:55:12,761 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:55:12,761 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15862890882, 'pwd': '12345678'}}
INFO 2021-04-09 21:55:12,983 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:55:12,983 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:55:13,138 [test_register.py-->line:92]:数据库断言成功
INFO 2021-04-09 21:55:13,138 [test_register.py-->line:94]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-09 21:55:13,138 [test_register.py-->line:33]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
DEBUG 2021-04-09 21:55:13,294 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:55:13,294 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:55:13,294 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15803501564, 'pwd': '12345678', 'type': 0, 'reg_name': '美丽可爱的小简'}}
INFO 2021-04-09 21:55:13,528 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:55:13,529 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:55:13,629 [test_register.py-->line:92]:数据库断言成功
INFO 2021-04-09 21:55:13,629 [test_register.py-->line:94]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-09 21:55:13,629 [test_register.py-->line:33]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
DEBUG 2021-04-09 21:55:13,729 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:55:13,729 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:55:13,729 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15808695786, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 21:55:13,896 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:55:13,897 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:55:14,004 [test_register.py-->line:92]:数据库断言成功
INFO 2021-04-09 21:55:14,005 [test_register.py-->line:94]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-09 21:55:14,005 [test_register.py-->line:33]:用例【不输入手机号】开始测试>>>>>>>
DEBUG 2021-04-09 21:55:14,006 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:55:14,006 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:55:14,006 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 21:55:14,046 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:55:14,046 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:55:14,047 [test_register.py-->line:94]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-09 21:55:14,047 [test_register.py-->line:33]:用例【手机号长度10位】开始测试>>>>>>>
DEBUG 2021-04-09 21:55:14,047 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:55:14,047 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:55:14,047 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 1550000000, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 21:55:14,103 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:55:14,104 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:55:14,104 [test_register.py-->line:94]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-09 21:55:14,104 [test_register.py-->line:33]:用例【手机号长度12位】开始测试>>>>>>>
DEBUG 2021-04-09 21:55:14,104 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:55:14,104 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:55:14,104 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 155000000001, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 21:55:14,158 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:55:14,159 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:55:14,159 [test_register.py-->line:94]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-09 21:55:14,160 [test_register.py-->line:33]:用例【手机号含有非法字符】开始测试>>>>>>>
DEBUG 2021-04-09 21:55:14,161 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:55:14,161 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:55:14,162 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': '1550000000q', 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 21:55:14,220 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:55:14,221 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:55:14,221 [test_register.py-->line:94]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-09 21:55:14,221 [test_register.py-->line:33]:用例【已注册过的手机号】开始测试>>>>>>>
DEBUG 2021-04-09 21:55:14,221 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:55:14,221 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:55:14,221 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15873061802, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 21:55:14,411 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:55:14,411 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:55:14,412 [test_register.py-->line:94]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-09 21:55:14,413 [test_register.py-->line:33]:用例【密码7位】开始测试>>>>>>>
DEBUG 2021-04-09 21:55:14,413 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:55:14,414 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:55:14,414 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15500056781, 'pwd': '1234567', 'type': 1}}
INFO 2021-04-09 21:55:14,464 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:55:14,464 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:55:14,464 [test_register.py-->line:94]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-09 21:55:14,465 [test_register.py-->line:33]:用例【密码17位】开始测试>>>>>>>
DEBUG 2021-04-09 21:55:14,465 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:55:14,465 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:55:14,465 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15500000001, 'pwd': '12345678901234567', 'type': 1}}
INFO 2021-04-09 21:55:14,504 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:55:14,505 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:55:14,505 [test_register.py-->line:94]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-09 21:55:14,505 [test_register.py-->line:33]:用例【不输入密码】开始测试>>>>>>>
DEBUG 2021-04-09 21:55:14,505 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:55:14,505 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:55:14,505 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 13300000001, 'type': 1}}
INFO 2021-04-09 21:55:14,558 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:55:14,558 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:55:14,558 [test_register.py-->line:94]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-09 21:55:14,558 [test_register.py-->line:33]:用例【昵称11位】开始测试>>>>>>>
DEBUG 2021-04-09 21:55:14,558 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:55:14,558 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:55:14,558 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 13303007856, 'pwd': '12345678', 'type': 1, 'reg_name': '12345678909991'}}
INFO 2021-04-09 21:55:14,611 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:55:14,612 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:55:14,612 [test_register.py-->line:94]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-09 21:55:14,612 [test_register.py-->line:33]:用例【类型输入非0，1内容】开始测试>>>>>>>
DEBUG 2021-04-09 21:55:14,612 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:55:14,612 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:55:14,612 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 13300003456, 'pwd': '12345678', 'type': 2}}
INFO 2021-04-09 21:55:14,663 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:55:14,664 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:55:14,664 [test_register.py-->line:94]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-09 21:55:14,664 [test_register.py-->line:29]:**********注册接口测试结束**********
INFO 2021-04-09 21:55:32,093 [test_recharge.py-->line:26]:=========充值接口开始测试==========
INFO 2021-04-09 21:55:32,370 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-09 21:55:32,370 [test_recharge.py-->line:34]:注册用户15818116606成功
INFO 2021-04-09 21:55:32,570 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-09 21:55:32,570 [test_recharge.py-->line:51]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-09 21:55:32,572 [test_recharge.py-->line:51]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-09 21:55:32,573 [test_recharge.py-->line:51]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-09 21:55:32,573 [test_recharge.py-->line:51]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-09 21:55:32,574 [test_recharge.py-->line:51]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-09 21:55:32,574 [test_recharge.py-->line:51]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-09 21:55:32,575 [test_recharge.py-->line:51]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-09 21:55:32,575 [test_recharge.py-->line:51]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-09 21:55:32,576 [test_recharge.py-->line:51]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-09 21:55:32,576 [test_recharge.py-->line:51]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-09 21:55:32,577 [test_recharge.py-->line:51]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-09 21:55:32,577 [test_recharge.py-->line:51]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-09 21:55:32,578 [test_recharge.py-->line:51]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-09 21:55:32,580 [test_recharge.py-->line:51]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-09 21:55:32,581 [test_recharge.py-->line:47]:**********充值接口测试结束**********
INFO 2021-04-09 21:55:32,581 [test_register.py-->line:25]:=========注册接口开始测试==========
INFO 2021-04-09 21:55:32,581 [test_register.py-->line:33]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
DEBUG 2021-04-09 21:55:32,676 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:55:32,676 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:55:32,676 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15806953237, 'pwd': '12345678'}}
INFO 2021-04-09 21:55:32,823 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:55:32,823 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:55:32,921 [test_register.py-->line:92]:数据库断言成功
INFO 2021-04-09 21:55:32,921 [test_register.py-->line:94]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-09 21:55:32,921 [test_register.py-->line:33]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
DEBUG 2021-04-09 21:55:33,016 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:55:33,016 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:55:33,017 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15897634742, 'pwd': '12345678', 'type': 0, 'reg_name': '美丽可爱的小简'}}
INFO 2021-04-09 21:55:33,171 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:55:33,171 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:55:33,266 [test_register.py-->line:92]:数据库断言成功
INFO 2021-04-09 21:55:33,266 [test_register.py-->line:94]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-09 21:55:33,266 [test_register.py-->line:33]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
DEBUG 2021-04-09 21:55:33,361 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:55:33,361 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:55:33,362 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15892107774, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 21:55:33,515 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:55:33,515 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:55:33,611 [test_register.py-->line:92]:数据库断言成功
INFO 2021-04-09 21:55:33,612 [test_register.py-->line:94]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-09 21:55:33,612 [test_register.py-->line:33]:用例【不输入手机号】开始测试>>>>>>>
DEBUG 2021-04-09 21:55:33,612 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:55:33,612 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:55:33,612 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 21:55:33,666 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:55:33,666 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:55:33,666 [test_register.py-->line:94]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-09 21:55:33,666 [test_register.py-->line:33]:用例【手机号长度10位】开始测试>>>>>>>
DEBUG 2021-04-09 21:55:33,666 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:55:33,667 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:55:33,667 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 1550000000, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 21:55:33,719 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:55:33,719 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:55:33,719 [test_register.py-->line:94]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-09 21:55:33,719 [test_register.py-->line:33]:用例【手机号长度12位】开始测试>>>>>>>
DEBUG 2021-04-09 21:55:33,719 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:55:33,720 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:55:33,720 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 155000000001, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 21:55:33,776 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:55:33,776 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:55:33,776 [test_register.py-->line:94]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-09 21:55:33,776 [test_register.py-->line:33]:用例【手机号含有非法字符】开始测试>>>>>>>
DEBUG 2021-04-09 21:55:33,776 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:55:33,777 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:55:33,777 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': '1550000000q', 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 21:55:33,817 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:55:33,817 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:55:33,817 [test_register.py-->line:94]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-09 21:55:33,817 [test_register.py-->line:33]:用例【已注册过的手机号】开始测试>>>>>>>
DEBUG 2021-04-09 21:55:33,817 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:55:33,817 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:55:33,818 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15873061802, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 21:55:33,979 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:55:33,980 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:55:33,980 [test_register.py-->line:94]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-09 21:55:33,980 [test_register.py-->line:33]:用例【密码7位】开始测试>>>>>>>
DEBUG 2021-04-09 21:55:33,980 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:55:33,980 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:55:33,980 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15500056781, 'pwd': '1234567', 'type': 1}}
INFO 2021-04-09 21:55:34,028 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:55:34,029 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:55:34,029 [test_register.py-->line:94]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-09 21:55:34,029 [test_register.py-->line:33]:用例【密码17位】开始测试>>>>>>>
DEBUG 2021-04-09 21:55:34,029 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:55:34,029 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:55:34,029 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15500000001, 'pwd': '12345678901234567', 'type': 1}}
INFO 2021-04-09 21:55:34,082 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:55:34,083 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:55:34,083 [test_register.py-->line:94]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-09 21:55:34,083 [test_register.py-->line:33]:用例【不输入密码】开始测试>>>>>>>
DEBUG 2021-04-09 21:55:34,083 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:55:34,083 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:55:34,083 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 13300000001, 'type': 1}}
INFO 2021-04-09 21:55:34,136 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:55:34,137 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:55:34,137 [test_register.py-->line:94]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-09 21:55:34,137 [test_register.py-->line:33]:用例【昵称11位】开始测试>>>>>>>
DEBUG 2021-04-09 21:55:34,137 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:55:34,137 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:55:34,137 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 13303007856, 'pwd': '12345678', 'type': 1, 'reg_name': '12345678909991'}}
INFO 2021-04-09 21:55:34,187 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:55:34,187 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:55:34,187 [test_register.py-->line:94]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-09 21:55:34,188 [test_register.py-->line:33]:用例【类型输入非0，1内容】开始测试>>>>>>>
DEBUG 2021-04-09 21:55:34,188 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:55:34,188 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:55:34,188 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 13300003456, 'pwd': '12345678', 'type': 2}}
INFO 2021-04-09 21:55:34,242 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:55:34,242 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:55:34,242 [test_register.py-->line:94]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-09 21:55:34,243 [test_register.py-->line:29]:**********注册接口测试结束**********
INFO 2021-04-09 21:56:31,968 [test_recharge.py-->line:26]:=========充值接口开始测试==========
INFO 2021-04-09 21:56:32,394 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-09 21:56:32,394 [test_recharge.py-->line:34]:注册用户15813732080成功
INFO 2021-04-09 21:56:32,657 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-09 21:56:39,901 [test_recharge.py-->line:51]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-09 21:57:38,036 [test_recharge.py-->line:26]:=========充值接口开始测试==========
INFO 2021-04-09 21:57:38,310 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-09 21:57:38,310 [test_recharge.py-->line:34]:注册用户15862127614成功
INFO 2021-04-09 21:57:38,470 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-09 21:57:38,470 [test_recharge.py-->line:51]:用例【充值成功-整数】开始测试>>>>>>>
DEBUG 2021-04-09 21:57:38,470 [test_recharge.py-->line:68]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-09 21:57:38,470 [test_recharge.py-->line:69]:method:post
DEBUG 2021-04-09 21:57:38,470 [test_recharge.py-->line:70]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDAyMjQsImV4cCI6MTYxNzk3Njk1OH0.2Yi0WDWh5WfVhve7dRU5lt83mSf02LuJsUuWG-PrcbxwWA97nOy6K0ZhiJlWsEYPNmRUQy2aObfbgaSlScQzow'}, 'json': {'member_id': 1000340224, 'amount': 888}}
INFO 2021-04-09 21:57:38,513 [test_recharge.py-->line:83]:状态码断言成功！
INFO 2021-04-09 21:57:38,513 [test_recharge.py-->line:96]:请求结果断言成功！
INFO 2021-04-09 21:57:38,537 [test_recharge.py-->line:109]:数据库断言成功
INFO 2021-04-09 21:57:38,538 [test_recharge.py-->line:111]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-09 21:57:38,538 [test_recharge.py-->line:51]:用例【充值成功-1位小数】开始测试>>>>>>>
DEBUG 2021-04-09 21:57:38,538 [test_recharge.py-->line:68]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-09 21:57:38,539 [test_recharge.py-->line:69]:method:post
DEBUG 2021-04-09 21:57:38,539 [test_recharge.py-->line:70]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDAyMjQsImV4cCI6MTYxNzk3Njk1OH0.2Yi0WDWh5WfVhve7dRU5lt83mSf02LuJsUuWG-PrcbxwWA97nOy6K0ZhiJlWsEYPNmRUQy2aObfbgaSlScQzow'}, 'json': {'member_id': 1000340224, 'amount': 888.8}}
INFO 2021-04-09 21:57:38,585 [test_recharge.py-->line:83]:状态码断言成功！
INFO 2021-04-09 21:57:38,585 [test_recharge.py-->line:96]:请求结果断言成功！
INFO 2021-04-09 21:57:38,609 [test_recharge.py-->line:109]:数据库断言成功
INFO 2021-04-09 21:57:38,609 [test_recharge.py-->line:111]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-09 21:57:38,610 [test_recharge.py-->line:51]:用例【充值成功-2位小数】开始测试>>>>>>>
DEBUG 2021-04-09 21:57:38,610 [test_recharge.py-->line:68]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-09 21:57:38,610 [test_recharge.py-->line:69]:method:post
DEBUG 2021-04-09 21:57:38,610 [test_recharge.py-->line:70]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDAyMjQsImV4cCI6MTYxNzk3Njk1OH0.2Yi0WDWh5WfVhve7dRU5lt83mSf02LuJsUuWG-PrcbxwWA97nOy6K0ZhiJlWsEYPNmRUQy2aObfbgaSlScQzow'}, 'json': {'member_id': 1000340224, 'amount': 888.88}}
INFO 2021-04-09 21:57:38,662 [test_recharge.py-->line:83]:状态码断言成功！
INFO 2021-04-09 21:57:38,663 [test_recharge.py-->line:96]:请求结果断言成功！
INFO 2021-04-09 21:57:38,688 [test_recharge.py-->line:109]:数据库断言成功
INFO 2021-04-09 21:57:38,688 [test_recharge.py-->line:111]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-09 21:57:38,688 [test_recharge.py-->line:51]:用例【充值成功-50万】开始测试>>>>>>>
DEBUG 2021-04-09 21:57:38,688 [test_recharge.py-->line:68]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-09 21:57:38,688 [test_recharge.py-->line:69]:method:post
DEBUG 2021-04-09 21:57:38,688 [test_recharge.py-->line:70]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDAyMjQsImV4cCI6MTYxNzk3Njk1OH0.2Yi0WDWh5WfVhve7dRU5lt83mSf02LuJsUuWG-PrcbxwWA97nOy6K0ZhiJlWsEYPNmRUQy2aObfbgaSlScQzow'}, 'json': {'member_id': 1000340224, 'amount': 500000}}
INFO 2021-04-09 21:57:38,735 [test_recharge.py-->line:83]:状态码断言成功！
INFO 2021-04-09 21:57:38,735 [test_recharge.py-->line:96]:请求结果断言成功！
INFO 2021-04-09 21:57:38,760 [test_recharge.py-->line:109]:数据库断言成功
INFO 2021-04-09 21:57:38,760 [test_recharge.py-->line:111]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-09 21:57:38,760 [test_recharge.py-->line:51]:用例【会员id位空】开始测试>>>>>>>
DEBUG 2021-04-09 21:57:38,760 [test_recharge.py-->line:68]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-09 21:57:38,760 [test_recharge.py-->line:69]:method:post
DEBUG 2021-04-09 21:57:38,760 [test_recharge.py-->line:70]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDAyMjQsImV4cCI6MTYxNzk3Njk1OH0.2Yi0WDWh5WfVhve7dRU5lt83mSf02LuJsUuWG-PrcbxwWA97nOy6K0ZhiJlWsEYPNmRUQy2aObfbgaSlScQzow'}, 'json': {'amount': 800}}
INFO 2021-04-09 21:57:38,813 [test_recharge.py-->line:83]:状态码断言成功！
INFO 2021-04-09 21:57:38,813 [test_recharge.py-->line:96]:请求结果断言成功！
INFO 2021-04-09 21:57:38,813 [test_recharge.py-->line:111]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-09 21:57:38,814 [test_recharge.py-->line:51]:用例【id不是当前登陆的用户】开始测试>>>>>>>
DEBUG 2021-04-09 21:57:38,814 [test_recharge.py-->line:68]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-09 21:57:38,814 [test_recharge.py-->line:69]:method:post
DEBUG 2021-04-09 21:57:38,814 [test_recharge.py-->line:70]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDAyMjQsImV4cCI6MTYxNzk3Njk1OH0.2Yi0WDWh5WfVhve7dRU5lt83mSf02LuJsUuWG-PrcbxwWA97nOy6K0ZhiJlWsEYPNmRUQy2aObfbgaSlScQzow'}, 'json': {'member_id': 1, 'amount': 800}}
INFO 2021-04-09 21:57:38,857 [test_recharge.py-->line:83]:状态码断言成功！
INFO 2021-04-09 21:57:38,857 [test_recharge.py-->line:96]:请求结果断言成功！
INFO 2021-04-09 21:57:38,857 [test_recharge.py-->line:111]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-09 21:57:38,857 [test_recharge.py-->line:51]:用例【会员id为字符串】开始测试>>>>>>>
DEBUG 2021-04-09 21:57:38,858 [test_recharge.py-->line:68]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-09 21:57:38,858 [test_recharge.py-->line:69]:method:post
DEBUG 2021-04-09 21:57:38,858 [test_recharge.py-->line:70]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDAyMjQsImV4cCI6MTYxNzk3Njk1OH0.2Yi0WDWh5WfVhve7dRU5lt83mSf02LuJsUuWG-PrcbxwWA97nOy6K0ZhiJlWsEYPNmRUQy2aObfbgaSlScQzow'}, 'json': {'member_id': '1000340224', 'amount': 888}}
INFO 2021-04-09 21:57:38,906 [test_recharge.py-->line:83]:状态码断言成功！
ERROR 2021-04-09 21:57:38,907 [test_recharge.py-->line:90]:请求结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day24\test_cases\test_recharge.py", line 88, in test_recharge
    self.assertEqual(case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-09 21:57:38,908 [test_recharge.py-->line:91]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-09 21:57:38,909 [test_recharge.py-->line:92]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-09 21:57:38,909 [test_recharge.py-->line:93]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000340224, 'leave_amount': 503553.68, 'mobile_phone': '15862127614', 'reg_name': '小柠檬', 'reg_time': '2021-04-09 21:57:38.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-09 21:57:38,910 [test_recharge.py-->line:51]:用例【会员id位小数】开始测试>>>>>>>
DEBUG 2021-04-09 21:57:38,910 [test_recharge.py-->line:68]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-09 21:57:38,910 [test_recharge.py-->line:69]:method:post
DEBUG 2021-04-09 21:57:38,910 [test_recharge.py-->line:70]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDAyMjQsImV4cCI6MTYxNzk3Njk1OH0.2Yi0WDWh5WfVhve7dRU5lt83mSf02LuJsUuWG-PrcbxwWA97nOy6K0ZhiJlWsEYPNmRUQy2aObfbgaSlScQzow'}, 'json': {'member_id': 1.5, 'amount': 888}}
INFO 2021-04-09 21:57:38,953 [test_recharge.py-->line:83]:状态码断言成功！
INFO 2021-04-09 21:57:38,953 [test_recharge.py-->line:96]:请求结果断言成功！
INFO 2021-04-09 21:57:38,953 [test_recharge.py-->line:111]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-09 21:57:38,953 [test_recharge.py-->line:51]:用例【充值金额为0】开始测试>>>>>>>
DEBUG 2021-04-09 21:57:38,953 [test_recharge.py-->line:68]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-09 21:57:38,954 [test_recharge.py-->line:69]:method:post
DEBUG 2021-04-09 21:57:38,954 [test_recharge.py-->line:70]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDAyMjQsImV4cCI6MTYxNzk3Njk1OH0.2Yi0WDWh5WfVhve7dRU5lt83mSf02LuJsUuWG-PrcbxwWA97nOy6K0ZhiJlWsEYPNmRUQy2aObfbgaSlScQzow'}, 'json': {'member_id': 1000340224, 'amount': 0}}
INFO 2021-04-09 21:57:38,995 [test_recharge.py-->line:83]:状态码断言成功！
ERROR 2021-04-09 21:57:38,996 [test_recharge.py-->line:90]:请求结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day24\test_cases\test_recharge.py", line 88, in test_recharge
    self.assertEqual(case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-09 21:57:38,997 [test_recharge.py-->line:91]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-09 21:57:38,998 [test_recharge.py-->line:92]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-09 21:57:38,998 [test_recharge.py-->line:93]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000340224, 'leave_amount': 503553.68, 'mobile_phone': '15862127614', 'reg_name': '小柠檬', 'reg_time': '2021-04-09 21:57:38.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-09 21:57:38,999 [test_recharge.py-->line:51]:用例【充值金额为负数】开始测试>>>>>>>
DEBUG 2021-04-09 21:57:38,999 [test_recharge.py-->line:68]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-09 21:57:38,999 [test_recharge.py-->line:69]:method:post
DEBUG 2021-04-09 21:57:38,999 [test_recharge.py-->line:70]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDAyMjQsImV4cCI6MTYxNzk3Njk1OH0.2Yi0WDWh5WfVhve7dRU5lt83mSf02LuJsUuWG-PrcbxwWA97nOy6K0ZhiJlWsEYPNmRUQy2aObfbgaSlScQzow'}, 'json': {'member_id': 1000340224, 'amount': -888}}
INFO 2021-04-09 21:57:39,041 [test_recharge.py-->line:83]:状态码断言成功！
INFO 2021-04-09 21:57:39,041 [test_recharge.py-->line:96]:请求结果断言成功！
INFO 2021-04-09 21:57:39,041 [test_recharge.py-->line:111]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-09 21:57:39,041 [test_recharge.py-->line:51]:用例【充值金额为空】开始测试>>>>>>>
DEBUG 2021-04-09 21:57:39,041 [test_recharge.py-->line:68]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-09 21:57:39,041 [test_recharge.py-->line:69]:method:post
DEBUG 2021-04-09 21:57:39,041 [test_recharge.py-->line:70]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDAyMjQsImV4cCI6MTYxNzk3Njk1OH0.2Yi0WDWh5WfVhve7dRU5lt83mSf02LuJsUuWG-PrcbxwWA97nOy6K0ZhiJlWsEYPNmRUQy2aObfbgaSlScQzow'}, 'json': {'member_id': 1000340224}}
INFO 2021-04-09 21:57:39,079 [test_recharge.py-->line:83]:状态码断言成功！
INFO 2021-04-09 21:57:39,079 [test_recharge.py-->line:96]:请求结果断言成功！
INFO 2021-04-09 21:57:39,079 [test_recharge.py-->line:111]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-09 21:57:39,079 [test_recharge.py-->line:51]:用例【充值金额3位小数】开始测试>>>>>>>
DEBUG 2021-04-09 21:57:39,079 [test_recharge.py-->line:68]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-09 21:57:39,079 [test_recharge.py-->line:69]:method:post
DEBUG 2021-04-09 21:57:39,080 [test_recharge.py-->line:70]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDAyMjQsImV4cCI6MTYxNzk3Njk1OH0.2Yi0WDWh5WfVhve7dRU5lt83mSf02LuJsUuWG-PrcbxwWA97nOy6K0ZhiJlWsEYPNmRUQy2aObfbgaSlScQzow'}, 'json': {'member_id': 1000340224, 'amount': 888.888}}
INFO 2021-04-09 21:57:39,132 [test_recharge.py-->line:83]:状态码断言成功！
INFO 2021-04-09 21:57:39,132 [test_recharge.py-->line:96]:请求结果断言成功！
INFO 2021-04-09 21:57:39,132 [test_recharge.py-->line:111]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-09 21:57:39,133 [test_recharge.py-->line:51]:用例【充值金额大于50万】开始测试>>>>>>>
DEBUG 2021-04-09 21:57:39,133 [test_recharge.py-->line:68]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-09 21:57:39,133 [test_recharge.py-->line:69]:method:post
DEBUG 2021-04-09 21:57:39,133 [test_recharge.py-->line:70]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDAyMjQsImV4cCI6MTYxNzk3Njk1OH0.2Yi0WDWh5WfVhve7dRU5lt83mSf02LuJsUuWG-PrcbxwWA97nOy6K0ZhiJlWsEYPNmRUQy2aObfbgaSlScQzow'}, 'json': {'member_id': 1000340224, 'amount': 500001}}
INFO 2021-04-09 21:57:39,172 [test_recharge.py-->line:83]:状态码断言成功！
INFO 2021-04-09 21:57:39,172 [test_recharge.py-->line:96]:请求结果断言成功！
INFO 2021-04-09 21:57:39,172 [test_recharge.py-->line:111]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-09 21:57:39,173 [test_recharge.py-->line:51]:用例【充值金额非数字】开始测试>>>>>>>
DEBUG 2021-04-09 21:57:39,173 [test_recharge.py-->line:68]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-09 21:57:39,173 [test_recharge.py-->line:69]:method:post
DEBUG 2021-04-09 21:57:39,173 [test_recharge.py-->line:70]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDAyMjQsImV4cCI6MTYxNzk3Njk1OH0.2Yi0WDWh5WfVhve7dRU5lt83mSf02LuJsUuWG-PrcbxwWA97nOy6K0ZhiJlWsEYPNmRUQy2aObfbgaSlScQzow'}, 'json': {'member_id': 1000340224, 'amount': '50万'}}
INFO 2021-04-09 21:57:39,215 [test_recharge.py-->line:83]:状态码断言成功！
INFO 2021-04-09 21:57:39,215 [test_recharge.py-->line:96]:请求结果断言成功！
INFO 2021-04-09 21:57:39,215 [test_recharge.py-->line:111]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-09 21:57:39,215 [test_recharge.py-->line:47]:**********充值接口测试结束**********
INFO 2021-04-09 21:57:39,215 [test_register.py-->line:25]:=========注册接口开始测试==========
INFO 2021-04-09 21:57:39,215 [test_register.py-->line:33]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
DEBUG 2021-04-09 21:57:39,319 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:57:39,319 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:57:39,319 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15866003102, 'pwd': '12345678'}}
INFO 2021-04-09 21:57:39,470 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:57:39,470 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:57:39,574 [test_register.py-->line:92]:数据库断言成功
INFO 2021-04-09 21:57:39,574 [test_register.py-->line:94]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-09 21:57:39,574 [test_register.py-->line:33]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
DEBUG 2021-04-09 21:57:39,678 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:57:39,679 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:57:39,679 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15879227591, 'pwd': '12345678', 'type': 0, 'reg_name': '美丽可爱的小简'}}
INFO 2021-04-09 21:57:39,849 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:57:39,849 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:57:39,960 [test_register.py-->line:92]:数据库断言成功
INFO 2021-04-09 21:57:39,960 [test_register.py-->line:94]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-09 21:57:39,960 [test_register.py-->line:33]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
DEBUG 2021-04-09 21:57:40,064 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:57:40,064 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:57:40,064 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15870828050, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 21:57:40,215 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:57:40,215 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:57:40,317 [test_register.py-->line:92]:数据库断言成功
INFO 2021-04-09 21:57:40,317 [test_register.py-->line:94]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-09 21:57:40,317 [test_register.py-->line:33]:用例【不输入手机号】开始测试>>>>>>>
DEBUG 2021-04-09 21:57:40,317 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:57:40,317 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:57:40,318 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 21:57:40,373 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:57:40,373 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:57:40,373 [test_register.py-->line:94]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-09 21:57:40,374 [test_register.py-->line:33]:用例【手机号长度10位】开始测试>>>>>>>
DEBUG 2021-04-09 21:57:40,374 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:57:40,374 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:57:40,374 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 1550000000, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 21:57:40,423 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:57:40,423 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:57:40,423 [test_register.py-->line:94]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-09 21:57:40,423 [test_register.py-->line:33]:用例【手机号长度12位】开始测试>>>>>>>
DEBUG 2021-04-09 21:57:40,423 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:57:40,424 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:57:40,424 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 155000000001, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 21:57:40,462 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:57:40,464 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:57:40,464 [test_register.py-->line:94]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-09 21:57:40,465 [test_register.py-->line:33]:用例【手机号含有非法字符】开始测试>>>>>>>
DEBUG 2021-04-09 21:57:40,465 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:57:40,466 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:57:40,466 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': '1550000000q', 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 21:57:40,521 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:57:40,521 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:57:40,521 [test_register.py-->line:94]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-09 21:57:40,521 [test_register.py-->line:33]:用例【已注册过的手机号】开始测试>>>>>>>
DEBUG 2021-04-09 21:57:40,521 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:57:40,521 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:57:40,521 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15873061802, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-09 21:57:40,673 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:57:40,673 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:57:40,673 [test_register.py-->line:94]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-09 21:57:40,673 [test_register.py-->line:33]:用例【密码7位】开始测试>>>>>>>
DEBUG 2021-04-09 21:57:40,673 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:57:40,673 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:57:40,673 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15500056781, 'pwd': '1234567', 'type': 1}}
INFO 2021-04-09 21:57:40,714 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:57:40,714 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:57:40,714 [test_register.py-->line:94]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-09 21:57:40,714 [test_register.py-->line:33]:用例【密码17位】开始测试>>>>>>>
DEBUG 2021-04-09 21:57:40,714 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:57:40,714 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:57:40,714 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15500000001, 'pwd': '12345678901234567', 'type': 1}}
INFO 2021-04-09 21:57:40,751 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:57:40,752 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:57:40,752 [test_register.py-->line:94]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-09 21:57:40,752 [test_register.py-->line:33]:用例【不输入密码】开始测试>>>>>>>
DEBUG 2021-04-09 21:57:40,752 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:57:40,752 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:57:40,752 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 13300000001, 'type': 1}}
INFO 2021-04-09 21:57:40,793 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:57:40,793 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:57:40,793 [test_register.py-->line:94]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-09 21:57:40,793 [test_register.py-->line:33]:用例【昵称11位】开始测试>>>>>>>
DEBUG 2021-04-09 21:57:40,793 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:57:40,793 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:57:40,793 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 13303007856, 'pwd': '12345678', 'type': 1, 'reg_name': '12345678909991'}}
INFO 2021-04-09 21:57:40,847 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:57:40,847 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:57:40,847 [test_register.py-->line:94]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-09 21:57:40,847 [test_register.py-->line:33]:用例【类型输入非0，1内容】开始测试>>>>>>>
DEBUG 2021-04-09 21:57:40,847 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-09 21:57:40,847 [test_register.py-->line:52]:method:post
DEBUG 2021-04-09 21:57:40,847 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 13300003456, 'pwd': '12345678', 'type': 2}}
INFO 2021-04-09 21:57:40,884 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-09 21:57:40,884 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-09 21:57:40,884 [test_register.py-->line:94]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-09 21:57:40,884 [test_register.py-->line:29]:**********注册接口测试结束**********
INFO 2021-04-09 21:59:06,054 [test_recharge.py-->line:26]:=========充值接口开始测试==========
INFO 2021-04-09 21:59:32,915 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-09 21:59:38,503 [test_recharge.py-->line:34]:注册用户15833085338成功
INFO 2021-04-09 21:59:40,133 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-09 22:00:59,480 [test_recharge.py-->line:51]:用例【充值成功-整数】开始测试>>>>>>>
DEBUG 2021-04-09 22:02:18,249 [test_recharge.py-->line:68]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-09 22:02:18,250 [test_recharge.py-->line:69]:method:post
DEBUG 2021-04-09 22:02:18,250 [test_recharge.py-->line:70]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDAyMzEsImV4cCI6MTYxNzk3NzA3OX0.kMMnaA9JlqCQDyY2oCQ0lvaTx1Mrh0hd_QicMw9CvjrU1fyO4khvfPrilIG1JvnD5xCPvdoNcH0ga1Z-8sIzxw'}, 'json': {'member_id': 1000340231, 'amount': 888}}
INFO 2021-04-09 22:02:18,298 [test_recharge.py-->line:83]:状态码断言成功！
INFO 2021-04-09 22:02:18,298 [test_recharge.py-->line:96]:请求结果断言成功！
INFO 2021-04-09 22:02:18,323 [test_recharge.py-->line:109]:数据库断言成功
INFO 2021-04-09 22:02:18,323 [test_recharge.py-->line:111]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-09 22:02:18,323 [test_recharge.py-->line:51]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-12 20:51:21,214 [test_recharge.py-->line:30]:=========充值接口开始测试==========
INFO 2021-04-12 20:51:21,547 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-12 20:51:21,548 [test_recharge.py-->line:38]:注册用户15827871853成功
INFO 2021-04-12 20:51:21,787 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-12 20:51:21,788 [test_recharge.py-->line:55]:用例【充值成功-整数】开始测试>>>>>>>
DEBUG 2021-04-12 20:51:21,788 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 20:51:21,788 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 20:51:21,788 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUwNDgsImV4cCI6MTYxODIzMjE4MX0.09Q9wuwYCNhauWXKSp6Rim63Es2nYJXyE1exsYA0eH2Q3fRlP-fWFSNvg1YdXeAUTjtukZ6ZoKFr3Ap02ASh7Q'}, 'json': {'member_id': 1000345048, 'amount': 888}}
INFO 2021-04-12 20:51:21,836 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 20:51:21,836 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 20:51:21,851 [test_recharge.py-->line:117]:数据库断言成功
INFO 2021-04-12 20:51:21,851 [test_recharge.py-->line:119]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-12 20:51:21,851 [test_recharge.py-->line:55]:用例【充值成功-1位小数】开始测试>>>>>>>
DEBUG 2021-04-12 20:51:21,851 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 20:51:21,851 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 20:51:21,852 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUwNDgsImV4cCI6MTYxODIzMjE4MX0.09Q9wuwYCNhauWXKSp6Rim63Es2nYJXyE1exsYA0eH2Q3fRlP-fWFSNvg1YdXeAUTjtukZ6ZoKFr3Ap02ASh7Q'}, 'json': {'member_id': 1000345048, 'amount': 888.8}}
INFO 2021-04-12 20:51:21,908 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 20:51:21,908 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 20:51:21,924 [test_recharge.py-->line:117]:数据库断言成功
INFO 2021-04-12 20:51:21,924 [test_recharge.py-->line:119]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-12 20:51:21,924 [test_recharge.py-->line:55]:用例【充值成功-2位小数】开始测试>>>>>>>
DEBUG 2021-04-12 20:51:21,924 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 20:51:21,924 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 20:51:21,924 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUwNDgsImV4cCI6MTYxODIzMjE4MX0.09Q9wuwYCNhauWXKSp6Rim63Es2nYJXyE1exsYA0eH2Q3fRlP-fWFSNvg1YdXeAUTjtukZ6ZoKFr3Ap02ASh7Q'}, 'json': {'member_id': 1000345048, 'amount': 888.88}}
INFO 2021-04-12 20:51:21,982 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 20:51:21,982 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 20:51:21,997 [test_recharge.py-->line:117]:数据库断言成功
INFO 2021-04-12 20:51:21,998 [test_recharge.py-->line:119]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-12 20:51:21,998 [test_recharge.py-->line:55]:用例【充值成功-50万】开始测试>>>>>>>
DEBUG 2021-04-12 20:51:21,998 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 20:51:21,998 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 20:51:21,998 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUwNDgsImV4cCI6MTYxODIzMjE4MX0.09Q9wuwYCNhauWXKSp6Rim63Es2nYJXyE1exsYA0eH2Q3fRlP-fWFSNvg1YdXeAUTjtukZ6ZoKFr3Ap02ASh7Q'}, 'json': {'member_id': 1000345048, 'amount': 500000}}
INFO 2021-04-12 20:51:22,060 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 20:51:22,060 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 20:51:22,076 [test_recharge.py-->line:117]:数据库断言成功
INFO 2021-04-12 20:51:22,077 [test_recharge.py-->line:119]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-12 20:51:22,077 [test_recharge.py-->line:55]:用例【会员id位空】开始测试>>>>>>>
DEBUG 2021-04-12 20:51:22,077 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 20:51:22,077 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 20:51:22,077 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUwNDgsImV4cCI6MTYxODIzMjE4MX0.09Q9wuwYCNhauWXKSp6Rim63Es2nYJXyE1exsYA0eH2Q3fRlP-fWFSNvg1YdXeAUTjtukZ6ZoKFr3Ap02ASh7Q'}, 'json': {'amount': 800}}
INFO 2021-04-12 20:51:22,132 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 20:51:22,132 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 20:51:22,132 [test_recharge.py-->line:119]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-12 20:51:22,132 [test_recharge.py-->line:55]:用例【id不是当前登陆的用户】开始测试>>>>>>>
DEBUG 2021-04-12 20:51:22,132 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 20:51:22,132 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 20:51:22,132 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUwNDgsImV4cCI6MTYxODIzMjE4MX0.09Q9wuwYCNhauWXKSp6Rim63Es2nYJXyE1exsYA0eH2Q3fRlP-fWFSNvg1YdXeAUTjtukZ6ZoKFr3Ap02ASh7Q'}, 'json': {'member_id': 1, 'amount': 800}}
INFO 2021-04-12 20:51:22,173 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 20:51:22,173 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 20:51:22,173 [test_recharge.py-->line:119]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-12 20:51:22,173 [test_recharge.py-->line:55]:用例【会员id为字符串】开始测试>>>>>>>
DEBUG 2021-04-12 20:51:22,174 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 20:51:22,174 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 20:51:22,174 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUwNDgsImV4cCI6MTYxODIzMjE4MX0.09Q9wuwYCNhauWXKSp6Rim63Es2nYJXyE1exsYA0eH2Q3fRlP-fWFSNvg1YdXeAUTjtukZ6ZoKFr3Ap02ASh7Q'}, 'json': {'member_id': '1000345048', 'amount': 888}}
INFO 2021-04-12 20:51:22,236 [test_recharge.py-->line:91]:状态码断言成功！
ERROR 2021-04-12 20:51:22,237 [test_recharge.py-->line:98]:请求结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day25\test_cases\test_recharge.py", line 96, in test_recharge
    self.assertEqual(case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-12 20:51:22,242 [test_recharge.py-->line:99]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-12 20:51:22,242 [test_recharge.py-->line:100]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-12 20:51:22,243 [test_recharge.py-->line:101]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000345048, 'leave_amount': 503553.68, 'mobile_phone': '15827871853', 'reg_name': '小柠檬', 'reg_time': '2021-04-12 20:51:21.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-12 20:51:22,244 [test_recharge.py-->line:55]:用例【会员id位小数】开始测试>>>>>>>
DEBUG 2021-04-12 20:51:22,244 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 20:51:22,244 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 20:51:22,244 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUwNDgsImV4cCI6MTYxODIzMjE4MX0.09Q9wuwYCNhauWXKSp6Rim63Es2nYJXyE1exsYA0eH2Q3fRlP-fWFSNvg1YdXeAUTjtukZ6ZoKFr3Ap02ASh7Q'}, 'json': {'member_id': 1.5, 'amount': 888}}
INFO 2021-04-12 20:51:22,285 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 20:51:22,286 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 20:51:22,286 [test_recharge.py-->line:119]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-12 20:51:22,286 [test_recharge.py-->line:55]:用例【充值金额为0】开始测试>>>>>>>
DEBUG 2021-04-12 20:51:22,287 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 20:51:22,287 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 20:51:22,287 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUwNDgsImV4cCI6MTYxODIzMjE4MX0.09Q9wuwYCNhauWXKSp6Rim63Es2nYJXyE1exsYA0eH2Q3fRlP-fWFSNvg1YdXeAUTjtukZ6ZoKFr3Ap02ASh7Q'}, 'json': {'member_id': 1000345048, 'amount': 0}}
INFO 2021-04-12 20:51:22,347 [test_recharge.py-->line:91]:状态码断言成功！
ERROR 2021-04-12 20:51:22,347 [test_recharge.py-->line:98]:请求结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day25\test_cases\test_recharge.py", line 96, in test_recharge
    self.assertEqual(case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-12 20:51:22,347 [test_recharge.py-->line:99]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-12 20:51:22,348 [test_recharge.py-->line:100]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-12 20:51:22,348 [test_recharge.py-->line:101]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000345048, 'leave_amount': 503553.68, 'mobile_phone': '15827871853', 'reg_name': '小柠檬', 'reg_time': '2021-04-12 20:51:21.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-12 20:51:22,348 [test_recharge.py-->line:55]:用例【充值金额为负数】开始测试>>>>>>>
DEBUG 2021-04-12 20:51:22,348 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 20:51:22,348 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 20:51:22,348 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUwNDgsImV4cCI6MTYxODIzMjE4MX0.09Q9wuwYCNhauWXKSp6Rim63Es2nYJXyE1exsYA0eH2Q3fRlP-fWFSNvg1YdXeAUTjtukZ6ZoKFr3Ap02ASh7Q'}, 'json': {'member_id': 1000345048, 'amount': -888}}
INFO 2021-04-12 20:51:22,403 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 20:51:22,404 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 20:51:22,404 [test_recharge.py-->line:119]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-12 20:51:22,404 [test_recharge.py-->line:55]:用例【充值金额为空】开始测试>>>>>>>
DEBUG 2021-04-12 20:51:22,404 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 20:51:22,404 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 20:51:22,404 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUwNDgsImV4cCI6MTYxODIzMjE4MX0.09Q9wuwYCNhauWXKSp6Rim63Es2nYJXyE1exsYA0eH2Q3fRlP-fWFSNvg1YdXeAUTjtukZ6ZoKFr3Ap02ASh7Q'}, 'json': {'member_id': 1000345048}}
INFO 2021-04-12 20:51:22,457 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 20:51:22,458 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 20:51:22,458 [test_recharge.py-->line:119]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-12 20:51:22,458 [test_recharge.py-->line:55]:用例【充值金额3位小数】开始测试>>>>>>>
DEBUG 2021-04-12 20:51:22,458 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 20:51:22,458 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 20:51:22,459 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUwNDgsImV4cCI6MTYxODIzMjE4MX0.09Q9wuwYCNhauWXKSp6Rim63Es2nYJXyE1exsYA0eH2Q3fRlP-fWFSNvg1YdXeAUTjtukZ6ZoKFr3Ap02ASh7Q'}, 'json': {'member_id': 1000345048, 'amount': 888.888}}
INFO 2021-04-12 20:51:22,512 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 20:51:22,512 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 20:51:22,512 [test_recharge.py-->line:119]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-12 20:51:22,512 [test_recharge.py-->line:55]:用例【充值金额大于50万】开始测试>>>>>>>
DEBUG 2021-04-12 20:51:22,512 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 20:51:22,512 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 20:51:22,512 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUwNDgsImV4cCI6MTYxODIzMjE4MX0.09Q9wuwYCNhauWXKSp6Rim63Es2nYJXyE1exsYA0eH2Q3fRlP-fWFSNvg1YdXeAUTjtukZ6ZoKFr3Ap02ASh7Q'}, 'json': {'member_id': 1000345048, 'amount': 500001}}
INFO 2021-04-12 20:51:22,575 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 20:51:22,575 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 20:51:22,575 [test_recharge.py-->line:119]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-12 20:51:22,575 [test_recharge.py-->line:55]:用例【充值金额非数字】开始测试>>>>>>>
DEBUG 2021-04-12 20:51:22,576 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 20:51:22,576 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 20:51:22,576 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUwNDgsImV4cCI6MTYxODIzMjE4MX0.09Q9wuwYCNhauWXKSp6Rim63Es2nYJXyE1exsYA0eH2Q3fRlP-fWFSNvg1YdXeAUTjtukZ6ZoKFr3Ap02ASh7Q'}, 'json': {'member_id': 1000345048, 'amount': '50万'}}
INFO 2021-04-12 20:51:22,614 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 20:51:22,614 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 20:51:22,614 [test_recharge.py-->line:119]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-12 20:51:22,614 [test_recharge.py-->line:51]:**********充值接口测试结束**********
INFO 2021-04-12 20:51:22,615 [test_register.py-->line:25]:=========注册接口开始测试==========
INFO 2021-04-12 20:51:22,615 [test_register.py-->line:33]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
DEBUG 2021-04-12 20:51:22,767 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 20:51:22,767 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 20:51:22,767 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15852618818, 'pwd': '12345678'}}
INFO 2021-04-12 20:51:22,922 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 20:51:22,922 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 20:51:23,021 [test_register.py-->line:92]:数据库断言成功
INFO 2021-04-12 20:51:23,021 [test_register.py-->line:94]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-12 20:51:23,021 [test_register.py-->line:33]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
DEBUG 2021-04-12 20:51:23,173 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 20:51:23,174 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 20:51:23,174 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15839586628, 'pwd': '12345678', 'type': 0, 'reg_name': '美丽可爱的小简'}}
INFO 2021-04-12 20:51:23,358 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 20:51:23,359 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 20:51:23,466 [test_register.py-->line:92]:数据库断言成功
INFO 2021-04-12 20:51:23,466 [test_register.py-->line:94]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-12 20:51:23,466 [test_register.py-->line:33]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
DEBUG 2021-04-12 20:51:23,619 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 20:51:23,620 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 20:51:23,620 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15874675371, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-12 20:51:23,804 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 20:51:23,804 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 20:51:23,953 [test_register.py-->line:92]:数据库断言成功
INFO 2021-04-12 20:51:23,953 [test_register.py-->line:94]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-12 20:51:23,956 [test_register.py-->line:33]:用例【不输入手机号】开始测试>>>>>>>
DEBUG 2021-04-12 20:51:23,957 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 20:51:23,957 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 20:51:23,957 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'pwd': '12345678', 'type': 1}}
INFO 2021-04-12 20:51:24,010 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 20:51:24,010 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 20:51:24,010 [test_register.py-->line:94]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-12 20:51:24,011 [test_register.py-->line:33]:用例【手机号长度10位】开始测试>>>>>>>
DEBUG 2021-04-12 20:51:24,011 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 20:51:24,011 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 20:51:24,011 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 1550000000, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-12 20:51:24,054 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 20:51:24,055 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 20:51:24,055 [test_register.py-->line:94]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-12 20:51:24,055 [test_register.py-->line:33]:用例【手机号长度12位】开始测试>>>>>>>
DEBUG 2021-04-12 20:51:24,055 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 20:51:24,055 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 20:51:24,055 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 155000000001, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-12 20:51:24,107 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 20:51:24,107 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 20:51:24,107 [test_register.py-->line:94]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-12 20:51:24,107 [test_register.py-->line:33]:用例【手机号含有非法字符】开始测试>>>>>>>
DEBUG 2021-04-12 20:51:24,107 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 20:51:24,108 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 20:51:24,108 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': '1550000000q', 'pwd': '12345678', 'type': 1}}
INFO 2021-04-12 20:51:24,158 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 20:51:24,158 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 20:51:24,158 [test_register.py-->line:94]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-12 20:51:24,158 [test_register.py-->line:33]:用例【已注册过的手机号】开始测试>>>>>>>
DEBUG 2021-04-12 20:51:24,158 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 20:51:24,158 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 20:51:24,158 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15873061802, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-12 20:51:24,326 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 20:51:24,326 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 20:51:24,326 [test_register.py-->line:94]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-12 20:51:24,326 [test_register.py-->line:33]:用例【密码7位】开始测试>>>>>>>
DEBUG 2021-04-12 20:51:24,326 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 20:51:24,326 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 20:51:24,326 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15500056781, 'pwd': '1234567', 'type': 1}}
INFO 2021-04-12 20:51:24,379 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 20:51:24,379 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 20:51:24,379 [test_register.py-->line:94]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-12 20:51:24,379 [test_register.py-->line:33]:用例【密码17位】开始测试>>>>>>>
DEBUG 2021-04-12 20:51:24,380 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 20:51:24,380 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 20:51:24,380 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15500000001, 'pwd': '12345678901234567', 'type': 1}}
INFO 2021-04-12 20:51:24,430 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 20:51:24,431 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 20:51:24,431 [test_register.py-->line:94]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-12 20:51:24,431 [test_register.py-->line:33]:用例【不输入密码】开始测试>>>>>>>
DEBUG 2021-04-12 20:51:24,431 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 20:51:24,431 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 20:51:24,431 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 13300000001, 'type': 1}}
INFO 2021-04-12 20:51:24,468 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 20:51:24,468 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 20:51:24,469 [test_register.py-->line:94]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-12 20:51:24,469 [test_register.py-->line:33]:用例【昵称11位】开始测试>>>>>>>
DEBUG 2021-04-12 20:51:24,469 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 20:51:24,469 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 20:51:24,469 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 13303007856, 'pwd': '12345678', 'type': 1, 'reg_name': '12345678909991'}}
INFO 2021-04-12 20:51:24,514 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 20:51:24,515 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 20:51:24,515 [test_register.py-->line:94]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-12 20:51:24,515 [test_register.py-->line:33]:用例【类型输入非0，1内容】开始测试>>>>>>>
DEBUG 2021-04-12 20:51:24,515 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 20:51:24,515 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 20:51:24,515 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 13300003456, 'pwd': '12345678', 'type': 2}}
INFO 2021-04-12 20:51:24,565 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 20:51:24,565 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 20:51:24,565 [test_register.py-->line:94]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-12 20:51:24,565 [test_register.py-->line:29]:**********注册接口测试结束**********
INFO 2021-04-12 21:38:37,973 [test_audit.py-->line:30]:=========添加项目接口开始测试==========
INFO 2021-04-12 21:38:38,244 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-12 21:38:38,244 [test_audit.py-->line:38]:注册普通用户15853382682成功
INFO 2021-04-12 21:38:38,409 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-12 21:38:38,661 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-12 21:38:38,661 [test_audit.py-->line:54]:注册用户15858298498成功
INFO 2021-04-12 21:38:38,824 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-12 21:38:38,866 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-12 21:38:38,867 [test_audit.py-->line:75]:添加项目成功！
INFO 2021-04-12 21:38:38,867 [test_audit.py-->line:85]:用例【审核成功-通过】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:38,867 [test_audit.py-->line:106]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-12 21:38:38,867 [test_audit.py-->line:107]:method:patch
DEBUG 2021-04-12 21:38:38,867 [test_audit.py-->line:108]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyMzQsImV4cCI6MTYxODIzNTAxOH0.ErkTODJ_pzs24mCbh7wmECk3H2rtDrK-Nlxf0bUKmyFHTWTdCOzBTNUOE-M-nlg3z8-vd_Off7MS-kyCA-zW7g'}, 'json': {'loan_id': 2038330, 'approved_or_not': True}}
INFO 2021-04-12 21:38:38,920 [test_audit.py-->line:121]:状态码断言成功！
INFO 2021-04-12 21:38:38,920 [test_audit.py-->line:134]:请求结果断言成功！
INFO 2021-04-12 21:38:38,944 [test_audit.py-->line:147]:数据库断言成功
INFO 2021-04-12 21:38:38,944 [test_audit.py-->line:149]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-12 21:38:38,997 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-12 21:38:38,997 [test_audit.py-->line:75]:添加项目成功！
INFO 2021-04-12 21:38:38,998 [test_audit.py-->line:85]:用例【审核成功-不通过】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:38,998 [test_audit.py-->line:106]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-12 21:38:38,998 [test_audit.py-->line:107]:method:patch
DEBUG 2021-04-12 21:38:38,998 [test_audit.py-->line:108]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyMzQsImV4cCI6MTYxODIzNTAxOH0.ErkTODJ_pzs24mCbh7wmECk3H2rtDrK-Nlxf0bUKmyFHTWTdCOzBTNUOE-M-nlg3z8-vd_Off7MS-kyCA-zW7g'}, 'json': {'loan_id': 2038331, 'approved_or_not': False}}
INFO 2021-04-12 21:38:39,037 [test_audit.py-->line:121]:状态码断言成功！
INFO 2021-04-12 21:38:39,037 [test_audit.py-->line:134]:请求结果断言成功！
INFO 2021-04-12 21:38:39,059 [test_audit.py-->line:147]:数据库断言成功
INFO 2021-04-12 21:38:39,060 [test_audit.py-->line:149]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-12 21:38:39,113 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-12 21:38:39,113 [test_audit.py-->line:75]:添加项目成功！
INFO 2021-04-12 21:38:39,114 [test_audit.py-->line:85]:用例【项目id为空】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:39,114 [test_audit.py-->line:106]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-12 21:38:39,114 [test_audit.py-->line:107]:method:patch
DEBUG 2021-04-12 21:38:39,114 [test_audit.py-->line:108]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyMzQsImV4cCI6MTYxODIzNTAxOH0.ErkTODJ_pzs24mCbh7wmECk3H2rtDrK-Nlxf0bUKmyFHTWTdCOzBTNUOE-M-nlg3z8-vd_Off7MS-kyCA-zW7g'}, 'json': {'approved_or_not': True}}
INFO 2021-04-12 21:38:39,165 [test_audit.py-->line:121]:状态码断言成功！
INFO 2021-04-12 21:38:39,166 [test_audit.py-->line:134]:请求结果断言成功！
INFO 2021-04-12 21:38:39,166 [test_audit.py-->line:149]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-12 21:38:39,221 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-12 21:38:39,221 [test_audit.py-->line:75]:添加项目成功！
INFO 2021-04-12 21:38:39,221 [test_audit.py-->line:85]:用例【项目id不是整数】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:39,221 [test_audit.py-->line:106]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-12 21:38:39,221 [test_audit.py-->line:107]:method:patch
DEBUG 2021-04-12 21:38:39,221 [test_audit.py-->line:108]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyMzQsImV4cCI6MTYxODIzNTAxOH0.ErkTODJ_pzs24mCbh7wmECk3H2rtDrK-Nlxf0bUKmyFHTWTdCOzBTNUOE-M-nlg3z8-vd_Off7MS-kyCA-zW7g'}, 'json': {'loan_id': '2038333', 'approved_or_not': True}}
INFO 2021-04-12 21:38:39,267 [test_audit.py-->line:121]:状态码断言成功！
ERROR 2021-04-12 21:38:39,267 [test_audit.py-->line:128]:请求结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day25\test_cases\test_audit.py", line 126, in test_audit
    self.assertEqual(case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-12 21:38:39,273 [test_audit.py-->line:129]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-12 21:38:39,273 [test_audit.py-->line:130]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-12 21:38:39,273 [test_audit.py-->line:131]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-12 21:38:39,329 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-12 21:38:39,329 [test_audit.py-->line:75]:添加项目成功！
INFO 2021-04-12 21:38:39,329 [test_audit.py-->line:85]:用例【不存在的项目id】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:39,329 [test_audit.py-->line:106]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-12 21:38:39,329 [test_audit.py-->line:107]:method:patch
DEBUG 2021-04-12 21:38:39,329 [test_audit.py-->line:108]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyMzQsImV4cCI6MTYxODIzNTAxOH0.ErkTODJ_pzs24mCbh7wmECk3H2rtDrK-Nlxf0bUKmyFHTWTdCOzBTNUOE-M-nlg3z8-vd_Off7MS-kyCA-zW7g'}, 'json': {'loan_id': 100000, 'approved_or_not': False}}
INFO 2021-04-12 21:38:39,385 [test_audit.py-->line:121]:状态码断言成功！
INFO 2021-04-12 21:38:39,385 [test_audit.py-->line:134]:请求结果断言成功！
INFO 2021-04-12 21:38:39,385 [test_audit.py-->line:149]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-12 21:38:39,428 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-12 21:38:39,429 [test_audit.py-->line:75]:添加项目成功！
INFO 2021-04-12 21:38:39,429 [test_audit.py-->line:85]:用例【审核状态不是布尔值】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:39,429 [test_audit.py-->line:106]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-12 21:38:39,429 [test_audit.py-->line:107]:method:patch
DEBUG 2021-04-12 21:38:39,429 [test_audit.py-->line:108]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyMzQsImV4cCI6MTYxODIzNTAxOH0.ErkTODJ_pzs24mCbh7wmECk3H2rtDrK-Nlxf0bUKmyFHTWTdCOzBTNUOE-M-nlg3z8-vd_Off7MS-kyCA-zW7g'}, 'json': {'loan_id': 2038335, 'approved_or_not': 2}}
INFO 2021-04-12 21:38:39,486 [test_audit.py-->line:121]:状态码断言成功！
INFO 2021-04-12 21:38:39,486 [test_audit.py-->line:134]:请求结果断言成功！
INFO 2021-04-12 21:38:39,486 [test_audit.py-->line:149]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-12 21:38:39,540 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-12 21:38:39,540 [test_audit.py-->line:75]:添加项目成功！
INFO 2021-04-12 21:38:39,540 [test_audit.py-->line:85]:用例【审核状态不存在】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:39,540 [test_audit.py-->line:106]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-12 21:38:39,540 [test_audit.py-->line:107]:method:patch
DEBUG 2021-04-12 21:38:39,540 [test_audit.py-->line:108]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyMzQsImV4cCI6MTYxODIzNTAxOH0.ErkTODJ_pzs24mCbh7wmECk3H2rtDrK-Nlxf0bUKmyFHTWTdCOzBTNUOE-M-nlg3z8-vd_Off7MS-kyCA-zW7g'}, 'json': {'loan_id': 2038336}}
INFO 2021-04-12 21:38:39,592 [test_audit.py-->line:121]:状态码断言成功！
INFO 2021-04-12 21:38:39,592 [test_audit.py-->line:134]:请求结果断言成功！
INFO 2021-04-12 21:38:39,592 [test_audit.py-->line:149]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-12 21:38:39,593 [test_audit.py-->line:66]:**********添加项目接口测试结束**********
INFO 2021-04-12 21:38:39,593 [test_recharge.py-->line:30]:=========充值接口开始测试==========
INFO 2021-04-12 21:38:39,842 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-12 21:38:39,843 [test_recharge.py-->line:38]:注册用户15822333466成功
INFO 2021-04-12 21:38:39,996 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-12 21:38:39,996 [test_recharge.py-->line:55]:用例【充值成功-整数】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:39,997 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 21:38:39,997 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 21:38:39,997 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyMzUsImV4cCI6MTYxODIzNTAxOX0.WZYkxqd-ZtbNQyMztjODtUrClC-oJWv9Fyjr6ZCMxM5LPwVY4k9wfgB9OEYm3PnKVsjBYqsbEqWsuGYljaL_Ow'}, 'json': {'member_id': 1000345235, 'amount': 888}}
INFO 2021-04-12 21:38:40,037 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 21:38:40,037 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 21:38:40,061 [test_recharge.py-->line:117]:数据库断言成功
INFO 2021-04-12 21:38:40,061 [test_recharge.py-->line:119]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-12 21:38:40,061 [test_recharge.py-->line:55]:用例【充值成功-1位小数】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:40,061 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 21:38:40,061 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 21:38:40,061 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyMzUsImV4cCI6MTYxODIzNTAxOX0.WZYkxqd-ZtbNQyMztjODtUrClC-oJWv9Fyjr6ZCMxM5LPwVY4k9wfgB9OEYm3PnKVsjBYqsbEqWsuGYljaL_Ow'}, 'json': {'member_id': 1000345235, 'amount': 888.8}}
INFO 2021-04-12 21:38:40,118 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 21:38:40,118 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 21:38:40,141 [test_recharge.py-->line:117]:数据库断言成功
INFO 2021-04-12 21:38:40,141 [test_recharge.py-->line:119]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-12 21:38:40,141 [test_recharge.py-->line:55]:用例【充值成功-2位小数】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:40,141 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 21:38:40,141 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 21:38:40,141 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyMzUsImV4cCI6MTYxODIzNTAxOX0.WZYkxqd-ZtbNQyMztjODtUrClC-oJWv9Fyjr6ZCMxM5LPwVY4k9wfgB9OEYm3PnKVsjBYqsbEqWsuGYljaL_Ow'}, 'json': {'member_id': 1000345235, 'amount': 888.88}}
INFO 2021-04-12 21:38:40,184 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 21:38:40,185 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 21:38:40,207 [test_recharge.py-->line:117]:数据库断言成功
INFO 2021-04-12 21:38:40,207 [test_recharge.py-->line:119]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-12 21:38:40,207 [test_recharge.py-->line:55]:用例【充值成功-50万】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:40,207 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 21:38:40,207 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 21:38:40,208 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyMzUsImV4cCI6MTYxODIzNTAxOX0.WZYkxqd-ZtbNQyMztjODtUrClC-oJWv9Fyjr6ZCMxM5LPwVY4k9wfgB9OEYm3PnKVsjBYqsbEqWsuGYljaL_Ow'}, 'json': {'member_id': 1000345235, 'amount': 500000}}
INFO 2021-04-12 21:38:40,254 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 21:38:40,254 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 21:38:40,277 [test_recharge.py-->line:117]:数据库断言成功
INFO 2021-04-12 21:38:40,278 [test_recharge.py-->line:119]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-12 21:38:40,278 [test_recharge.py-->line:55]:用例【会员id位空】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:40,278 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 21:38:40,278 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 21:38:40,278 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyMzUsImV4cCI6MTYxODIzNTAxOX0.WZYkxqd-ZtbNQyMztjODtUrClC-oJWv9Fyjr6ZCMxM5LPwVY4k9wfgB9OEYm3PnKVsjBYqsbEqWsuGYljaL_Ow'}, 'json': {'amount': 800}}
INFO 2021-04-12 21:38:40,330 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 21:38:40,330 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 21:38:40,330 [test_recharge.py-->line:119]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-12 21:38:40,330 [test_recharge.py-->line:55]:用例【id不是当前登陆的用户】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:40,330 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 21:38:40,330 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 21:38:40,331 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyMzUsImV4cCI6MTYxODIzNTAxOX0.WZYkxqd-ZtbNQyMztjODtUrClC-oJWv9Fyjr6ZCMxM5LPwVY4k9wfgB9OEYm3PnKVsjBYqsbEqWsuGYljaL_Ow'}, 'json': {'member_id': 1, 'amount': 800}}
INFO 2021-04-12 21:38:40,369 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 21:38:40,369 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 21:38:40,369 [test_recharge.py-->line:119]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-12 21:38:40,370 [test_recharge.py-->line:55]:用例【会员id为字符串】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:40,370 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 21:38:40,370 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 21:38:40,370 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyMzUsImV4cCI6MTYxODIzNTAxOX0.WZYkxqd-ZtbNQyMztjODtUrClC-oJWv9Fyjr6ZCMxM5LPwVY4k9wfgB9OEYm3PnKVsjBYqsbEqWsuGYljaL_Ow'}, 'json': {'member_id': '1000345235', 'amount': 888}}
INFO 2021-04-12 21:38:40,427 [test_recharge.py-->line:91]:状态码断言成功！
ERROR 2021-04-12 21:38:40,427 [test_recharge.py-->line:98]:请求结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day25\test_cases\test_recharge.py", line 96, in test_recharge
    self.assertEqual(case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-12 21:38:40,428 [test_recharge.py-->line:99]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-12 21:38:40,428 [test_recharge.py-->line:100]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-12 21:38:40,428 [test_recharge.py-->line:101]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000345235, 'leave_amount': 503553.68, 'mobile_phone': '15822333466', 'reg_name': '小柠檬', 'reg_time': '2021-04-12 21:38:39.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-12 21:38:40,428 [test_recharge.py-->line:55]:用例【会员id位小数】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:40,428 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 21:38:40,428 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 21:38:40,429 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyMzUsImV4cCI6MTYxODIzNTAxOX0.WZYkxqd-ZtbNQyMztjODtUrClC-oJWv9Fyjr6ZCMxM5LPwVY4k9wfgB9OEYm3PnKVsjBYqsbEqWsuGYljaL_Ow'}, 'json': {'member_id': 1.5, 'amount': 888}}
INFO 2021-04-12 21:38:40,487 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 21:38:40,487 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 21:38:40,487 [test_recharge.py-->line:119]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-12 21:38:40,487 [test_recharge.py-->line:55]:用例【充值金额为0】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:40,487 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 21:38:40,487 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 21:38:40,487 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyMzUsImV4cCI6MTYxODIzNTAxOX0.WZYkxqd-ZtbNQyMztjODtUrClC-oJWv9Fyjr6ZCMxM5LPwVY4k9wfgB9OEYm3PnKVsjBYqsbEqWsuGYljaL_Ow'}, 'json': {'member_id': 1000345235, 'amount': 0}}
INFO 2021-04-12 21:38:40,540 [test_recharge.py-->line:91]:状态码断言成功！
ERROR 2021-04-12 21:38:40,541 [test_recharge.py-->line:98]:请求结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day25\test_cases\test_recharge.py", line 96, in test_recharge
    self.assertEqual(case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-12 21:38:40,541 [test_recharge.py-->line:99]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-12 21:38:40,542 [test_recharge.py-->line:100]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-12 21:38:40,542 [test_recharge.py-->line:101]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000345235, 'leave_amount': 503553.68, 'mobile_phone': '15822333466', 'reg_name': '小柠檬', 'reg_time': '2021-04-12 21:38:39.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-12 21:38:40,542 [test_recharge.py-->line:55]:用例【充值金额为负数】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:40,542 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 21:38:40,543 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 21:38:40,543 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyMzUsImV4cCI6MTYxODIzNTAxOX0.WZYkxqd-ZtbNQyMztjODtUrClC-oJWv9Fyjr6ZCMxM5LPwVY4k9wfgB9OEYm3PnKVsjBYqsbEqWsuGYljaL_Ow'}, 'json': {'member_id': 1000345235, 'amount': -888}}
INFO 2021-04-12 21:38:40,597 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 21:38:40,597 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 21:38:40,597 [test_recharge.py-->line:119]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-12 21:38:40,598 [test_recharge.py-->line:55]:用例【充值金额为空】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:40,598 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 21:38:40,598 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 21:38:40,598 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyMzUsImV4cCI6MTYxODIzNTAxOX0.WZYkxqd-ZtbNQyMztjODtUrClC-oJWv9Fyjr6ZCMxM5LPwVY4k9wfgB9OEYm3PnKVsjBYqsbEqWsuGYljaL_Ow'}, 'json': {'member_id': 1000345235}}
INFO 2021-04-12 21:38:40,649 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 21:38:40,649 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 21:38:40,649 [test_recharge.py-->line:119]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-12 21:38:40,649 [test_recharge.py-->line:55]:用例【充值金额3位小数】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:40,649 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 21:38:40,649 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 21:38:40,649 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyMzUsImV4cCI6MTYxODIzNTAxOX0.WZYkxqd-ZtbNQyMztjODtUrClC-oJWv9Fyjr6ZCMxM5LPwVY4k9wfgB9OEYm3PnKVsjBYqsbEqWsuGYljaL_Ow'}, 'json': {'member_id': 1000345235, 'amount': 888.888}}
INFO 2021-04-12 21:38:40,697 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 21:38:40,697 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 21:38:40,697 [test_recharge.py-->line:119]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-12 21:38:40,698 [test_recharge.py-->line:55]:用例【充值金额大于50万】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:40,698 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 21:38:40,698 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 21:38:40,698 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyMzUsImV4cCI6MTYxODIzNTAxOX0.WZYkxqd-ZtbNQyMztjODtUrClC-oJWv9Fyjr6ZCMxM5LPwVY4k9wfgB9OEYm3PnKVsjBYqsbEqWsuGYljaL_Ow'}, 'json': {'member_id': 1000345235, 'amount': 500001}}
INFO 2021-04-12 21:38:40,739 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 21:38:40,739 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 21:38:40,740 [test_recharge.py-->line:119]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-12 21:38:40,740 [test_recharge.py-->line:55]:用例【充值金额非数字】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:40,740 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 21:38:40,740 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 21:38:40,740 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyMzUsImV4cCI6MTYxODIzNTAxOX0.WZYkxqd-ZtbNQyMztjODtUrClC-oJWv9Fyjr6ZCMxM5LPwVY4k9wfgB9OEYm3PnKVsjBYqsbEqWsuGYljaL_Ow'}, 'json': {'member_id': 1000345235, 'amount': '50万'}}
INFO 2021-04-12 21:38:40,778 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 21:38:40,778 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 21:38:40,778 [test_recharge.py-->line:119]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-12 21:38:40,779 [test_recharge.py-->line:51]:**********充值接口测试结束**********
INFO 2021-04-12 21:38:40,779 [test_register.py-->line:25]:=========注册接口开始测试==========
INFO 2021-04-12 21:38:40,779 [test_register.py-->line:33]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:40,885 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 21:38:40,885 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 21:38:40,885 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15808290086, 'pwd': '12345678'}}
INFO 2021-04-12 21:38:41,035 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 21:38:41,035 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 21:38:41,139 [test_register.py-->line:92]:数据库断言成功
INFO 2021-04-12 21:38:41,139 [test_register.py-->line:94]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-12 21:38:41,139 [test_register.py-->line:33]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:41,243 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 21:38:41,244 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 21:38:41,244 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15862782598, 'pwd': '12345678', 'type': 0, 'reg_name': '美丽可爱的小简'}}
INFO 2021-04-12 21:38:41,403 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 21:38:41,403 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 21:38:41,505 [test_register.py-->line:92]:数据库断言成功
INFO 2021-04-12 21:38:41,505 [test_register.py-->line:94]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-12 21:38:41,505 [test_register.py-->line:33]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:41,607 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 21:38:41,608 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 21:38:41,608 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15885968705, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-12 21:38:41,774 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 21:38:41,774 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 21:38:41,877 [test_register.py-->line:92]:数据库断言成功
INFO 2021-04-12 21:38:41,877 [test_register.py-->line:94]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-12 21:38:41,878 [test_register.py-->line:33]:用例【不输入手机号】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:41,878 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 21:38:41,878 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 21:38:41,878 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'pwd': '12345678', 'type': 1}}
INFO 2021-04-12 21:38:41,929 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 21:38:41,929 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 21:38:41,929 [test_register.py-->line:94]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-12 21:38:41,929 [test_register.py-->line:33]:用例【手机号长度10位】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:41,929 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 21:38:41,929 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 21:38:41,929 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 1550000000, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-12 21:38:41,981 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 21:38:41,981 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 21:38:41,981 [test_register.py-->line:94]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-12 21:38:41,982 [test_register.py-->line:33]:用例【手机号长度12位】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:41,982 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 21:38:41,982 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 21:38:41,982 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 155000000001, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-12 21:38:42,039 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 21:38:42,039 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 21:38:42,039 [test_register.py-->line:94]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-12 21:38:42,039 [test_register.py-->line:33]:用例【手机号含有非法字符】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:42,039 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 21:38:42,039 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 21:38:42,039 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': '1550000000q', 'pwd': '12345678', 'type': 1}}
INFO 2021-04-12 21:38:42,089 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 21:38:42,090 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 21:38:42,090 [test_register.py-->line:94]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-12 21:38:42,090 [test_register.py-->line:33]:用例【已注册过的手机号】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:42,090 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 21:38:42,090 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 21:38:42,090 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15873061802, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-12 21:38:42,251 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 21:38:42,251 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 21:38:42,251 [test_register.py-->line:94]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-12 21:38:42,251 [test_register.py-->line:33]:用例【密码7位】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:42,252 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 21:38:42,252 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 21:38:42,252 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15500056781, 'pwd': '1234567', 'type': 1}}
INFO 2021-04-12 21:38:42,290 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 21:38:42,291 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 21:38:42,291 [test_register.py-->line:94]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-12 21:38:42,291 [test_register.py-->line:33]:用例【密码17位】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:42,291 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 21:38:42,291 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 21:38:42,291 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15500000001, 'pwd': '12345678901234567', 'type': 1}}
INFO 2021-04-12 21:38:42,330 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 21:38:42,330 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 21:38:42,330 [test_register.py-->line:94]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-12 21:38:42,331 [test_register.py-->line:33]:用例【不输入密码】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:42,331 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 21:38:42,331 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 21:38:42,331 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 13300000001, 'type': 1}}
INFO 2021-04-12 21:38:42,384 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 21:38:42,384 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 21:38:42,384 [test_register.py-->line:94]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-12 21:38:42,384 [test_register.py-->line:33]:用例【昵称11位】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:42,384 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 21:38:42,385 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 21:38:42,385 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 13303007856, 'pwd': '12345678', 'type': 1, 'reg_name': '12345678909991'}}
INFO 2021-04-12 21:38:42,423 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 21:38:42,423 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 21:38:42,423 [test_register.py-->line:94]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-12 21:38:42,423 [test_register.py-->line:33]:用例【类型输入非0，1内容】开始测试>>>>>>>
DEBUG 2021-04-12 21:38:42,423 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 21:38:42,423 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 21:38:42,423 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 13300003456, 'pwd': '12345678', 'type': 2}}
INFO 2021-04-12 21:38:42,484 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 21:38:42,484 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 21:38:42,484 [test_register.py-->line:94]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-12 21:38:42,484 [test_register.py-->line:29]:**********注册接口测试结束**********
INFO 2021-04-12 21:45:07,538 [test_audit.py-->line:30]:=========添加项目接口开始测试==========
INFO 2021-04-12 21:45:07,842 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-12 21:45:07,842 [test_audit.py-->line:38]:注册普通用户15800269864成功
INFO 2021-04-12 21:45:08,018 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-12 21:45:08,317 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-12 21:45:08,317 [test_audit.py-->line:54]:注册用户15835296466成功
INFO 2021-04-12 21:45:08,479 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-12 21:45:08,533 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-12 21:45:08,534 [test_audit.py-->line:75]:添加项目成功！
INFO 2021-04-12 21:45:08,534 [test_audit.py-->line:85]:用例【审核成功-通过】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:08,534 [test_audit.py-->line:106]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-12 21:45:08,534 [test_audit.py-->line:107]:method:patch
DEBUG 2021-04-12 21:45:08,534 [test_audit.py-->line:108]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyOTUsImV4cCI6MTYxODIzNTQwOH0.8j24f283MqPukuB2Ybsg9OXgut59vHctQPdapbg_IgVg7XH4E5_obLteV-keXiq9CDBHD8YrtUekNH9-ekdHfw'}, 'json': {'loan_id': 2038341, 'approved_or_not': True}}
INFO 2021-04-12 21:45:08,579 [test_audit.py-->line:121]:状态码断言成功！
INFO 2021-04-12 21:45:08,579 [test_audit.py-->line:134]:请求结果断言成功！
INFO 2021-04-12 21:45:08,610 [test_audit.py-->line:147]:数据库断言成功
INFO 2021-04-12 21:45:08,610 [test_audit.py-->line:149]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-12 21:45:08,664 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-12 21:45:08,665 [test_audit.py-->line:75]:添加项目成功！
INFO 2021-04-12 21:45:08,665 [test_audit.py-->line:85]:用例【审核成功-不通过】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:08,665 [test_audit.py-->line:106]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-12 21:45:08,665 [test_audit.py-->line:107]:method:patch
DEBUG 2021-04-12 21:45:08,665 [test_audit.py-->line:108]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyOTUsImV4cCI6MTYxODIzNTQwOH0.8j24f283MqPukuB2Ybsg9OXgut59vHctQPdapbg_IgVg7XH4E5_obLteV-keXiq9CDBHD8YrtUekNH9-ekdHfw'}, 'json': {'loan_id': 2038342, 'approved_or_not': False}}
INFO 2021-04-12 21:45:08,719 [test_audit.py-->line:121]:状态码断言成功！
INFO 2021-04-12 21:45:08,719 [test_audit.py-->line:134]:请求结果断言成功！
INFO 2021-04-12 21:45:08,748 [test_audit.py-->line:147]:数据库断言成功
INFO 2021-04-12 21:45:08,748 [test_audit.py-->line:149]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-12 21:45:08,789 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-12 21:45:08,789 [test_audit.py-->line:75]:添加项目成功！
INFO 2021-04-12 21:45:08,789 [test_audit.py-->line:85]:用例【项目id为空】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:08,790 [test_audit.py-->line:106]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-12 21:45:08,790 [test_audit.py-->line:107]:method:patch
DEBUG 2021-04-12 21:45:08,790 [test_audit.py-->line:108]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyOTUsImV4cCI6MTYxODIzNTQwOH0.8j24f283MqPukuB2Ybsg9OXgut59vHctQPdapbg_IgVg7XH4E5_obLteV-keXiq9CDBHD8YrtUekNH9-ekdHfw'}, 'json': {'approved_or_not': True}}
INFO 2021-04-12 21:45:08,828 [test_audit.py-->line:121]:状态码断言成功！
INFO 2021-04-12 21:45:08,828 [test_audit.py-->line:134]:请求结果断言成功！
INFO 2021-04-12 21:45:08,828 [test_audit.py-->line:149]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-12 21:45:08,883 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-12 21:45:08,883 [test_audit.py-->line:75]:添加项目成功！
INFO 2021-04-12 21:45:08,883 [test_audit.py-->line:85]:用例【项目id不是整数】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:08,883 [test_audit.py-->line:106]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-12 21:45:08,883 [test_audit.py-->line:107]:method:patch
DEBUG 2021-04-12 21:45:08,883 [test_audit.py-->line:108]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyOTUsImV4cCI6MTYxODIzNTQwOH0.8j24f283MqPukuB2Ybsg9OXgut59vHctQPdapbg_IgVg7XH4E5_obLteV-keXiq9CDBHD8YrtUekNH9-ekdHfw'}, 'json': {'loan_id': '2038344', 'approved_or_not': True}}
INFO 2021-04-12 21:45:08,937 [test_audit.py-->line:121]:状态码断言成功！
ERROR 2021-04-12 21:45:08,937 [test_audit.py-->line:128]:请求结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day25\test_cases\test_audit.py", line 126, in test_audit
    self.assertEqual(case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-12 21:45:08,938 [test_audit.py-->line:129]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-12 21:45:08,938 [test_audit.py-->line:130]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-12 21:45:08,938 [test_audit.py-->line:131]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-12 21:45:08,980 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-12 21:45:08,981 [test_audit.py-->line:75]:添加项目成功！
INFO 2021-04-12 21:45:08,982 [test_audit.py-->line:85]:用例【不存在的项目id】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:08,982 [test_audit.py-->line:106]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-12 21:45:08,982 [test_audit.py-->line:107]:method:patch
DEBUG 2021-04-12 21:45:08,983 [test_audit.py-->line:108]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyOTUsImV4cCI6MTYxODIzNTQwOH0.8j24f283MqPukuB2Ybsg9OXgut59vHctQPdapbg_IgVg7XH4E5_obLteV-keXiq9CDBHD8YrtUekNH9-ekdHfw'}, 'json': {'loan_id': 100000, 'approved_or_not': False}}
INFO 2021-04-12 21:45:09,037 [test_audit.py-->line:121]:状态码断言成功！
INFO 2021-04-12 21:45:09,037 [test_audit.py-->line:134]:请求结果断言成功！
INFO 2021-04-12 21:45:09,037 [test_audit.py-->line:149]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-12 21:45:09,079 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-12 21:45:09,079 [test_audit.py-->line:75]:添加项目成功！
INFO 2021-04-12 21:45:09,079 [test_audit.py-->line:85]:用例【审核状态不是布尔值】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:09,079 [test_audit.py-->line:106]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-12 21:45:09,080 [test_audit.py-->line:107]:method:patch
DEBUG 2021-04-12 21:45:09,080 [test_audit.py-->line:108]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyOTUsImV4cCI6MTYxODIzNTQwOH0.8j24f283MqPukuB2Ybsg9OXgut59vHctQPdapbg_IgVg7XH4E5_obLteV-keXiq9CDBHD8YrtUekNH9-ekdHfw'}, 'json': {'loan_id': 2038346, 'approved_or_not': 2}}
INFO 2021-04-12 21:45:09,119 [test_audit.py-->line:121]:状态码断言成功！
INFO 2021-04-12 21:45:09,119 [test_audit.py-->line:134]:请求结果断言成功！
INFO 2021-04-12 21:45:09,119 [test_audit.py-->line:149]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-12 21:45:09,162 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-12 21:45:09,162 [test_audit.py-->line:75]:添加项目成功！
INFO 2021-04-12 21:45:09,162 [test_audit.py-->line:85]:用例【审核状态不存在】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:09,162 [test_audit.py-->line:106]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-12 21:45:09,162 [test_audit.py-->line:107]:method:patch
DEBUG 2021-04-12 21:45:09,162 [test_audit.py-->line:108]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyOTUsImV4cCI6MTYxODIzNTQwOH0.8j24f283MqPukuB2Ybsg9OXgut59vHctQPdapbg_IgVg7XH4E5_obLteV-keXiq9CDBHD8YrtUekNH9-ekdHfw'}, 'json': {'loan_id': 2038347}}
INFO 2021-04-12 21:45:09,216 [test_audit.py-->line:121]:状态码断言成功！
INFO 2021-04-12 21:45:09,217 [test_audit.py-->line:134]:请求结果断言成功！
INFO 2021-04-12 21:45:09,217 [test_audit.py-->line:149]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-12 21:45:09,217 [test_audit.py-->line:66]:**********添加项目接口测试结束**********
INFO 2021-04-12 21:45:09,218 [test_recharge.py-->line:30]:=========充值接口开始测试==========
INFO 2021-04-12 21:45:09,502 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-12 21:45:09,503 [test_recharge.py-->line:38]:注册用户15866346212成功
INFO 2021-04-12 21:45:09,657 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-12 21:45:09,657 [test_recharge.py-->line:55]:用例【充值成功-整数】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:09,657 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 21:45:09,657 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 21:45:09,657 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyOTYsImV4cCI6MTYxODIzNTQwOX0.TjpKsAY702b7_FVZoX4NfIJqjjk_ndqo-yjRnoRiMXvQ1K36tEa-4ef0_ERhnJWKJXWzdvpE91KrXqT98zZYuw'}, 'json': {'member_id': 1000345296, 'amount': 888}}
INFO 2021-04-12 21:45:09,721 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 21:45:09,721 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 21:45:09,752 [test_recharge.py-->line:117]:数据库断言成功
INFO 2021-04-12 21:45:09,752 [test_recharge.py-->line:119]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-12 21:45:09,752 [test_recharge.py-->line:55]:用例【充值成功-1位小数】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:09,752 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 21:45:09,752 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 21:45:09,752 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyOTYsImV4cCI6MTYxODIzNTQwOX0.TjpKsAY702b7_FVZoX4NfIJqjjk_ndqo-yjRnoRiMXvQ1K36tEa-4ef0_ERhnJWKJXWzdvpE91KrXqT98zZYuw'}, 'json': {'member_id': 1000345296, 'amount': 888.8}}
INFO 2021-04-12 21:45:09,815 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 21:45:09,815 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 21:45:09,857 [test_recharge.py-->line:117]:数据库断言成功
INFO 2021-04-12 21:45:09,857 [test_recharge.py-->line:119]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-12 21:45:09,857 [test_recharge.py-->line:55]:用例【充值成功-2位小数】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:09,857 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 21:45:09,858 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 21:45:09,858 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyOTYsImV4cCI6MTYxODIzNTQwOX0.TjpKsAY702b7_FVZoX4NfIJqjjk_ndqo-yjRnoRiMXvQ1K36tEa-4ef0_ERhnJWKJXWzdvpE91KrXqT98zZYuw'}, 'json': {'member_id': 1000345296, 'amount': 888.88}}
INFO 2021-04-12 21:45:09,926 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 21:45:09,926 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 21:45:09,958 [test_recharge.py-->line:117]:数据库断言成功
INFO 2021-04-12 21:45:09,959 [test_recharge.py-->line:119]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-12 21:45:09,959 [test_recharge.py-->line:55]:用例【充值成功-50万】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:09,960 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 21:45:09,960 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 21:45:09,960 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyOTYsImV4cCI6MTYxODIzNTQwOX0.TjpKsAY702b7_FVZoX4NfIJqjjk_ndqo-yjRnoRiMXvQ1K36tEa-4ef0_ERhnJWKJXWzdvpE91KrXqT98zZYuw'}, 'json': {'member_id': 1000345296, 'amount': 500000}}
INFO 2021-04-12 21:45:10,012 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 21:45:10,012 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 21:45:10,043 [test_recharge.py-->line:117]:数据库断言成功
INFO 2021-04-12 21:45:10,047 [test_recharge.py-->line:119]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-12 21:45:10,048 [test_recharge.py-->line:55]:用例【会员id位空】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:10,048 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 21:45:10,048 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 21:45:10,048 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyOTYsImV4cCI6MTYxODIzNTQwOX0.TjpKsAY702b7_FVZoX4NfIJqjjk_ndqo-yjRnoRiMXvQ1K36tEa-4ef0_ERhnJWKJXWzdvpE91KrXqT98zZYuw'}, 'json': {'amount': 800}}
INFO 2021-04-12 21:45:10,106 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 21:45:10,106 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 21:45:10,106 [test_recharge.py-->line:119]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-12 21:45:10,107 [test_recharge.py-->line:55]:用例【id不是当前登陆的用户】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:10,107 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 21:45:10,107 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 21:45:10,107 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyOTYsImV4cCI6MTYxODIzNTQwOX0.TjpKsAY702b7_FVZoX4NfIJqjjk_ndqo-yjRnoRiMXvQ1K36tEa-4ef0_ERhnJWKJXWzdvpE91KrXqT98zZYuw'}, 'json': {'member_id': 1, 'amount': 800}}
INFO 2021-04-12 21:45:10,157 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 21:45:10,158 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 21:45:10,158 [test_recharge.py-->line:119]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-12 21:45:10,158 [test_recharge.py-->line:55]:用例【会员id为字符串】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:10,158 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 21:45:10,158 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 21:45:10,158 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyOTYsImV4cCI6MTYxODIzNTQwOX0.TjpKsAY702b7_FVZoX4NfIJqjjk_ndqo-yjRnoRiMXvQ1K36tEa-4ef0_ERhnJWKJXWzdvpE91KrXqT98zZYuw'}, 'json': {'member_id': '1000345296', 'amount': 888}}
INFO 2021-04-12 21:45:10,207 [test_recharge.py-->line:91]:状态码断言成功！
ERROR 2021-04-12 21:45:10,207 [test_recharge.py-->line:98]:请求结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day25\test_cases\test_recharge.py", line 96, in test_recharge
    self.assertEqual(case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-12 21:45:10,208 [test_recharge.py-->line:99]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-12 21:45:10,208 [test_recharge.py-->line:100]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-12 21:45:10,208 [test_recharge.py-->line:101]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000345296, 'leave_amount': 503553.68, 'mobile_phone': '15866346212', 'reg_name': '小柠檬', 'reg_time': '2021-04-12 21:45:09.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-12 21:45:10,208 [test_recharge.py-->line:55]:用例【会员id位小数】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:10,208 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 21:45:10,209 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 21:45:10,209 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyOTYsImV4cCI6MTYxODIzNTQwOX0.TjpKsAY702b7_FVZoX4NfIJqjjk_ndqo-yjRnoRiMXvQ1K36tEa-4ef0_ERhnJWKJXWzdvpE91KrXqT98zZYuw'}, 'json': {'member_id': 1.5, 'amount': 888}}
INFO 2021-04-12 21:45:10,259 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 21:45:10,259 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 21:45:10,259 [test_recharge.py-->line:119]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-12 21:45:10,260 [test_recharge.py-->line:55]:用例【充值金额为0】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:10,260 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 21:45:10,260 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 21:45:10,260 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyOTYsImV4cCI6MTYxODIzNTQwOX0.TjpKsAY702b7_FVZoX4NfIJqjjk_ndqo-yjRnoRiMXvQ1K36tEa-4ef0_ERhnJWKJXWzdvpE91KrXqT98zZYuw'}, 'json': {'member_id': 1000345296, 'amount': 0}}
INFO 2021-04-12 21:45:10,299 [test_recharge.py-->line:91]:状态码断言成功！
ERROR 2021-04-12 21:45:10,299 [test_recharge.py-->line:98]:请求结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day25\test_cases\test_recharge.py", line 96, in test_recharge
    self.assertEqual(case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-12 21:45:10,299 [test_recharge.py-->line:99]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-12 21:45:10,300 [test_recharge.py-->line:100]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-12 21:45:10,300 [test_recharge.py-->line:101]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000345296, 'leave_amount': 503553.68, 'mobile_phone': '15866346212', 'reg_name': '小柠檬', 'reg_time': '2021-04-12 21:45:09.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-12 21:45:10,300 [test_recharge.py-->line:55]:用例【充值金额为负数】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:10,300 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 21:45:10,300 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 21:45:10,301 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyOTYsImV4cCI6MTYxODIzNTQwOX0.TjpKsAY702b7_FVZoX4NfIJqjjk_ndqo-yjRnoRiMXvQ1K36tEa-4ef0_ERhnJWKJXWzdvpE91KrXqT98zZYuw'}, 'json': {'member_id': 1000345296, 'amount': -888}}
INFO 2021-04-12 21:45:10,339 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 21:45:10,339 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 21:45:10,339 [test_recharge.py-->line:119]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-12 21:45:10,340 [test_recharge.py-->line:55]:用例【充值金额为空】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:10,340 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 21:45:10,340 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 21:45:10,340 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyOTYsImV4cCI6MTYxODIzNTQwOX0.TjpKsAY702b7_FVZoX4NfIJqjjk_ndqo-yjRnoRiMXvQ1K36tEa-4ef0_ERhnJWKJXWzdvpE91KrXqT98zZYuw'}, 'json': {'member_id': 1000345296}}
INFO 2021-04-12 21:45:10,391 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 21:45:10,391 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 21:45:10,392 [test_recharge.py-->line:119]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-12 21:45:10,392 [test_recharge.py-->line:55]:用例【充值金额3位小数】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:10,392 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 21:45:10,392 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 21:45:10,392 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyOTYsImV4cCI6MTYxODIzNTQwOX0.TjpKsAY702b7_FVZoX4NfIJqjjk_ndqo-yjRnoRiMXvQ1K36tEa-4ef0_ERhnJWKJXWzdvpE91KrXqT98zZYuw'}, 'json': {'member_id': 1000345296, 'amount': 888.888}}
INFO 2021-04-12 21:45:10,430 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 21:45:10,430 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 21:45:10,430 [test_recharge.py-->line:119]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-12 21:45:10,430 [test_recharge.py-->line:55]:用例【充值金额大于50万】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:10,430 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 21:45:10,430 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 21:45:10,430 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyOTYsImV4cCI6MTYxODIzNTQwOX0.TjpKsAY702b7_FVZoX4NfIJqjjk_ndqo-yjRnoRiMXvQ1K36tEa-4ef0_ERhnJWKJXWzdvpE91KrXqT98zZYuw'}, 'json': {'member_id': 1000345296, 'amount': 500001}}
INFO 2021-04-12 21:45:10,483 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 21:45:10,483 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 21:45:10,483 [test_recharge.py-->line:119]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-12 21:45:10,483 [test_recharge.py-->line:55]:用例【充值金额非数字】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:10,483 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-12 21:45:10,484 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-12 21:45:10,484 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNDUyOTYsImV4cCI6MTYxODIzNTQwOX0.TjpKsAY702b7_FVZoX4NfIJqjjk_ndqo-yjRnoRiMXvQ1K36tEa-4ef0_ERhnJWKJXWzdvpE91KrXqT98zZYuw'}, 'json': {'member_id': 1000345296, 'amount': '50万'}}
INFO 2021-04-12 21:45:10,521 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-12 21:45:10,521 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-12 21:45:10,521 [test_recharge.py-->line:119]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-12 21:45:10,521 [test_recharge.py-->line:51]:**********充值接口测试结束**********
INFO 2021-04-12 21:45:10,522 [test_register.py-->line:25]:=========注册接口开始测试==========
INFO 2021-04-12 21:45:10,522 [test_register.py-->line:33]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:10,635 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 21:45:10,636 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 21:45:10,636 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15872414679, 'pwd': '12345678'}}
INFO 2021-04-12 21:45:10,859 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 21:45:10,860 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 21:45:10,972 [test_register.py-->line:92]:数据库断言成功
INFO 2021-04-12 21:45:10,973 [test_register.py-->line:94]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-12 21:45:10,973 [test_register.py-->line:33]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:11,086 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 21:45:11,086 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 21:45:11,086 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15869645330, 'pwd': '12345678', 'type': 0, 'reg_name': '美丽可爱的小简'}}
INFO 2021-04-12 21:45:11,249 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 21:45:11,249 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 21:45:11,361 [test_register.py-->line:92]:数据库断言成功
INFO 2021-04-12 21:45:11,361 [test_register.py-->line:94]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-12 21:45:11,361 [test_register.py-->line:33]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:11,480 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 21:45:11,480 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 21:45:11,480 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15824011211, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-12 21:45:11,640 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 21:45:11,640 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 21:45:11,752 [test_register.py-->line:92]:数据库断言成功
INFO 2021-04-12 21:45:11,752 [test_register.py-->line:94]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-12 21:45:11,752 [test_register.py-->line:33]:用例【不输入手机号】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:11,753 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 21:45:11,753 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 21:45:11,753 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'pwd': '12345678', 'type': 1}}
INFO 2021-04-12 21:45:11,789 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 21:45:11,790 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 21:45:11,790 [test_register.py-->line:94]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-12 21:45:11,790 [test_register.py-->line:33]:用例【手机号长度10位】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:11,790 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 21:45:11,790 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 21:45:11,790 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 1550000000, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-12 21:45:11,828 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 21:45:11,829 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 21:45:11,829 [test_register.py-->line:94]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-12 21:45:11,829 [test_register.py-->line:33]:用例【手机号长度12位】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:11,829 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 21:45:11,829 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 21:45:11,829 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 155000000001, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-12 21:45:11,879 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 21:45:11,879 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 21:45:11,879 [test_register.py-->line:94]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-12 21:45:11,880 [test_register.py-->line:33]:用例【手机号含有非法字符】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:11,880 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 21:45:11,880 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 21:45:11,880 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': '1550000000q', 'pwd': '12345678', 'type': 1}}
INFO 2021-04-12 21:45:11,919 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 21:45:11,920 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 21:45:11,920 [test_register.py-->line:94]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-12 21:45:11,920 [test_register.py-->line:33]:用例【已注册过的手机号】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:11,920 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 21:45:11,920 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 21:45:11,920 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15873061802, 'pwd': '12345678', 'type': 1}}
INFO 2021-04-12 21:45:12,149 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 21:45:12,150 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 21:45:12,150 [test_register.py-->line:94]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-12 21:45:12,150 [test_register.py-->line:33]:用例【密码7位】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:12,150 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 21:45:12,150 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 21:45:12,150 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15500056781, 'pwd': '1234567', 'type': 1}}
INFO 2021-04-12 21:45:12,197 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 21:45:12,197 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 21:45:12,197 [test_register.py-->line:94]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-12 21:45:12,197 [test_register.py-->line:33]:用例【密码17位】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:12,197 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 21:45:12,197 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 21:45:12,198 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 15500000001, 'pwd': '12345678901234567', 'type': 1}}
INFO 2021-04-12 21:45:12,250 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 21:45:12,250 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 21:45:12,250 [test_register.py-->line:94]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-12 21:45:12,250 [test_register.py-->line:33]:用例【不输入密码】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:12,250 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 21:45:12,250 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 21:45:12,250 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 13300000001, 'type': 1}}
INFO 2021-04-12 21:45:12,302 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 21:45:12,302 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 21:45:12,302 [test_register.py-->line:94]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-12 21:45:12,302 [test_register.py-->line:33]:用例【昵称11位】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:12,302 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 21:45:12,302 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 21:45:12,302 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 13303007856, 'pwd': '12345678', 'type': 1, 'reg_name': '12345678909991'}}
INFO 2021-04-12 21:45:12,354 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 21:45:12,354 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 21:45:12,354 [test_register.py-->line:94]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-12 21:45:12,355 [test_register.py-->line:33]:用例【类型输入非0，1内容】开始测试>>>>>>>
DEBUG 2021-04-12 21:45:12,355 [test_register.py-->line:51]:url:http://api.lemonban.com/futureloan/member/register
DEBUG 2021-04-12 21:45:12,355 [test_register.py-->line:52]:method:post
DEBUG 2021-04-12 21:45:12,355 [test_register.py-->line:53]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v1'}, 'json': {'mobile_phone': 13300003456, 'pwd': '12345678', 'type': 2}}
INFO 2021-04-12 21:45:12,412 [test_register.py-->line:66]:状态码断言成功！
INFO 2021-04-12 21:45:12,412 [test_register.py-->line:79]:请求结果断言成功！
INFO 2021-04-12 21:45:12,412 [test_register.py-->line:94]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-12 21:45:12,412 [test_register.py-->line:29]:**********注册接口测试结束**********
INFO 2021-04-14 20:25:15,347 [test_audit.py-->line:30]:=========添加项目接口开始测试==========
INFO 2021-04-14 20:25:15,649 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-14 20:25:15,649 [test_audit.py-->line:38]:注册普通用户15812089046成功
INFO 2021-04-14 20:25:15,802 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-14 20:25:16,065 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-14 20:25:16,065 [test_audit.py-->line:54]:注册用户15899569087成功
INFO 2021-04-14 20:25:16,224 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-14 20:25:16,274 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 20:25:16,275 [test_audit.py-->line:71]:添加项目成功！
INFO 2021-04-14 20:25:16,275 [test_audit.py-->line:81]:用例【审核成功-通过】开始测试>>>>>>>
DEBUG 2021-04-14 20:25:16,275 [test_audit.py-->line:102]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-14 20:25:16,275 [test_audit.py-->line:103]:method:patch
DEBUG 2021-04-14 20:25:16,275 [test_audit.py-->line:104]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzMjIsImV4cCI6MTYxODQwMzQxNn0.MDLTEEs8TEd0c_VmK5cqU-MlUW6pz-Y_w2J_7Lylr8Ct83DXwv53AdE9zuEXEyBby_jYg5xcmc8GOaNX--DCuQ'}, 'json': {'loan_id': 2041860, 'approved_or_not': True}}
INFO 2021-04-14 20:25:16,323 [test_audit.py-->line:117]:状态码断言成功！
INFO 2021-04-14 20:25:16,324 [test_audit.py-->line:130]:请求结果断言成功！
INFO 2021-04-14 20:25:16,346 [test_audit.py-->line:143]:数据库断言成功
INFO 2021-04-14 20:25:16,346 [test_audit.py-->line:145]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-14 20:25:16,401 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 20:25:16,401 [test_audit.py-->line:71]:添加项目成功！
INFO 2021-04-14 20:25:16,401 [test_audit.py-->line:81]:用例【审核成功-不通过】开始测试>>>>>>>
DEBUG 2021-04-14 20:25:16,401 [test_audit.py-->line:102]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-14 20:25:16,401 [test_audit.py-->line:103]:method:patch
DEBUG 2021-04-14 20:25:16,401 [test_audit.py-->line:104]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzMjIsImV4cCI6MTYxODQwMzQxNn0.MDLTEEs8TEd0c_VmK5cqU-MlUW6pz-Y_w2J_7Lylr8Ct83DXwv53AdE9zuEXEyBby_jYg5xcmc8GOaNX--DCuQ'}, 'json': {'loan_id': 2041861, 'approved_or_not': False}}
INFO 2021-04-14 20:25:16,467 [test_audit.py-->line:117]:状态码断言成功！
INFO 2021-04-14 20:25:16,468 [test_audit.py-->line:130]:请求结果断言成功！
INFO 2021-04-14 20:25:16,491 [test_audit.py-->line:143]:数据库断言成功
INFO 2021-04-14 20:25:16,491 [test_audit.py-->line:145]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-14 20:25:16,534 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 20:25:16,534 [test_audit.py-->line:71]:添加项目成功！
INFO 2021-04-14 20:25:16,535 [test_audit.py-->line:81]:用例【项目id为空】开始测试>>>>>>>
DEBUG 2021-04-14 20:25:16,535 [test_audit.py-->line:102]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-14 20:25:16,535 [test_audit.py-->line:103]:method:patch
DEBUG 2021-04-14 20:25:16,535 [test_audit.py-->line:104]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzMjIsImV4cCI6MTYxODQwMzQxNn0.MDLTEEs8TEd0c_VmK5cqU-MlUW6pz-Y_w2J_7Lylr8Ct83DXwv53AdE9zuEXEyBby_jYg5xcmc8GOaNX--DCuQ'}, 'json': {'approved_or_not': True}}
INFO 2021-04-14 20:25:16,592 [test_audit.py-->line:117]:状态码断言成功！
INFO 2021-04-14 20:25:16,592 [test_audit.py-->line:130]:请求结果断言成功！
INFO 2021-04-14 20:25:16,593 [test_audit.py-->line:145]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-14 20:25:16,635 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 20:25:16,635 [test_audit.py-->line:71]:添加项目成功！
INFO 2021-04-14 20:25:16,636 [test_audit.py-->line:81]:用例【项目id不是整数】开始测试>>>>>>>
DEBUG 2021-04-14 20:25:16,636 [test_audit.py-->line:102]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-14 20:25:16,636 [test_audit.py-->line:103]:method:patch
DEBUG 2021-04-14 20:25:16,636 [test_audit.py-->line:104]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzMjIsImV4cCI6MTYxODQwMzQxNn0.MDLTEEs8TEd0c_VmK5cqU-MlUW6pz-Y_w2J_7Lylr8Ct83DXwv53AdE9zuEXEyBby_jYg5xcmc8GOaNX--DCuQ'}, 'json': {'loan_id': '2041863', 'approved_or_not': True}}
INFO 2021-04-14 20:25:16,695 [test_audit.py-->line:117]:状态码断言成功！
ERROR 2021-04-14 20:25:16,695 [test_audit.py-->line:124]:请求结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\test_audit.py", line 122, in test_audit
    self.assertEqual(case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-14 20:25:16,702 [test_audit.py-->line:125]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-14 20:25:16,702 [test_audit.py-->line:126]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 20:25:16,702 [test_audit.py-->line:127]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-14 20:25:16,746 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 20:25:16,747 [test_audit.py-->line:71]:添加项目成功！
INFO 2021-04-14 20:25:16,747 [test_audit.py-->line:81]:用例【不存在的项目id】开始测试>>>>>>>
DEBUG 2021-04-14 20:25:16,747 [test_audit.py-->line:102]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-14 20:25:16,747 [test_audit.py-->line:103]:method:patch
DEBUG 2021-04-14 20:25:16,747 [test_audit.py-->line:104]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzMjIsImV4cCI6MTYxODQwMzQxNn0.MDLTEEs8TEd0c_VmK5cqU-MlUW6pz-Y_w2J_7Lylr8Ct83DXwv53AdE9zuEXEyBby_jYg5xcmc8GOaNX--DCuQ'}, 'json': {'loan_id': 100000, 'approved_or_not': False}}
INFO 2021-04-14 20:25:16,788 [test_audit.py-->line:117]:状态码断言成功！
INFO 2021-04-14 20:25:16,788 [test_audit.py-->line:130]:请求结果断言成功！
INFO 2021-04-14 20:25:16,788 [test_audit.py-->line:145]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-14 20:25:16,830 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 20:25:16,830 [test_audit.py-->line:71]:添加项目成功！
INFO 2021-04-14 20:25:16,830 [test_audit.py-->line:81]:用例【审核状态不是布尔值】开始测试>>>>>>>
DEBUG 2021-04-14 20:25:16,831 [test_audit.py-->line:102]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-14 20:25:16,831 [test_audit.py-->line:103]:method:patch
DEBUG 2021-04-14 20:25:16,831 [test_audit.py-->line:104]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzMjIsImV4cCI6MTYxODQwMzQxNn0.MDLTEEs8TEd0c_VmK5cqU-MlUW6pz-Y_w2J_7Lylr8Ct83DXwv53AdE9zuEXEyBby_jYg5xcmc8GOaNX--DCuQ'}, 'json': {'loan_id': 2041865, 'approved_or_not': 2}}
INFO 2021-04-14 20:25:16,884 [test_audit.py-->line:117]:状态码断言成功！
INFO 2021-04-14 20:25:16,884 [test_audit.py-->line:130]:请求结果断言成功！
INFO 2021-04-14 20:25:16,885 [test_audit.py-->line:145]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-14 20:25:16,943 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 20:25:16,944 [test_audit.py-->line:71]:添加项目成功！
INFO 2021-04-14 20:25:16,944 [test_audit.py-->line:81]:用例【审核状态不存在】开始测试>>>>>>>
DEBUG 2021-04-14 20:25:16,944 [test_audit.py-->line:102]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-14 20:25:16,944 [test_audit.py-->line:103]:method:patch
DEBUG 2021-04-14 20:25:16,944 [test_audit.py-->line:104]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzMjIsImV4cCI6MTYxODQwMzQxNn0.MDLTEEs8TEd0c_VmK5cqU-MlUW6pz-Y_w2J_7Lylr8Ct83DXwv53AdE9zuEXEyBby_jYg5xcmc8GOaNX--DCuQ'}, 'json': {'loan_id': 2041866}}
INFO 2021-04-14 20:25:17,008 [test_audit.py-->line:117]:状态码断言成功！
INFO 2021-04-14 20:25:17,008 [test_audit.py-->line:130]:请求结果断言成功！
INFO 2021-04-14 20:25:17,008 [test_audit.py-->line:145]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-14 20:25:17,008 [base_case.py-->line:29]:**********审核接口测试结束**********
INFO 2021-04-14 20:25:17,009 [test_recharge.py-->line:30]:=========充值接口开始测试==========
INFO 2021-04-14 20:25:17,332 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-14 20:25:17,332 [test_recharge.py-->line:38]:注册用户15866097991成功
INFO 2021-04-14 20:25:17,487 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-14 20:25:17,487 [test_recharge.py-->line:55]:用例【充值成功-整数】开始测试>>>>>>>
DEBUG 2021-04-14 20:25:17,487 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-14 20:25:17,487 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-14 20:25:17,487 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzMjMsImV4cCI6MTYxODQwMzQxN30.lH0OIG4bvxUm3PfPYRg9yJSAn-St06v1SCOIlFDaS49QnbHwtO8o6JzNPr89JE4o78WW4OpL55F0HU0syUHllA'}, 'json': {'member_id': 1000356323, 'amount': 888}}
INFO 2021-04-14 20:25:17,529 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-14 20:25:17,529 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-14 20:25:17,552 [test_recharge.py-->line:117]:数据库断言成功
INFO 2021-04-14 20:25:17,552 [test_recharge.py-->line:119]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-14 20:25:17,553 [test_recharge.py-->line:55]:用例【充值成功-1位小数】开始测试>>>>>>>
DEBUG 2021-04-14 20:25:17,553 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-14 20:25:17,553 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-14 20:25:17,553 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzMjMsImV4cCI6MTYxODQwMzQxN30.lH0OIG4bvxUm3PfPYRg9yJSAn-St06v1SCOIlFDaS49QnbHwtO8o6JzNPr89JE4o78WW4OpL55F0HU0syUHllA'}, 'json': {'member_id': 1000356323, 'amount': 888.8}}
INFO 2021-04-14 20:25:17,611 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-14 20:25:17,611 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-14 20:25:17,634 [test_recharge.py-->line:117]:数据库断言成功
INFO 2021-04-14 20:25:17,634 [test_recharge.py-->line:119]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-14 20:25:17,635 [test_recharge.py-->line:55]:用例【充值成功-2位小数】开始测试>>>>>>>
DEBUG 2021-04-14 20:25:17,635 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-14 20:25:17,635 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-14 20:25:17,635 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzMjMsImV4cCI6MTYxODQwMzQxN30.lH0OIG4bvxUm3PfPYRg9yJSAn-St06v1SCOIlFDaS49QnbHwtO8o6JzNPr89JE4o78WW4OpL55F0HU0syUHllA'}, 'json': {'member_id': 1000356323, 'amount': 888.88}}
INFO 2021-04-14 20:25:17,693 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-14 20:25:17,693 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-14 20:25:17,716 [test_recharge.py-->line:117]:数据库断言成功
INFO 2021-04-14 20:25:17,716 [test_recharge.py-->line:119]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-14 20:25:17,717 [test_recharge.py-->line:55]:用例【充值成功-50万】开始测试>>>>>>>
DEBUG 2021-04-14 20:25:17,717 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-14 20:25:17,717 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-14 20:25:17,717 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzMjMsImV4cCI6MTYxODQwMzQxN30.lH0OIG4bvxUm3PfPYRg9yJSAn-St06v1SCOIlFDaS49QnbHwtO8o6JzNPr89JE4o78WW4OpL55F0HU0syUHllA'}, 'json': {'member_id': 1000356323, 'amount': 500000}}
INFO 2021-04-14 20:25:17,774 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-14 20:25:17,774 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-14 20:25:17,797 [test_recharge.py-->line:117]:数据库断言成功
INFO 2021-04-14 20:25:17,797 [test_recharge.py-->line:119]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-14 20:25:17,797 [test_recharge.py-->line:55]:用例【会员id位空】开始测试>>>>>>>
DEBUG 2021-04-14 20:25:17,797 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-14 20:25:17,797 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-14 20:25:17,797 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzMjMsImV4cCI6MTYxODQwMzQxN30.lH0OIG4bvxUm3PfPYRg9yJSAn-St06v1SCOIlFDaS49QnbHwtO8o6JzNPr89JE4o78WW4OpL55F0HU0syUHllA'}, 'json': {'amount': 800}}
INFO 2021-04-14 20:25:17,838 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-14 20:25:17,839 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-14 20:25:17,839 [test_recharge.py-->line:119]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-14 20:25:17,839 [test_recharge.py-->line:55]:用例【id不是当前登陆的用户】开始测试>>>>>>>
DEBUG 2021-04-14 20:25:17,840 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-14 20:25:17,840 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-14 20:25:17,840 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzMjMsImV4cCI6MTYxODQwMzQxN30.lH0OIG4bvxUm3PfPYRg9yJSAn-St06v1SCOIlFDaS49QnbHwtO8o6JzNPr89JE4o78WW4OpL55F0HU0syUHllA'}, 'json': {'member_id': 1, 'amount': 800}}
INFO 2021-04-14 20:25:17,878 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-14 20:25:17,878 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-14 20:25:17,878 [test_recharge.py-->line:119]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-14 20:25:17,879 [test_recharge.py-->line:55]:用例【会员id为字符串】开始测试>>>>>>>
DEBUG 2021-04-14 20:25:17,879 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-14 20:25:17,879 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-14 20:25:17,879 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzMjMsImV4cCI6MTYxODQwMzQxN30.lH0OIG4bvxUm3PfPYRg9yJSAn-St06v1SCOIlFDaS49QnbHwtO8o6JzNPr89JE4o78WW4OpL55F0HU0syUHllA'}, 'json': {'member_id': '1000356323', 'amount': 888}}
INFO 2021-04-14 20:25:17,923 [test_recharge.py-->line:91]:状态码断言成功！
ERROR 2021-04-14 20:25:17,924 [test_recharge.py-->line:98]:请求结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\test_recharge.py", line 96, in test_recharge
    self.assertEqual(case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-14 20:25:17,925 [test_recharge.py-->line:99]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-14 20:25:17,925 [test_recharge.py-->line:100]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 20:25:17,925 [test_recharge.py-->line:101]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000356323, 'leave_amount': 503553.68, 'mobile_phone': '15866097991', 'reg_name': '小柠檬', 'reg_time': '2021-04-14 20:25:17.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-14 20:25:17,926 [test_recharge.py-->line:55]:用例【会员id位小数】开始测试>>>>>>>
DEBUG 2021-04-14 20:25:17,926 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-14 20:25:17,926 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-14 20:25:17,926 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzMjMsImV4cCI6MTYxODQwMzQxN30.lH0OIG4bvxUm3PfPYRg9yJSAn-St06v1SCOIlFDaS49QnbHwtO8o6JzNPr89JE4o78WW4OpL55F0HU0syUHllA'}, 'json': {'member_id': 1.5, 'amount': 888}}
INFO 2021-04-14 20:25:17,979 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-14 20:25:17,979 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-14 20:25:17,980 [test_recharge.py-->line:119]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-14 20:25:17,980 [test_recharge.py-->line:55]:用例【充值金额为0】开始测试>>>>>>>
DEBUG 2021-04-14 20:25:17,980 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-14 20:25:17,980 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-14 20:25:17,980 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzMjMsImV4cCI6MTYxODQwMzQxN30.lH0OIG4bvxUm3PfPYRg9yJSAn-St06v1SCOIlFDaS49QnbHwtO8o6JzNPr89JE4o78WW4OpL55F0HU0syUHllA'}, 'json': {'member_id': 1000356323, 'amount': 0}}
INFO 2021-04-14 20:25:18,021 [test_recharge.py-->line:91]:状态码断言成功！
ERROR 2021-04-14 20:25:18,021 [test_recharge.py-->line:98]:请求结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\test_recharge.py", line 96, in test_recharge
    self.assertEqual(case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 20:25:18,021 [test_recharge.py-->line:99]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-14 20:25:18,021 [test_recharge.py-->line:100]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 20:25:18,022 [test_recharge.py-->line:101]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000356323, 'leave_amount': 503553.68, 'mobile_phone': '15866097991', 'reg_name': '小柠檬', 'reg_time': '2021-04-14 20:25:17.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-14 20:25:18,022 [test_recharge.py-->line:55]:用例【充值金额为负数】开始测试>>>>>>>
DEBUG 2021-04-14 20:25:18,022 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-14 20:25:18,022 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-14 20:25:18,022 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzMjMsImV4cCI6MTYxODQwMzQxN30.lH0OIG4bvxUm3PfPYRg9yJSAn-St06v1SCOIlFDaS49QnbHwtO8o6JzNPr89JE4o78WW4OpL55F0HU0syUHllA'}, 'json': {'member_id': 1000356323, 'amount': -888}}
INFO 2021-04-14 20:25:18,067 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-14 20:25:18,067 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-14 20:25:18,067 [test_recharge.py-->line:119]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-14 20:25:18,068 [test_recharge.py-->line:55]:用例【充值金额为空】开始测试>>>>>>>
DEBUG 2021-04-14 20:25:18,068 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-14 20:25:18,068 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-14 20:25:18,068 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzMjMsImV4cCI6MTYxODQwMzQxN30.lH0OIG4bvxUm3PfPYRg9yJSAn-St06v1SCOIlFDaS49QnbHwtO8o6JzNPr89JE4o78WW4OpL55F0HU0syUHllA'}, 'json': {'member_id': 1000356323}}
INFO 2021-04-14 20:25:18,124 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-14 20:25:18,124 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-14 20:25:18,124 [test_recharge.py-->line:119]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-14 20:25:18,124 [test_recharge.py-->line:55]:用例【充值金额3位小数】开始测试>>>>>>>
DEBUG 2021-04-14 20:25:18,124 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-14 20:25:18,124 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-14 20:25:18,124 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzMjMsImV4cCI6MTYxODQwMzQxN30.lH0OIG4bvxUm3PfPYRg9yJSAn-St06v1SCOIlFDaS49QnbHwtO8o6JzNPr89JE4o78WW4OpL55F0HU0syUHllA'}, 'json': {'member_id': 1000356323, 'amount': 888.888}}
INFO 2021-04-14 20:25:18,168 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-14 20:25:18,169 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-14 20:25:18,169 [test_recharge.py-->line:119]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-14 20:25:18,169 [test_recharge.py-->line:55]:用例【充值金额大于50万】开始测试>>>>>>>
DEBUG 2021-04-14 20:25:18,169 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-14 20:25:18,169 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-14 20:25:18,169 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzMjMsImV4cCI6MTYxODQwMzQxN30.lH0OIG4bvxUm3PfPYRg9yJSAn-St06v1SCOIlFDaS49QnbHwtO8o6JzNPr89JE4o78WW4OpL55F0HU0syUHllA'}, 'json': {'member_id': 1000356323, 'amount': 500001}}
INFO 2021-04-14 20:25:18,206 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-14 20:25:18,207 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-14 20:25:18,207 [test_recharge.py-->line:119]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-14 20:25:18,207 [test_recharge.py-->line:55]:用例【充值金额非数字】开始测试>>>>>>>
DEBUG 2021-04-14 20:25:18,208 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-14 20:25:18,208 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-14 20:25:18,208 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzMjMsImV4cCI6MTYxODQwMzQxN30.lH0OIG4bvxUm3PfPYRg9yJSAn-St06v1SCOIlFDaS49QnbHwtO8o6JzNPr89JE4o78WW4OpL55F0HU0syUHllA'}, 'json': {'member_id': 1000356323, 'amount': '50万'}}
INFO 2021-04-14 20:25:18,246 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-14 20:25:18,246 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-14 20:25:18,246 [test_recharge.py-->line:119]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-14 20:25:18,246 [test_recharge.py-->line:51]:**********充值接口测试结束**********
INFO 2021-04-14 20:25:18,246 [base_case.py-->line:25]:=========注册接口开始测试==========
INFO 2021-04-14 20:25:18,246 [base_case.py-->line:33]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-14 20:25:18,537 [base_case.py-->line:108]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-14 20:25:18,537 [base_case.py-->line:130]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-14 20:25:18,644 [base_case.py-->line:147]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-14 20:25:18,644 [base_case.py-->line:45]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-14 20:25:18,645 [base_case.py-->line:33]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-14 20:25:18,951 [base_case.py-->line:108]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-14 20:25:18,951 [base_case.py-->line:130]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-14 20:25:19,058 [base_case.py-->line:147]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-14 20:25:19,059 [base_case.py-->line:45]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-14 20:25:19,059 [base_case.py-->line:33]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-14 20:25:19,322 [base_case.py-->line:108]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-14 20:25:19,322 [base_case.py-->line:130]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-14 20:25:19,429 [base_case.py-->line:147]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-14 20:25:19,429 [base_case.py-->line:45]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-14 20:25:19,430 [base_case.py-->line:33]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-14 20:25:19,467 [base_case.py-->line:108]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-14 20:25:19,467 [base_case.py-->line:130]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-14 20:25:19,467 [base_case.py-->line:45]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-14 20:25:19,467 [base_case.py-->line:33]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-14 20:25:19,506 [base_case.py-->line:108]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-14 20:25:19,506 [base_case.py-->line:130]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-14 20:25:19,506 [base_case.py-->line:45]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-14 20:25:19,507 [base_case.py-->line:33]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-14 20:25:19,546 [base_case.py-->line:108]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-14 20:25:19,546 [base_case.py-->line:130]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-14 20:25:19,547 [base_case.py-->line:45]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-14 20:25:19,547 [base_case.py-->line:33]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-14 20:25:19,601 [base_case.py-->line:108]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-14 20:25:19,601 [base_case.py-->line:130]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-14 20:25:19,601 [base_case.py-->line:45]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-14 20:25:19,601 [base_case.py-->line:33]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-14 20:25:19,767 [base_case.py-->line:108]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-14 20:25:19,768 [base_case.py-->line:130]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-14 20:25:19,768 [base_case.py-->line:45]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-14 20:25:19,768 [base_case.py-->line:33]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-14 20:25:19,807 [base_case.py-->line:108]:用例【密码7位】状态码断言成功！
INFO 2021-04-14 20:25:19,807 [base_case.py-->line:130]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-14 20:25:19,808 [base_case.py-->line:45]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-14 20:25:19,808 [base_case.py-->line:33]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-14 20:25:19,847 [base_case.py-->line:108]:用例【密码17位】状态码断言成功！
INFO 2021-04-14 20:25:19,847 [base_case.py-->line:130]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-14 20:25:19,847 [base_case.py-->line:45]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-14 20:25:19,847 [base_case.py-->line:33]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-14 20:25:19,893 [base_case.py-->line:108]:用例【不输入密码】状态码断言成功！
INFO 2021-04-14 20:25:19,893 [base_case.py-->line:130]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-14 20:25:19,893 [base_case.py-->line:45]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-14 20:25:19,894 [base_case.py-->line:33]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-14 20:25:19,945 [base_case.py-->line:108]:用例【昵称11位】状态码断言成功！
INFO 2021-04-14 20:25:19,945 [base_case.py-->line:130]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-14 20:25:19,945 [base_case.py-->line:45]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-14 20:25:19,946 [base_case.py-->line:33]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-14 20:25:19,995 [base_case.py-->line:108]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-14 20:25:19,995 [base_case.py-->line:130]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-14 20:25:19,995 [base_case.py-->line:45]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-14 20:25:19,995 [base_case.py-->line:29]:**********注册接口测试结束**********
INFO 2021-04-14 20:26:00,710 [test_audit.py-->line:30]:=========添加项目接口开始测试==========
INFO 2021-04-14 20:26:01,001 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-14 20:26:01,001 [test_audit.py-->line:38]:注册普通用户15815302102成功
INFO 2021-04-14 20:26:01,209 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-14 20:26:01,510 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-14 20:26:01,511 [test_audit.py-->line:54]:注册用户15857085646成功
INFO 2021-04-14 20:26:01,679 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-14 20:26:01,737 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 20:26:01,738 [test_audit.py-->line:71]:添加项目成功！
INFO 2021-04-14 20:26:01,738 [test_audit.py-->line:81]:用例【审核成功-通过】开始测试>>>>>>>
DEBUG 2021-04-14 20:26:01,739 [test_audit.py-->line:102]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-14 20:26:01,739 [test_audit.py-->line:103]:method:patch
DEBUG 2021-04-14 20:26:01,739 [test_audit.py-->line:104]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzNDYsImV4cCI6MTYxODQwMzQ2MX0.FCMH5PsTwpCaQvpqmcSjAqjfIlR1oiKlf57xxfbc6KcHappSD5YSrGwBrTK0YogbB2aXxFZmaDTwMoTwaMRIzg'}, 'json': {'loan_id': 2041872, 'approved_or_not': True}}
INFO 2021-04-14 20:26:01,780 [test_audit.py-->line:117]:状态码断言成功！
INFO 2021-04-14 20:26:01,780 [test_audit.py-->line:130]:请求结果断言成功！
INFO 2021-04-14 20:26:01,810 [test_audit.py-->line:143]:数据库断言成功
INFO 2021-04-14 20:26:01,810 [test_audit.py-->line:145]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-14 20:26:01,856 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 20:26:01,857 [test_audit.py-->line:71]:添加项目成功！
INFO 2021-04-14 20:26:01,857 [test_audit.py-->line:81]:用例【审核成功-不通过】开始测试>>>>>>>
DEBUG 2021-04-14 20:26:01,857 [test_audit.py-->line:102]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-14 20:26:01,857 [test_audit.py-->line:103]:method:patch
DEBUG 2021-04-14 20:26:01,857 [test_audit.py-->line:104]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzNDYsImV4cCI6MTYxODQwMzQ2MX0.FCMH5PsTwpCaQvpqmcSjAqjfIlR1oiKlf57xxfbc6KcHappSD5YSrGwBrTK0YogbB2aXxFZmaDTwMoTwaMRIzg'}, 'json': {'loan_id': 2041873, 'approved_or_not': False}}
INFO 2021-04-14 20:26:01,902 [test_audit.py-->line:117]:状态码断言成功！
INFO 2021-04-14 20:26:01,903 [test_audit.py-->line:130]:请求结果断言成功！
INFO 2021-04-14 20:26:01,933 [test_audit.py-->line:143]:数据库断言成功
INFO 2021-04-14 20:26:01,933 [test_audit.py-->line:145]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-14 20:26:01,992 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 20:26:01,994 [test_audit.py-->line:71]:添加项目成功！
INFO 2021-04-14 20:26:01,994 [test_audit.py-->line:81]:用例【项目id为空】开始测试>>>>>>>
DEBUG 2021-04-14 20:26:01,994 [test_audit.py-->line:102]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-14 20:26:01,995 [test_audit.py-->line:103]:method:patch
DEBUG 2021-04-14 20:26:01,995 [test_audit.py-->line:104]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzNDYsImV4cCI6MTYxODQwMzQ2MX0.FCMH5PsTwpCaQvpqmcSjAqjfIlR1oiKlf57xxfbc6KcHappSD5YSrGwBrTK0YogbB2aXxFZmaDTwMoTwaMRIzg'}, 'json': {'approved_or_not': True}}
INFO 2021-04-14 20:26:02,041 [test_audit.py-->line:117]:状态码断言成功！
INFO 2021-04-14 20:26:02,042 [test_audit.py-->line:130]:请求结果断言成功！
INFO 2021-04-14 20:26:02,045 [test_audit.py-->line:145]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-14 20:26:02,097 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 20:26:02,098 [test_audit.py-->line:71]:添加项目成功！
INFO 2021-04-14 20:26:02,098 [test_audit.py-->line:81]:用例【项目id不是整数】开始测试>>>>>>>
DEBUG 2021-04-14 20:26:02,099 [test_audit.py-->line:102]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-14 20:26:02,099 [test_audit.py-->line:103]:method:patch
DEBUG 2021-04-14 20:26:02,099 [test_audit.py-->line:104]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzNDYsImV4cCI6MTYxODQwMzQ2MX0.FCMH5PsTwpCaQvpqmcSjAqjfIlR1oiKlf57xxfbc6KcHappSD5YSrGwBrTK0YogbB2aXxFZmaDTwMoTwaMRIzg'}, 'json': {'loan_id': '2041875', 'approved_or_not': True}}
INFO 2021-04-14 20:26:02,148 [test_audit.py-->line:117]:状态码断言成功！
ERROR 2021-04-14 20:26:02,149 [test_audit.py-->line:124]:请求结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\test_audit.py", line 122, in test_audit
    self.assertEqual(case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-14 20:26:02,151 [test_audit.py-->line:125]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-14 20:26:02,152 [test_audit.py-->line:126]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 20:26:02,152 [test_audit.py-->line:127]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-14 20:26:02,217 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 20:26:02,218 [test_audit.py-->line:71]:添加项目成功！
INFO 2021-04-14 20:26:02,219 [test_audit.py-->line:81]:用例【不存在的项目id】开始测试>>>>>>>
DEBUG 2021-04-14 20:26:02,220 [test_audit.py-->line:102]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-14 20:26:02,220 [test_audit.py-->line:103]:method:patch
DEBUG 2021-04-14 20:26:02,220 [test_audit.py-->line:104]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzNDYsImV4cCI6MTYxODQwMzQ2MX0.FCMH5PsTwpCaQvpqmcSjAqjfIlR1oiKlf57xxfbc6KcHappSD5YSrGwBrTK0YogbB2aXxFZmaDTwMoTwaMRIzg'}, 'json': {'loan_id': 100000, 'approved_or_not': False}}
INFO 2021-04-14 20:26:02,267 [test_audit.py-->line:117]:状态码断言成功！
INFO 2021-04-14 20:26:02,268 [test_audit.py-->line:130]:请求结果断言成功！
INFO 2021-04-14 20:26:02,268 [test_audit.py-->line:145]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-14 20:26:02,323 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 20:26:02,324 [test_audit.py-->line:71]:添加项目成功！
INFO 2021-04-14 20:26:02,324 [test_audit.py-->line:81]:用例【审核状态不是布尔值】开始测试>>>>>>>
DEBUG 2021-04-14 20:26:02,324 [test_audit.py-->line:102]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-14 20:26:02,324 [test_audit.py-->line:103]:method:patch
DEBUG 2021-04-14 20:26:02,324 [test_audit.py-->line:104]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzNDYsImV4cCI6MTYxODQwMzQ2MX0.FCMH5PsTwpCaQvpqmcSjAqjfIlR1oiKlf57xxfbc6KcHappSD5YSrGwBrTK0YogbB2aXxFZmaDTwMoTwaMRIzg'}, 'json': {'loan_id': 2041877, 'approved_or_not': 2}}
INFO 2021-04-14 20:26:02,381 [test_audit.py-->line:117]:状态码断言成功！
INFO 2021-04-14 20:26:02,381 [test_audit.py-->line:130]:请求结果断言成功！
INFO 2021-04-14 20:26:02,381 [test_audit.py-->line:145]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-14 20:26:02,427 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 20:26:02,427 [test_audit.py-->line:71]:添加项目成功！
INFO 2021-04-14 20:26:02,428 [test_audit.py-->line:81]:用例【审核状态不存在】开始测试>>>>>>>
DEBUG 2021-04-14 20:26:02,428 [test_audit.py-->line:102]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-14 20:26:02,428 [test_audit.py-->line:103]:method:patch
DEBUG 2021-04-14 20:26:02,429 [test_audit.py-->line:104]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzNDYsImV4cCI6MTYxODQwMzQ2MX0.FCMH5PsTwpCaQvpqmcSjAqjfIlR1oiKlf57xxfbc6KcHappSD5YSrGwBrTK0YogbB2aXxFZmaDTwMoTwaMRIzg'}, 'json': {'loan_id': 2041878}}
INFO 2021-04-14 20:26:02,486 [test_audit.py-->line:117]:状态码断言成功！
INFO 2021-04-14 20:26:02,487 [test_audit.py-->line:130]:请求结果断言成功！
INFO 2021-04-14 20:26:02,487 [test_audit.py-->line:145]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-14 20:26:02,488 [base_case.py-->line:29]:**********审核接口测试结束**********
INFO 2021-04-14 20:26:02,488 [test_recharge.py-->line:30]:=========充值接口开始测试==========
INFO 2021-04-14 20:26:02,784 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-14 20:26:02,784 [test_recharge.py-->line:38]:注册用户15879310004成功
INFO 2021-04-14 20:26:02,976 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-14 20:26:02,977 [test_recharge.py-->line:55]:用例【充值成功-整数】开始测试>>>>>>>
DEBUG 2021-04-14 20:26:02,977 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-14 20:26:02,977 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-14 20:26:02,977 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzNDcsImV4cCI6MTYxODQwMzQ2Mn0.0TyDdyzWZV0oo8rWmIKGNlrBT12waXHRaEf_6L7MsP2HsXeiEw9nQ-RkAOyOEDvDkOFqXRgnQpxbaw_Cu356eA'}, 'json': {'member_id': 1000356347, 'amount': 888}}
INFO 2021-04-14 20:26:03,023 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-14 20:26:03,024 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-14 20:26:03,055 [test_recharge.py-->line:117]:数据库断言成功
INFO 2021-04-14 20:26:03,056 [test_recharge.py-->line:119]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-14 20:26:03,056 [test_recharge.py-->line:55]:用例【充值成功-1位小数】开始测试>>>>>>>
DEBUG 2021-04-14 20:26:03,057 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-14 20:26:03,057 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-14 20:26:03,057 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzNDcsImV4cCI6MTYxODQwMzQ2Mn0.0TyDdyzWZV0oo8rWmIKGNlrBT12waXHRaEf_6L7MsP2HsXeiEw9nQ-RkAOyOEDvDkOFqXRgnQpxbaw_Cu356eA'}, 'json': {'member_id': 1000356347, 'amount': 888.8}}
INFO 2021-04-14 20:26:03,119 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-14 20:26:03,119 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-14 20:26:03,149 [test_recharge.py-->line:117]:数据库断言成功
INFO 2021-04-14 20:26:03,149 [test_recharge.py-->line:119]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-14 20:26:03,150 [test_recharge.py-->line:55]:用例【充值成功-2位小数】开始测试>>>>>>>
DEBUG 2021-04-14 20:26:03,150 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-14 20:26:03,150 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-14 20:26:03,150 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzNDcsImV4cCI6MTYxODQwMzQ2Mn0.0TyDdyzWZV0oo8rWmIKGNlrBT12waXHRaEf_6L7MsP2HsXeiEw9nQ-RkAOyOEDvDkOFqXRgnQpxbaw_Cu356eA'}, 'json': {'member_id': 1000356347, 'amount': 888.88}}
INFO 2021-04-14 20:26:03,216 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-14 20:26:03,217 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-14 20:26:03,247 [test_recharge.py-->line:117]:数据库断言成功
INFO 2021-04-14 20:26:03,247 [test_recharge.py-->line:119]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-14 20:26:03,247 [test_recharge.py-->line:55]:用例【充值成功-50万】开始测试>>>>>>>
DEBUG 2021-04-14 20:26:03,247 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-14 20:26:03,248 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-14 20:26:03,248 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzNDcsImV4cCI6MTYxODQwMzQ2Mn0.0TyDdyzWZV0oo8rWmIKGNlrBT12waXHRaEf_6L7MsP2HsXeiEw9nQ-RkAOyOEDvDkOFqXRgnQpxbaw_Cu356eA'}, 'json': {'member_id': 1000356347, 'amount': 500000}}
INFO 2021-04-14 20:26:03,298 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-14 20:26:03,298 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-14 20:26:03,329 [test_recharge.py-->line:117]:数据库断言成功
INFO 2021-04-14 20:26:03,329 [test_recharge.py-->line:119]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-14 20:26:03,329 [test_recharge.py-->line:55]:用例【会员id位空】开始测试>>>>>>>
DEBUG 2021-04-14 20:26:03,330 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-14 20:26:03,330 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-14 20:26:03,330 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzNDcsImV4cCI6MTYxODQwMzQ2Mn0.0TyDdyzWZV0oo8rWmIKGNlrBT12waXHRaEf_6L7MsP2HsXeiEw9nQ-RkAOyOEDvDkOFqXRgnQpxbaw_Cu356eA'}, 'json': {'amount': 800}}
INFO 2021-04-14 20:26:03,372 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-14 20:26:03,373 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-14 20:26:03,373 [test_recharge.py-->line:119]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-14 20:26:03,373 [test_recharge.py-->line:55]:用例【id不是当前登陆的用户】开始测试>>>>>>>
DEBUG 2021-04-14 20:26:03,373 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-14 20:26:03,374 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-14 20:26:03,374 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzNDcsImV4cCI6MTYxODQwMzQ2Mn0.0TyDdyzWZV0oo8rWmIKGNlrBT12waXHRaEf_6L7MsP2HsXeiEw9nQ-RkAOyOEDvDkOFqXRgnQpxbaw_Cu356eA'}, 'json': {'member_id': 1, 'amount': 800}}
INFO 2021-04-14 20:26:03,434 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-14 20:26:03,434 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-14 20:26:03,434 [test_recharge.py-->line:119]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-14 20:26:03,435 [test_recharge.py-->line:55]:用例【会员id为字符串】开始测试>>>>>>>
DEBUG 2021-04-14 20:26:03,435 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-14 20:26:03,436 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-14 20:26:03,436 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzNDcsImV4cCI6MTYxODQwMzQ2Mn0.0TyDdyzWZV0oo8rWmIKGNlrBT12waXHRaEf_6L7MsP2HsXeiEw9nQ-RkAOyOEDvDkOFqXRgnQpxbaw_Cu356eA'}, 'json': {'member_id': '1000356347', 'amount': 888}}
INFO 2021-04-14 20:26:03,494 [test_recharge.py-->line:91]:状态码断言成功！
ERROR 2021-04-14 20:26:03,495 [test_recharge.py-->line:98]:请求结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\test_recharge.py", line 96, in test_recharge
    self.assertEqual(case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-14 20:26:03,496 [test_recharge.py-->line:99]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-14 20:26:03,497 [test_recharge.py-->line:100]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 20:26:03,497 [test_recharge.py-->line:101]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000356347, 'leave_amount': 503553.68, 'mobile_phone': '15879310004', 'reg_name': '小柠檬', 'reg_time': '2021-04-14 20:26:02.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-14 20:26:03,498 [test_recharge.py-->line:55]:用例【会员id位小数】开始测试>>>>>>>
DEBUG 2021-04-14 20:26:03,499 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-14 20:26:03,499 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-14 20:26:03,499 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzNDcsImV4cCI6MTYxODQwMzQ2Mn0.0TyDdyzWZV0oo8rWmIKGNlrBT12waXHRaEf_6L7MsP2HsXeiEw9nQ-RkAOyOEDvDkOFqXRgnQpxbaw_Cu356eA'}, 'json': {'member_id': 1.5, 'amount': 888}}
INFO 2021-04-14 20:26:03,559 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-14 20:26:03,559 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-14 20:26:03,560 [test_recharge.py-->line:119]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-14 20:26:03,560 [test_recharge.py-->line:55]:用例【充值金额为0】开始测试>>>>>>>
DEBUG 2021-04-14 20:26:03,560 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-14 20:26:03,560 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-14 20:26:03,561 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzNDcsImV4cCI6MTYxODQwMzQ2Mn0.0TyDdyzWZV0oo8rWmIKGNlrBT12waXHRaEf_6L7MsP2HsXeiEw9nQ-RkAOyOEDvDkOFqXRgnQpxbaw_Cu356eA'}, 'json': {'member_id': 1000356347, 'amount': 0}}
INFO 2021-04-14 20:26:03,607 [test_recharge.py-->line:91]:状态码断言成功！
ERROR 2021-04-14 20:26:03,608 [test_recharge.py-->line:98]:请求结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\test_recharge.py", line 96, in test_recharge
    self.assertEqual(case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 20:26:03,608 [test_recharge.py-->line:99]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-14 20:26:03,609 [test_recharge.py-->line:100]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 20:26:03,609 [test_recharge.py-->line:101]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000356347, 'leave_amount': 503553.68, 'mobile_phone': '15879310004', 'reg_name': '小柠檬', 'reg_time': '2021-04-14 20:26:02.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-14 20:26:03,609 [test_recharge.py-->line:55]:用例【充值金额为负数】开始测试>>>>>>>
DEBUG 2021-04-14 20:26:03,610 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-14 20:26:03,610 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-14 20:26:03,610 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzNDcsImV4cCI6MTYxODQwMzQ2Mn0.0TyDdyzWZV0oo8rWmIKGNlrBT12waXHRaEf_6L7MsP2HsXeiEw9nQ-RkAOyOEDvDkOFqXRgnQpxbaw_Cu356eA'}, 'json': {'member_id': 1000356347, 'amount': -888}}
INFO 2021-04-14 20:26:03,656 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-14 20:26:03,657 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-14 20:26:03,657 [test_recharge.py-->line:119]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-14 20:26:03,657 [test_recharge.py-->line:55]:用例【充值金额为空】开始测试>>>>>>>
DEBUG 2021-04-14 20:26:03,657 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-14 20:26:03,657 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-14 20:26:03,658 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzNDcsImV4cCI6MTYxODQwMzQ2Mn0.0TyDdyzWZV0oo8rWmIKGNlrBT12waXHRaEf_6L7MsP2HsXeiEw9nQ-RkAOyOEDvDkOFqXRgnQpxbaw_Cu356eA'}, 'json': {'member_id': 1000356347}}
INFO 2021-04-14 20:26:03,713 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-14 20:26:03,713 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-14 20:26:03,713 [test_recharge.py-->line:119]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-14 20:26:03,714 [test_recharge.py-->line:55]:用例【充值金额3位小数】开始测试>>>>>>>
DEBUG 2021-04-14 20:26:03,714 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-14 20:26:03,714 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-14 20:26:03,714 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzNDcsImV4cCI6MTYxODQwMzQ2Mn0.0TyDdyzWZV0oo8rWmIKGNlrBT12waXHRaEf_6L7MsP2HsXeiEw9nQ-RkAOyOEDvDkOFqXRgnQpxbaw_Cu356eA'}, 'json': {'member_id': 1000356347, 'amount': 888.888}}
INFO 2021-04-14 20:26:03,768 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-14 20:26:03,769 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-14 20:26:03,769 [test_recharge.py-->line:119]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-14 20:26:03,769 [test_recharge.py-->line:55]:用例【充值金额大于50万】开始测试>>>>>>>
DEBUG 2021-04-14 20:26:03,770 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-14 20:26:03,770 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-14 20:26:03,770 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzNDcsImV4cCI6MTYxODQwMzQ2Mn0.0TyDdyzWZV0oo8rWmIKGNlrBT12waXHRaEf_6L7MsP2HsXeiEw9nQ-RkAOyOEDvDkOFqXRgnQpxbaw_Cu356eA'}, 'json': {'member_id': 1000356347, 'amount': 500001}}
INFO 2021-04-14 20:26:03,816 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-14 20:26:03,816 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-14 20:26:03,816 [test_recharge.py-->line:119]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-14 20:26:03,817 [test_recharge.py-->line:55]:用例【充值金额非数字】开始测试>>>>>>>
DEBUG 2021-04-14 20:26:03,817 [test_recharge.py-->line:76]:url:http://api.lemonban.com/futureloan/member/recharge
DEBUG 2021-04-14 20:26:03,817 [test_recharge.py-->line:77]:method:post
DEBUG 2021-04-14 20:26:03,817 [test_recharge.py-->line:78]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTYzNDcsImV4cCI6MTYxODQwMzQ2Mn0.0TyDdyzWZV0oo8rWmIKGNlrBT12waXHRaEf_6L7MsP2HsXeiEw9nQ-RkAOyOEDvDkOFqXRgnQpxbaw_Cu356eA'}, 'json': {'member_id': 1000356347, 'amount': '50万'}}
INFO 2021-04-14 20:26:03,857 [test_recharge.py-->line:91]:状态码断言成功！
INFO 2021-04-14 20:26:03,857 [test_recharge.py-->line:104]:请求结果断言成功！
INFO 2021-04-14 20:26:03,857 [test_recharge.py-->line:119]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-14 20:26:03,857 [test_recharge.py-->line:51]:**********充值接口测试结束**********
INFO 2021-04-14 20:26:03,857 [base_case.py-->line:25]:=========注册接口开始测试==========
INFO 2021-04-14 20:27:12,119 [base_case.py-->line:33]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-14 20:34:01,780 [base_case.py-->line:108]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-14 20:35:07,883 [base_case.py-->line:130]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-14 20:37:22,481 [base_case.py-->line:147]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-14 20:37:28,160 [base_case.py-->line:45]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-14 20:40:22,129 [test_audit.py-->line:30]:=========添加项目接口开始测试==========
INFO 2021-04-14 20:40:22,400 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-14 20:40:22,401 [test_audit.py-->line:38]:注册普通用户15826364394成功
INFO 2021-04-14 20:40:22,574 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-14 20:40:22,851 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-14 20:40:22,852 [test_audit.py-->line:54]:注册用户15856190307成功
INFO 2021-04-14 20:40:23,012 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-14 20:40:23,077 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 20:40:23,077 [test_audit.py-->line:71]:添加项目成功！
INFO 2021-04-14 20:40:23,077 [test_audit.py-->line:81]:用例【审核成功-通过】开始测试>>>>>>>
DEBUG 2021-04-14 20:40:23,077 [test_audit.py-->line:102]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-14 20:40:23,078 [test_audit.py-->line:103]:method:patch
DEBUG 2021-04-14 20:40:23,078 [test_audit.py-->line:104]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTY0MTAsImV4cCI6MTYxODQwNDMyMn0.BwfKWXsIM8Lo6uyPlBjiuwwZB5naM_1r2MMM749tIYzpUfZ_u00Cdpwo2WDOCZPtoF-WdSx2b1BftjtlrM-Ulg'}, 'json': {'loan_id': 2041913, 'approved_or_not': True}}
INFO 2021-04-14 20:40:23,131 [test_audit.py-->line:117]:状态码断言成功！
INFO 2021-04-14 20:40:23,131 [test_audit.py-->line:130]:请求结果断言成功！
INFO 2021-04-14 20:40:23,155 [test_audit.py-->line:143]:数据库断言成功
INFO 2021-04-14 20:40:23,155 [test_audit.py-->line:145]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-14 20:40:23,211 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 20:40:23,211 [test_audit.py-->line:71]:添加项目成功！
INFO 2021-04-14 20:40:23,211 [test_audit.py-->line:81]:用例【审核成功-不通过】开始测试>>>>>>>
DEBUG 2021-04-14 20:40:23,211 [test_audit.py-->line:102]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-14 20:40:23,211 [test_audit.py-->line:103]:method:patch
DEBUG 2021-04-14 20:40:23,211 [test_audit.py-->line:104]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTY0MTAsImV4cCI6MTYxODQwNDMyMn0.BwfKWXsIM8Lo6uyPlBjiuwwZB5naM_1r2MMM749tIYzpUfZ_u00Cdpwo2WDOCZPtoF-WdSx2b1BftjtlrM-Ulg'}, 'json': {'loan_id': 2041914, 'approved_or_not': False}}
INFO 2021-04-14 20:40:23,265 [test_audit.py-->line:117]:状态码断言成功！
INFO 2021-04-14 20:40:23,265 [test_audit.py-->line:130]:请求结果断言成功！
INFO 2021-04-14 20:40:23,289 [test_audit.py-->line:143]:数据库断言成功
INFO 2021-04-14 20:40:23,289 [test_audit.py-->line:145]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-14 20:40:23,350 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 20:40:23,350 [test_audit.py-->line:71]:添加项目成功！
INFO 2021-04-14 20:40:23,350 [test_audit.py-->line:81]:用例【项目id为空】开始测试>>>>>>>
DEBUG 2021-04-14 20:40:23,350 [test_audit.py-->line:102]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-14 20:40:23,350 [test_audit.py-->line:103]:method:patch
DEBUG 2021-04-14 20:40:23,350 [test_audit.py-->line:104]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTY0MTAsImV4cCI6MTYxODQwNDMyMn0.BwfKWXsIM8Lo6uyPlBjiuwwZB5naM_1r2MMM749tIYzpUfZ_u00Cdpwo2WDOCZPtoF-WdSx2b1BftjtlrM-Ulg'}, 'json': {'approved_or_not': True}}
INFO 2021-04-14 20:40:23,404 [test_audit.py-->line:117]:状态码断言成功！
INFO 2021-04-14 20:40:23,404 [test_audit.py-->line:130]:请求结果断言成功！
INFO 2021-04-14 20:40:23,404 [test_audit.py-->line:145]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-14 20:40:23,448 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 20:40:23,448 [test_audit.py-->line:71]:添加项目成功！
INFO 2021-04-14 20:40:23,449 [test_audit.py-->line:81]:用例【项目id不是整数】开始测试>>>>>>>
DEBUG 2021-04-14 20:40:23,449 [test_audit.py-->line:102]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-14 20:40:23,449 [test_audit.py-->line:103]:method:patch
DEBUG 2021-04-14 20:40:23,449 [test_audit.py-->line:104]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTY0MTAsImV4cCI6MTYxODQwNDMyMn0.BwfKWXsIM8Lo6uyPlBjiuwwZB5naM_1r2MMM749tIYzpUfZ_u00Cdpwo2WDOCZPtoF-WdSx2b1BftjtlrM-Ulg'}, 'json': {'loan_id': '2041916', 'approved_or_not': True}}
INFO 2021-04-14 20:40:23,493 [test_audit.py-->line:117]:状态码断言成功！
ERROR 2021-04-14 20:40:23,494 [test_audit.py-->line:124]:请求结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\test_audit.py", line 122, in test_audit
    self.assertEqual(case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-14 20:40:23,500 [test_audit.py-->line:125]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-14 20:40:23,500 [test_audit.py-->line:126]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 20:40:23,500 [test_audit.py-->line:127]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-14 20:40:23,560 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 20:40:23,560 [test_audit.py-->line:71]:添加项目成功！
INFO 2021-04-14 20:40:23,560 [test_audit.py-->line:81]:用例【不存在的项目id】开始测试>>>>>>>
DEBUG 2021-04-14 20:40:23,561 [test_audit.py-->line:102]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-14 20:40:23,561 [test_audit.py-->line:103]:method:patch
DEBUG 2021-04-14 20:40:23,561 [test_audit.py-->line:104]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTY0MTAsImV4cCI6MTYxODQwNDMyMn0.BwfKWXsIM8Lo6uyPlBjiuwwZB5naM_1r2MMM749tIYzpUfZ_u00Cdpwo2WDOCZPtoF-WdSx2b1BftjtlrM-Ulg'}, 'json': {'loan_id': 100000, 'approved_or_not': False}}
INFO 2021-04-14 20:40:23,613 [test_audit.py-->line:117]:状态码断言成功！
INFO 2021-04-14 20:40:23,613 [test_audit.py-->line:130]:请求结果断言成功！
INFO 2021-04-14 20:40:23,614 [test_audit.py-->line:145]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-14 20:40:23,671 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 20:40:23,672 [test_audit.py-->line:71]:添加项目成功！
INFO 2021-04-14 20:40:23,672 [test_audit.py-->line:81]:用例【审核状态不是布尔值】开始测试>>>>>>>
DEBUG 2021-04-14 20:40:23,672 [test_audit.py-->line:102]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-14 20:40:23,673 [test_audit.py-->line:103]:method:patch
DEBUG 2021-04-14 20:40:23,673 [test_audit.py-->line:104]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTY0MTAsImV4cCI6MTYxODQwNDMyMn0.BwfKWXsIM8Lo6uyPlBjiuwwZB5naM_1r2MMM749tIYzpUfZ_u00Cdpwo2WDOCZPtoF-WdSx2b1BftjtlrM-Ulg'}, 'json': {'loan_id': 2041918, 'approved_or_not': 2}}
INFO 2021-04-14 20:40:23,713 [test_audit.py-->line:117]:状态码断言成功！
INFO 2021-04-14 20:40:23,713 [test_audit.py-->line:130]:请求结果断言成功！
INFO 2021-04-14 20:40:23,714 [test_audit.py-->line:145]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-14 20:40:23,755 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 20:40:23,756 [test_audit.py-->line:71]:添加项目成功！
INFO 2021-04-14 20:40:23,756 [test_audit.py-->line:81]:用例【审核状态不存在】开始测试>>>>>>>
DEBUG 2021-04-14 20:40:23,756 [test_audit.py-->line:102]:url:http://api.lemonban.com/futureloan/loan/audit
DEBUG 2021-04-14 20:40:23,756 [test_audit.py-->line:103]:method:patch
DEBUG 2021-04-14 20:40:23,756 [test_audit.py-->line:104]:args:{'headers': {'X-Lemonban-Media-Type': 'lemonban.v2', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTY0MTAsImV4cCI6MTYxODQwNDMyMn0.BwfKWXsIM8Lo6uyPlBjiuwwZB5naM_1r2MMM749tIYzpUfZ_u00Cdpwo2WDOCZPtoF-WdSx2b1BftjtlrM-Ulg'}, 'json': {'loan_id': 2041919}}
INFO 2021-04-14 20:40:23,803 [test_audit.py-->line:117]:状态码断言成功！
INFO 2021-04-14 20:40:23,803 [test_audit.py-->line:130]:请求结果断言成功！
INFO 2021-04-14 20:40:23,803 [test_audit.py-->line:145]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-14 20:40:23,803 [base_case.py-->line:29]:**********审核接口测试结束**********
INFO 2021-04-14 20:40:23,804 [test_recharge.py-->line:24]:=========充值接口开始测试==========
INFO 2021-04-14 20:40:24,082 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-14 20:40:24,083 [test_recharge.py-->line:32]:注册用户15884227762成功
INFO 2021-04-14 20:40:24,260 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-14 20:40:24,261 [base_case.py-->line:33]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-14 20:40:24,316 [base_case.py-->line:108]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-14 20:40:24,317 [base_case.py-->line:130]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-14 20:40:24,341 [base_case.py-->line:147]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-14 20:40:24,342 [base_case.py-->line:45]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-14 20:40:24,342 [base_case.py-->line:33]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-14 20:40:24,393 [base_case.py-->line:108]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-14 20:40:24,393 [base_case.py-->line:130]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-14 20:40:24,417 [base_case.py-->line:147]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-14 20:40:24,418 [base_case.py-->line:45]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-14 20:40:24,418 [base_case.py-->line:33]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-14 20:40:24,474 [base_case.py-->line:108]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-14 20:40:24,475 [base_case.py-->line:130]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-14 20:40:24,498 [base_case.py-->line:147]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-14 20:40:24,499 [base_case.py-->line:45]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-14 20:40:24,499 [base_case.py-->line:33]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-14 20:40:24,543 [base_case.py-->line:108]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-14 20:40:24,543 [base_case.py-->line:130]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-14 20:40:24,567 [base_case.py-->line:147]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-14 20:40:24,568 [base_case.py-->line:45]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-14 20:40:24,572 [base_case.py-->line:33]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-14 20:40:24,613 [base_case.py-->line:108]:用例【会员id位空】状态码断言成功！
INFO 2021-04-14 20:40:24,613 [base_case.py-->line:130]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-14 20:40:24,613 [base_case.py-->line:45]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-14 20:40:24,613 [base_case.py-->line:33]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-14 20:40:24,668 [base_case.py-->line:108]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-14 20:40:24,669 [base_case.py-->line:130]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-14 20:40:24,669 [base_case.py-->line:45]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-14 20:40:24,669 [base_case.py-->line:33]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-14 20:40:24,726 [base_case.py-->line:108]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-14 20:40:24,727 [base_case.py-->line:124]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\base_case.py", line 122, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-14 20:40:24,727 [base_case.py-->line:125]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-14 20:40:24,727 [base_case.py-->line:126]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 20:40:24,728 [base_case.py-->line:127]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000356411, 'leave_amount': 503553.68, 'mobile_phone': '15884227762', 'reg_name': '小柠檬', 'reg_time': '2021-04-14 20:40:24.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-14 20:40:24,729 [base_case.py-->line:33]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-14 20:40:24,780 [base_case.py-->line:108]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-14 20:40:24,781 [base_case.py-->line:130]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-14 20:40:24,781 [base_case.py-->line:45]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-14 20:40:24,781 [base_case.py-->line:33]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-14 20:40:24,838 [base_case.py-->line:108]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-14 20:40:24,838 [base_case.py-->line:124]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\base_case.py", line 122, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 20:40:24,839 [base_case.py-->line:125]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-14 20:40:24,839 [base_case.py-->line:126]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 20:40:24,839 [base_case.py-->line:127]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000356411, 'leave_amount': 503553.68, 'mobile_phone': '15884227762', 'reg_name': '小柠檬', 'reg_time': '2021-04-14 20:40:24.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-14 20:40:24,840 [base_case.py-->line:33]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-14 20:40:24,893 [base_case.py-->line:108]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-14 20:40:24,894 [base_case.py-->line:130]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-14 20:40:24,894 [base_case.py-->line:45]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-14 20:40:24,895 [base_case.py-->line:33]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-14 20:40:24,953 [base_case.py-->line:108]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-14 20:40:24,953 [base_case.py-->line:130]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-14 20:40:24,953 [base_case.py-->line:45]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-14 20:40:24,953 [base_case.py-->line:33]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-14 20:40:25,004 [base_case.py-->line:108]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-14 20:40:25,004 [base_case.py-->line:130]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-14 20:40:25,004 [base_case.py-->line:45]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-14 20:40:25,005 [base_case.py-->line:33]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-14 20:40:25,044 [base_case.py-->line:108]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-14 20:40:25,044 [base_case.py-->line:130]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-14 20:40:25,044 [base_case.py-->line:45]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-14 20:40:25,045 [base_case.py-->line:33]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-14 20:40:25,087 [base_case.py-->line:108]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-14 20:40:25,087 [base_case.py-->line:130]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-14 20:40:25,087 [base_case.py-->line:45]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-14 20:40:25,087 [base_case.py-->line:29]:**********充值接口测试结束**********
INFO 2021-04-14 20:40:25,087 [base_case.py-->line:25]:=========注册接口开始测试==========
INFO 2021-04-14 20:40:25,087 [base_case.py-->line:33]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-14 20:40:25,360 [base_case.py-->line:108]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-14 20:40:25,360 [base_case.py-->line:130]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-14 20:40:25,478 [base_case.py-->line:147]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-14 20:40:25,479 [base_case.py-->line:45]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-14 20:40:25,479 [base_case.py-->line:33]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-14 20:40:25,846 [base_case.py-->line:108]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-14 20:40:25,846 [base_case.py-->line:130]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-14 20:40:25,959 [base_case.py-->line:147]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-14 20:40:25,960 [base_case.py-->line:45]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-14 20:40:25,960 [base_case.py-->line:33]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-14 20:40:26,307 [base_case.py-->line:108]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-14 20:40:26,307 [base_case.py-->line:130]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-14 20:40:26,473 [base_case.py-->line:147]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-14 20:40:26,473 [base_case.py-->line:45]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-14 20:40:26,473 [base_case.py-->line:33]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-14 20:40:26,511 [base_case.py-->line:108]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-14 20:40:26,511 [base_case.py-->line:130]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-14 20:40:26,511 [base_case.py-->line:45]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-14 20:40:26,512 [base_case.py-->line:33]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-14 20:40:26,548 [base_case.py-->line:108]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-14 20:40:26,548 [base_case.py-->line:130]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-14 20:40:26,548 [base_case.py-->line:45]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-14 20:40:26,548 [base_case.py-->line:33]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-14 20:40:26,589 [base_case.py-->line:108]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-14 20:40:26,589 [base_case.py-->line:130]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-14 20:40:26,589 [base_case.py-->line:45]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-14 20:40:26,589 [base_case.py-->line:33]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-14 20:40:26,642 [base_case.py-->line:108]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-14 20:40:26,642 [base_case.py-->line:130]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-14 20:40:26,642 [base_case.py-->line:45]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-14 20:40:26,643 [base_case.py-->line:33]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-14 20:40:26,812 [base_case.py-->line:108]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-14 20:40:26,813 [base_case.py-->line:130]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-14 20:40:26,813 [base_case.py-->line:45]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-14 20:40:26,813 [base_case.py-->line:33]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-14 20:40:26,864 [base_case.py-->line:108]:用例【密码7位】状态码断言成功！
INFO 2021-04-14 20:40:26,864 [base_case.py-->line:130]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-14 20:40:26,864 [base_case.py-->line:45]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-14 20:40:26,864 [base_case.py-->line:33]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-14 20:40:26,919 [base_case.py-->line:108]:用例【密码17位】状态码断言成功！
INFO 2021-04-14 20:40:26,919 [base_case.py-->line:130]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-14 20:40:26,919 [base_case.py-->line:45]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-14 20:40:26,919 [base_case.py-->line:33]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-14 20:40:26,956 [base_case.py-->line:108]:用例【不输入密码】状态码断言成功！
INFO 2021-04-14 20:40:26,957 [base_case.py-->line:130]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-14 20:40:26,957 [base_case.py-->line:45]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-14 20:40:26,957 [base_case.py-->line:33]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-14 20:40:26,994 [base_case.py-->line:108]:用例【昵称11位】状态码断言成功！
INFO 2021-04-14 20:40:26,995 [base_case.py-->line:130]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-14 20:40:26,995 [base_case.py-->line:45]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-14 20:40:26,995 [base_case.py-->line:33]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-14 20:40:27,049 [base_case.py-->line:108]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-14 20:40:27,050 [base_case.py-->line:130]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-14 20:40:27,050 [base_case.py-->line:45]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-14 20:40:27,050 [base_case.py-->line:29]:**********注册接口测试结束**********
INFO 2021-04-14 20:42:04,361 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-14 20:42:04,746 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-14 20:42:04,746 [test_audit.py-->line:31]:注册普通用户15841245507成功
INFO 2021-04-14 20:42:04,987 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-14 20:42:05,388 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-14 20:42:05,388 [test_audit.py-->line:47]:注册用户15812125491成功
INFO 2021-04-14 20:42:05,618 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-14 20:42:05,673 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 20:42:05,674 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 20:42:05,674 [base_case.py-->line:33]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-14 20:42:05,728 [base_case.py-->line:108]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-14 20:42:05,728 [base_case.py-->line:130]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-14 20:42:05,744 [base_case.py-->line:147]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-14 20:42:05,744 [base_case.py-->line:45]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-14 20:42:05,798 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 20:42:05,798 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 20:42:05,798 [base_case.py-->line:33]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-14 20:42:05,837 [base_case.py-->line:108]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-14 20:42:05,837 [base_case.py-->line:130]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-14 20:42:05,854 [base_case.py-->line:147]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-14 20:42:05,854 [base_case.py-->line:45]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-14 20:42:05,896 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 20:42:05,896 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 20:42:05,896 [base_case.py-->line:33]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-14 20:42:05,933 [base_case.py-->line:108]:用例【项目id为空】状态码断言成功！
INFO 2021-04-14 20:42:05,934 [base_case.py-->line:130]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-14 20:42:05,934 [base_case.py-->line:45]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-14 20:42:05,975 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 20:42:05,975 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 20:42:05,976 [base_case.py-->line:33]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-14 20:42:06,019 [base_case.py-->line:108]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-14 20:42:06,020 [base_case.py-->line:124]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\base_case.py", line 122, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-14 20:42:06,021 [base_case.py-->line:125]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-14 20:42:06,021 [base_case.py-->line:126]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 20:42:06,021 [base_case.py-->line:127]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-14 20:42:06,077 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 20:42:06,077 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 20:42:06,078 [base_case.py-->line:33]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-14 20:42:06,119 [base_case.py-->line:108]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-14 20:42:06,119 [base_case.py-->line:130]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-14 20:42:06,120 [base_case.py-->line:45]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-14 20:42:06,162 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 20:42:06,162 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 20:42:06,162 [base_case.py-->line:33]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-14 20:42:06,200 [base_case.py-->line:108]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-14 20:42:06,201 [base_case.py-->line:130]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-14 20:42:06,201 [base_case.py-->line:45]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-14 20:42:06,245 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 20:42:06,245 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 20:42:06,245 [base_case.py-->line:33]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-14 20:42:06,284 [base_case.py-->line:108]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-14 20:42:06,284 [base_case.py-->line:130]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-14 20:42:06,284 [base_case.py-->line:45]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-14 20:42:06,284 [base_case.py-->line:29]:**********审核接口测试结束**********
INFO 2021-04-14 20:42:06,284 [test_recharge.py-->line:24]:=========充值接口开始测试==========
INFO 2021-04-14 20:42:06,628 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-14 20:42:06,628 [test_recharge.py-->line:32]:注册用户15803844663成功
INFO 2021-04-14 20:42:06,858 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-14 20:42:06,858 [base_case.py-->line:33]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-14 20:42:06,903 [base_case.py-->line:108]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-14 20:42:06,903 [base_case.py-->line:130]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-14 20:42:06,919 [base_case.py-->line:147]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-14 20:42:06,919 [base_case.py-->line:45]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-14 20:42:06,920 [base_case.py-->line:33]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-14 20:42:06,981 [base_case.py-->line:108]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-14 20:42:06,981 [base_case.py-->line:130]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-14 20:42:06,996 [base_case.py-->line:147]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-14 20:42:06,996 [base_case.py-->line:45]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-14 20:42:06,997 [base_case.py-->line:33]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-14 20:42:07,041 [base_case.py-->line:108]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-14 20:42:07,042 [base_case.py-->line:130]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-14 20:42:07,058 [base_case.py-->line:147]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-14 20:42:07,058 [base_case.py-->line:45]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-14 20:42:07,059 [base_case.py-->line:33]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-14 20:42:07,104 [base_case.py-->line:108]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-14 20:42:07,104 [base_case.py-->line:130]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-14 20:42:07,121 [base_case.py-->line:147]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-14 20:42:07,121 [base_case.py-->line:45]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-14 20:42:07,121 [base_case.py-->line:33]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-14 20:42:07,160 [base_case.py-->line:108]:用例【会员id位空】状态码断言成功！
INFO 2021-04-14 20:42:07,160 [base_case.py-->line:130]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-14 20:42:07,161 [base_case.py-->line:45]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-14 20:42:07,161 [base_case.py-->line:33]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-14 20:42:07,202 [base_case.py-->line:108]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-14 20:42:07,202 [base_case.py-->line:130]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-14 20:42:07,202 [base_case.py-->line:45]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-14 20:42:07,202 [base_case.py-->line:33]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-14 20:42:07,258 [base_case.py-->line:108]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-14 20:42:07,259 [base_case.py-->line:124]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\base_case.py", line 122, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-14 20:42:07,259 [base_case.py-->line:125]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-14 20:42:07,259 [base_case.py-->line:126]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 20:42:07,259 [base_case.py-->line:127]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000356422, 'leave_amount': 503553.68, 'mobile_phone': '15803844663', 'reg_name': '小柠檬', 'reg_time': '2021-04-14 20:42:06.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-14 20:42:07,260 [base_case.py-->line:33]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-14 20:42:07,301 [base_case.py-->line:108]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-14 20:42:07,301 [base_case.py-->line:130]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-14 20:42:07,301 [base_case.py-->line:45]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-14 20:42:07,302 [base_case.py-->line:33]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-14 20:42:07,344 [base_case.py-->line:108]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-14 20:42:07,344 [base_case.py-->line:124]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\base_case.py", line 122, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 20:42:07,345 [base_case.py-->line:125]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-14 20:42:07,345 [base_case.py-->line:126]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 20:42:07,345 [base_case.py-->line:127]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000356422, 'leave_amount': 503553.68, 'mobile_phone': '15803844663', 'reg_name': '小柠檬', 'reg_time': '2021-04-14 20:42:06.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-14 20:42:07,346 [base_case.py-->line:33]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-14 20:42:07,398 [base_case.py-->line:108]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-14 20:42:07,398 [base_case.py-->line:130]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-14 20:42:07,398 [base_case.py-->line:45]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-14 20:42:07,399 [base_case.py-->line:33]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-14 20:42:07,449 [base_case.py-->line:108]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-14 20:42:07,449 [base_case.py-->line:130]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-14 20:42:07,449 [base_case.py-->line:45]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-14 20:42:07,449 [base_case.py-->line:33]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-14 20:42:07,488 [base_case.py-->line:108]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-14 20:42:07,488 [base_case.py-->line:130]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-14 20:42:07,488 [base_case.py-->line:45]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-14 20:42:07,488 [base_case.py-->line:33]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-14 20:42:07,532 [base_case.py-->line:108]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-14 20:42:07,532 [base_case.py-->line:130]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-14 20:42:07,532 [base_case.py-->line:45]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-14 20:42:07,533 [base_case.py-->line:33]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-14 20:42:07,570 [base_case.py-->line:108]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-14 20:42:07,570 [base_case.py-->line:130]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-14 20:42:07,570 [base_case.py-->line:45]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-14 20:42:07,571 [base_case.py-->line:29]:**********充值接口测试结束**********
INFO 2021-04-14 20:42:07,571 [base_case.py-->line:25]:=========注册接口开始测试==========
INFO 2021-04-14 20:42:07,571 [base_case.py-->line:33]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-14 20:42:07,896 [base_case.py-->line:108]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-14 20:42:07,896 [base_case.py-->line:130]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-14 20:42:07,996 [base_case.py-->line:147]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-14 20:42:07,996 [base_case.py-->line:45]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-14 20:42:07,996 [base_case.py-->line:33]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-14 20:42:08,254 [base_case.py-->line:108]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-14 20:42:08,255 [base_case.py-->line:130]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-14 20:42:08,354 [base_case.py-->line:147]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-14 20:42:08,354 [base_case.py-->line:45]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-14 20:42:08,354 [base_case.py-->line:33]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-14 20:42:08,626 [base_case.py-->line:108]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-14 20:42:08,626 [base_case.py-->line:130]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-14 20:42:08,726 [base_case.py-->line:147]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-14 20:42:08,726 [base_case.py-->line:45]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-14 20:42:08,726 [base_case.py-->line:33]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-14 20:42:08,779 [base_case.py-->line:108]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-14 20:42:08,779 [base_case.py-->line:130]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-14 20:42:08,780 [base_case.py-->line:45]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-14 20:42:08,780 [base_case.py-->line:33]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-14 20:42:08,816 [base_case.py-->line:108]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-14 20:42:08,816 [base_case.py-->line:130]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-14 20:42:08,816 [base_case.py-->line:45]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-14 20:42:08,816 [base_case.py-->line:33]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-14 20:42:08,868 [base_case.py-->line:108]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-14 20:42:08,868 [base_case.py-->line:130]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-14 20:42:08,868 [base_case.py-->line:45]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-14 20:42:08,869 [base_case.py-->line:33]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-14 20:42:08,924 [base_case.py-->line:108]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-14 20:42:08,924 [base_case.py-->line:130]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-14 20:42:08,925 [base_case.py-->line:45]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-14 20:42:08,925 [base_case.py-->line:33]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-14 20:42:09,084 [base_case.py-->line:108]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-14 20:42:09,084 [base_case.py-->line:130]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-14 20:42:09,084 [base_case.py-->line:45]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-14 20:42:09,084 [base_case.py-->line:33]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-14 20:42:09,123 [base_case.py-->line:108]:用例【密码7位】状态码断言成功！
INFO 2021-04-14 20:42:09,123 [base_case.py-->line:130]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-14 20:42:09,123 [base_case.py-->line:45]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-14 20:42:09,124 [base_case.py-->line:33]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-14 20:42:09,164 [base_case.py-->line:108]:用例【密码17位】状态码断言成功！
INFO 2021-04-14 20:42:09,164 [base_case.py-->line:130]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-14 20:42:09,165 [base_case.py-->line:45]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-14 20:42:09,165 [base_case.py-->line:33]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-14 20:42:09,216 [base_case.py-->line:108]:用例【不输入密码】状态码断言成功！
INFO 2021-04-14 20:42:09,216 [base_case.py-->line:130]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-14 20:42:09,216 [base_case.py-->line:45]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-14 20:42:09,216 [base_case.py-->line:33]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-14 20:42:09,252 [base_case.py-->line:108]:用例【昵称11位】状态码断言成功！
INFO 2021-04-14 20:42:09,253 [base_case.py-->line:130]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-14 20:42:09,253 [base_case.py-->line:45]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-14 20:42:09,253 [base_case.py-->line:33]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-14 20:42:09,304 [base_case.py-->line:108]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-14 20:42:09,304 [base_case.py-->line:130]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-14 20:42:09,304 [base_case.py-->line:45]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-14 20:42:09,304 [base_case.py-->line:29]:**********注册接口测试结束**********
INFO 2021-04-14 21:22:38,831 [base_case.py-->line:25]:=========贷款业务流接口开始测试==========
INFO 2021-04-14 21:22:38,834 [base_case.py-->line:33]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-14 21:22:38,992 [base_case.py-->line:108]:用例【普通投资用户注册】状态码断言成功！
ERROR 2021-04-14 21:22:38,993 [base_case.py-->line:124]:用例【普通投资用户注册】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 0, 'msg': 'OK'} != {'code': 2, 'msg': '密码格式为8到16位'}
- {'code': 0, 'msg': 'OK'}
?          ^          ^^

+ {'code': 2, 'msg': '密码格式为8到16位'}
?          ^          ^^^^^^^^^^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\base_case.py", line 122, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 0, 'msg': 'OK'} != {'code': 2, 'msg': '密码格式为8到16位'}
DEBUG 2021-04-14 21:22:38,994 [base_case.py-->line:125]:期望数据：{'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 21:22:38,994 [base_case.py-->line:126]:实际结果: {'code': 2, 'msg': '密码格式为8到16位'}
DEBUG 2021-04-14 21:22:38,994 [base_case.py-->line:127]:响应结果：{'code': 2, 'msg': '密码格式为8到16位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-14 21:22:39,008 [base_case.py-->line:29]:**********贷款业务流接口测试结束**********
INFO 2021-04-14 21:23:15,682 [base_case.py-->line:25]:=========贷款业务流接口开始测试==========
INFO 2021-04-14 21:23:15,684 [base_case.py-->line:33]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-14 21:23:15,992 [base_case.py-->line:108]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-14 21:23:15,993 [base_case.py-->line:130]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-14 21:23:15,993 [base_case.py-->line:45]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-14 21:23:16,002 [base_case.py-->line:29]:**********贷款业务流接口测试结束**********
INFO 2021-04-14 21:40:40,534 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-14 21:40:40,824 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-14 21:40:40,824 [test_audit.py-->line:31]:注册普通用户15863751006成功
INFO 2021-04-14 21:40:41,000 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-14 21:40:41,352 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-14 21:40:41,352 [test_audit.py-->line:47]:注册用户15898784935成功
INFO 2021-04-14 21:40:41,539 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-14 21:40:41,593 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 21:40:41,593 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 21:40:41,593 [base_case.py-->line:33]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-14 21:40:41,648 [base_case.py-->line:108]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-14 21:40:41,648 [base_case.py-->line:130]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-14 21:40:41,667 [base_case.py-->line:147]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-14 21:40:41,667 [base_case.py-->line:45]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-14 21:40:41,727 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 21:40:41,727 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 21:40:41,727 [base_case.py-->line:33]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-14 21:40:41,782 [base_case.py-->line:108]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-14 21:40:41,783 [base_case.py-->line:130]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-14 21:40:41,802 [base_case.py-->line:147]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-14 21:40:41,802 [base_case.py-->line:45]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-14 21:40:41,850 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 21:40:41,850 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 21:40:41,850 [base_case.py-->line:33]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-14 21:40:41,908 [base_case.py-->line:108]:用例【项目id为空】状态码断言成功！
INFO 2021-04-14 21:40:41,909 [base_case.py-->line:130]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-14 21:40:41,909 [base_case.py-->line:45]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-14 21:40:41,964 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 21:40:41,964 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 21:40:41,964 [base_case.py-->line:33]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-14 21:40:42,013 [base_case.py-->line:108]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-14 21:40:42,014 [base_case.py-->line:124]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\base_case.py", line 122, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-14 21:40:42,019 [base_case.py-->line:125]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-14 21:40:42,020 [base_case.py-->line:126]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 21:40:42,020 [base_case.py-->line:127]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-14 21:40:42,066 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 21:40:42,066 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 21:40:42,070 [base_case.py-->line:33]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-14 21:40:42,113 [base_case.py-->line:108]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-14 21:40:42,113 [base_case.py-->line:130]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-14 21:40:42,113 [base_case.py-->line:45]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-14 21:40:42,155 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 21:40:42,155 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 21:40:42,155 [base_case.py-->line:33]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-14 21:40:42,191 [base_case.py-->line:108]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-14 21:40:42,191 [base_case.py-->line:130]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-14 21:40:42,191 [base_case.py-->line:45]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-14 21:40:42,235 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 21:40:42,235 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 21:40:42,236 [base_case.py-->line:33]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-14 21:40:42,275 [base_case.py-->line:108]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-14 21:40:42,276 [base_case.py-->line:130]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-14 21:40:42,276 [base_case.py-->line:45]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-14 21:40:42,276 [base_case.py-->line:29]:**********审核接口测试结束**********
INFO 2021-04-14 21:40:42,276 [base_case.py-->line:25]:=========贷款业务流接口开始测试==========
INFO 2021-04-14 21:40:42,276 [base_case.py-->line:33]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-14 21:40:42,550 [base_case.py-->line:108]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-14 21:40:42,550 [base_case.py-->line:130]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-14 21:40:42,550 [base_case.py-->line:45]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-14 21:40:42,551 [base_case.py-->line:33]:用例【普通融资用户登录】开始测试>>>>>>>
ERROR 2021-04-14 21:40:42,551 [base_case.py-->line:91]:用例【普通融资用户登录】发送http请求错误
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\base_case.py", line 89, in step
    self.response = send_http_request(url=self.case['url'], method=self.case['method'], **self.case['request'])
KeyError: 'method'
DEBUG 2021-04-14 21:40:42,551 [base_case.py-->line:92]:url:http://api.lemonban.com/futureloan/member/login
INFO 2021-04-14 21:40:42,552 [base_case.py-->line:33]:用例【添加项目】开始测试>>>>>>>
ERROR 2021-04-14 21:40:42,552 [base_case.py-->line:75]:用例【添加项目】的json格式不正确
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\base_case.py", line 72, in pre_test_data
    self.case['request'] = json.loads(self.case['request'])
  File "D:\Program Files\Python38\lib\json\__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "D:\Program Files\Python38\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "D:\Program Files\Python38\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 5 column 37 (char 213)
DEBUG 2021-04-14 21:40:42,557 [base_case.py-->line:76]:case["request"]:
                        {
                        "headers": {"X-Lemonban-Media-Type": "lemonban.v2","Authorization":"Bearer #normal_token#"},
                        "json":{
                        "member_id":#normal_member_id#,
                        "title":"实现财富自由",
                        "amount":5000,
                        "loan_rate":18.0,
                        "loan_term":6,
                        "loan_date_type":1,
                        "bidding_days":10}
                        }
                        
ERROR 2021-04-14 21:40:42,557 [base_case.py-->line:77]:case["expect_data"]:{"code":0,"msg":"OK"}
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\base_case.py", line 72, in pre_test_data
    self.case['request'] = json.loads(self.case['request'])
  File "D:\Program Files\Python38\lib\json\__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "D:\Program Files\Python38\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "D:\Program Files\Python38\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 5 column 37 (char 213)
INFO 2021-04-14 21:40:42,558 [base_case.py-->line:33]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-14 21:40:42,894 [base_case.py-->line:108]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-14 21:40:42,895 [base_case.py-->line:130]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-14 21:40:43,054 [base_case.py-->line:147]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-14 21:40:43,055 [base_case.py-->line:45]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-14 21:40:43,056 [base_case.py-->line:33]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-14 21:40:43,313 [base_case.py-->line:108]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-14 21:40:43,313 [base_case.py-->line:130]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-14 21:40:43,313 [base_case.py-->line:45]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-14 21:40:43,314 [base_case.py-->line:33]:用例【审核项目】开始测试>>>>>>>
ERROR 2021-04-14 21:40:43,314 [base_case.py-->line:75]:用例【审核项目】的json格式不正确
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\base_case.py", line 72, in pre_test_data
    self.case['request'] = json.loads(self.case['request'])
  File "D:\Program Files\Python38\lib\json\__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "D:\Program Files\Python38\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "D:\Program Files\Python38\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 4 column 43 (char 185)
DEBUG 2021-04-14 21:40:43,315 [base_case.py-->line:76]:case["request"]:
                        {
                        "headers": {"X-Lemonban-Media-Type": "lemonban.v2","Authorization":"Bearer #admin_token#"},
                        "json":{"loan_id":#loan_id#,"approved_or_not":true}
                        }
                        
ERROR 2021-04-14 21:40:43,315 [base_case.py-->line:77]:case["expect_data"]:{"code":0,"msg":"OK"}
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\base_case.py", line 72, in pre_test_data
    self.case['request'] = json.loads(self.case['request'])
  File "D:\Program Files\Python38\lib\json\__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "D:\Program Files\Python38\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "D:\Program Files\Python38\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 4 column 43 (char 185)
INFO 2021-04-14 21:40:43,316 [base_case.py-->line:29]:**********贷款业务流接口测试结束**********
INFO 2021-04-14 21:40:43,316 [test_recharge.py-->line:24]:=========充值接口开始测试==========
INFO 2021-04-14 21:40:43,584 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-14 21:40:43,584 [test_recharge.py-->line:32]:注册用户15844429972成功
INFO 2021-04-14 21:40:43,759 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-14 21:40:43,759 [base_case.py-->line:33]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-14 21:40:43,803 [base_case.py-->line:108]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-14 21:40:43,803 [base_case.py-->line:130]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-14 21:40:43,821 [base_case.py-->line:147]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-14 21:40:43,822 [base_case.py-->line:45]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-14 21:40:43,822 [base_case.py-->line:33]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-14 21:40:43,879 [base_case.py-->line:108]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-14 21:40:43,879 [base_case.py-->line:130]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-14 21:40:43,897 [base_case.py-->line:147]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-14 21:40:43,897 [base_case.py-->line:45]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-14 21:40:43,898 [base_case.py-->line:33]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-14 21:40:43,942 [base_case.py-->line:108]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-14 21:40:43,942 [base_case.py-->line:130]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-14 21:40:43,960 [base_case.py-->line:147]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-14 21:40:43,960 [base_case.py-->line:45]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-14 21:40:43,960 [base_case.py-->line:33]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-14 21:40:44,002 [base_case.py-->line:108]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-14 21:40:44,002 [base_case.py-->line:130]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-14 21:40:44,020 [base_case.py-->line:147]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-14 21:40:44,020 [base_case.py-->line:45]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-14 21:40:44,020 [base_case.py-->line:33]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-14 21:40:44,076 [base_case.py-->line:108]:用例【会员id位空】状态码断言成功！
INFO 2021-04-14 21:40:44,076 [base_case.py-->line:130]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-14 21:40:44,076 [base_case.py-->line:45]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-14 21:40:44,076 [base_case.py-->line:33]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-14 21:40:44,117 [base_case.py-->line:108]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-14 21:40:44,117 [base_case.py-->line:130]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-14 21:40:44,117 [base_case.py-->line:45]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-14 21:40:44,117 [base_case.py-->line:33]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-14 21:40:44,158 [base_case.py-->line:108]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-14 21:40:44,158 [base_case.py-->line:124]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\base_case.py", line 122, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-14 21:40:44,158 [base_case.py-->line:125]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-14 21:40:44,158 [base_case.py-->line:126]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 21:40:44,159 [base_case.py-->line:127]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000356754, 'leave_amount': 503553.68, 'mobile_phone': '15844429972', 'reg_name': '小柠檬', 'reg_time': '2021-04-14 21:40:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-14 21:40:44,162 [base_case.py-->line:33]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-14 21:40:44,206 [base_case.py-->line:108]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-14 21:40:44,206 [base_case.py-->line:130]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-14 21:40:44,206 [base_case.py-->line:45]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-14 21:40:44,207 [base_case.py-->line:33]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-14 21:40:44,262 [base_case.py-->line:108]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-14 21:40:44,263 [base_case.py-->line:124]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\base_case.py", line 122, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 21:40:44,264 [base_case.py-->line:125]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-14 21:40:44,264 [base_case.py-->line:126]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 21:40:44,264 [base_case.py-->line:127]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000356754, 'leave_amount': 503553.68, 'mobile_phone': '15844429972', 'reg_name': '小柠檬', 'reg_time': '2021-04-14 21:40:43.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-14 21:40:44,264 [base_case.py-->line:33]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-14 21:40:44,318 [base_case.py-->line:108]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-14 21:40:44,318 [base_case.py-->line:130]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-14 21:40:44,318 [base_case.py-->line:45]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-14 21:40:44,318 [base_case.py-->line:33]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-14 21:40:44,369 [base_case.py-->line:108]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-14 21:40:44,369 [base_case.py-->line:130]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-14 21:40:44,369 [base_case.py-->line:45]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-14 21:40:44,369 [base_case.py-->line:33]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-14 21:40:44,422 [base_case.py-->line:108]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-14 21:40:44,422 [base_case.py-->line:130]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-14 21:40:44,422 [base_case.py-->line:45]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-14 21:40:44,422 [base_case.py-->line:33]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-14 21:40:44,459 [base_case.py-->line:108]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-14 21:40:44,460 [base_case.py-->line:130]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-14 21:40:44,460 [base_case.py-->line:45]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-14 21:40:44,460 [base_case.py-->line:33]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-14 21:40:44,497 [base_case.py-->line:108]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-14 21:40:44,497 [base_case.py-->line:130]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-14 21:40:44,497 [base_case.py-->line:45]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-14 21:40:44,497 [base_case.py-->line:29]:**********充值接口测试结束**********
INFO 2021-04-14 21:40:44,497 [base_case.py-->line:25]:=========注册接口开始测试==========
INFO 2021-04-14 21:40:44,498 [base_case.py-->line:33]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-14 21:40:44,795 [base_case.py-->line:108]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-14 21:40:44,795 [base_case.py-->line:130]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-14 21:40:44,908 [base_case.py-->line:147]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-14 21:40:44,908 [base_case.py-->line:45]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-14 21:40:44,908 [base_case.py-->line:33]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-14 21:40:45,231 [base_case.py-->line:108]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-14 21:40:45,231 [base_case.py-->line:130]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-14 21:40:45,334 [base_case.py-->line:147]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-14 21:40:45,335 [base_case.py-->line:45]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-14 21:40:45,335 [base_case.py-->line:33]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-14 21:40:45,619 [base_case.py-->line:108]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-14 21:40:45,619 [base_case.py-->line:130]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-14 21:40:45,734 [base_case.py-->line:147]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-14 21:40:45,735 [base_case.py-->line:45]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-14 21:40:45,735 [base_case.py-->line:33]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-14 21:40:45,778 [base_case.py-->line:108]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-14 21:40:45,778 [base_case.py-->line:130]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-14 21:40:45,778 [base_case.py-->line:45]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-14 21:40:45,778 [base_case.py-->line:33]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-14 21:40:45,831 [base_case.py-->line:108]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-14 21:40:45,831 [base_case.py-->line:130]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-14 21:40:45,831 [base_case.py-->line:45]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-14 21:40:45,831 [base_case.py-->line:33]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-14 21:40:45,883 [base_case.py-->line:108]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-14 21:40:45,884 [base_case.py-->line:130]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-14 21:40:45,884 [base_case.py-->line:45]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-14 21:40:45,884 [base_case.py-->line:33]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-14 21:40:45,948 [base_case.py-->line:108]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-14 21:40:45,948 [base_case.py-->line:130]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-14 21:40:45,948 [base_case.py-->line:45]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-14 21:40:45,948 [base_case.py-->line:33]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-14 21:40:46,138 [base_case.py-->line:108]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-14 21:40:46,139 [base_case.py-->line:130]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-14 21:40:46,139 [base_case.py-->line:45]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-14 21:40:46,140 [base_case.py-->line:33]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-14 21:40:46,199 [base_case.py-->line:108]:用例【密码7位】状态码断言成功！
INFO 2021-04-14 21:40:46,199 [base_case.py-->line:130]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-14 21:40:46,199 [base_case.py-->line:45]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-14 21:40:46,200 [base_case.py-->line:33]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-14 21:40:46,239 [base_case.py-->line:108]:用例【密码17位】状态码断言成功！
INFO 2021-04-14 21:40:46,240 [base_case.py-->line:130]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-14 21:40:46,240 [base_case.py-->line:45]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-14 21:40:46,240 [base_case.py-->line:33]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-14 21:40:46,293 [base_case.py-->line:108]:用例【不输入密码】状态码断言成功！
INFO 2021-04-14 21:40:46,293 [base_case.py-->line:130]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-14 21:40:46,293 [base_case.py-->line:45]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-14 21:40:46,294 [base_case.py-->line:33]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-14 21:40:46,344 [base_case.py-->line:108]:用例【昵称11位】状态码断言成功！
INFO 2021-04-14 21:40:46,344 [base_case.py-->line:130]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-14 21:40:46,344 [base_case.py-->line:45]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-14 21:40:46,344 [base_case.py-->line:33]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-14 21:40:46,382 [base_case.py-->line:108]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-14 21:40:46,383 [base_case.py-->line:130]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-14 21:40:46,383 [base_case.py-->line:45]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-14 21:40:46,383 [base_case.py-->line:29]:**********注册接口测试结束**********
INFO 2021-04-14 21:42:51,678 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-14 21:42:52,040 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-14 21:42:52,040 [test_audit.py-->line:31]:注册普通用户15871641100成功
INFO 2021-04-14 21:42:52,307 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-14 21:42:52,717 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-14 21:42:52,718 [test_audit.py-->line:47]:注册用户15859724989成功
INFO 2021-04-14 21:42:52,962 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-14 21:42:53,003 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 21:42:53,004 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 21:42:53,004 [base_case.py-->line:33]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-14 21:42:53,054 [base_case.py-->line:108]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-14 21:42:53,055 [base_case.py-->line:130]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-14 21:42:53,078 [base_case.py-->line:147]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-14 21:42:53,078 [base_case.py-->line:45]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-14 21:42:53,125 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 21:42:53,126 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 21:42:53,126 [base_case.py-->line:33]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-14 21:42:53,177 [base_case.py-->line:108]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-14 21:42:53,177 [base_case.py-->line:130]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-14 21:42:53,200 [base_case.py-->line:147]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-14 21:42:53,200 [base_case.py-->line:45]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-14 21:42:53,266 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 21:42:53,267 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 21:42:53,267 [base_case.py-->line:33]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-14 21:42:53,320 [base_case.py-->line:108]:用例【项目id为空】状态码断言成功！
INFO 2021-04-14 21:42:53,321 [base_case.py-->line:130]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-14 21:42:53,322 [base_case.py-->line:45]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-14 21:42:53,374 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 21:42:53,375 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 21:42:53,375 [base_case.py-->line:33]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-14 21:42:53,430 [base_case.py-->line:108]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-14 21:42:53,431 [base_case.py-->line:124]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\base_case.py", line 122, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-14 21:42:53,432 [base_case.py-->line:125]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-14 21:42:53,432 [base_case.py-->line:126]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 21:42:53,432 [base_case.py-->line:127]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-14 21:42:53,485 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 21:42:53,485 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 21:42:53,486 [base_case.py-->line:33]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-14 21:42:53,540 [base_case.py-->line:108]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-14 21:42:53,541 [base_case.py-->line:130]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-14 21:42:53,541 [base_case.py-->line:45]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-14 21:42:53,587 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 21:42:53,588 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 21:42:53,588 [base_case.py-->line:33]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-14 21:42:53,627 [base_case.py-->line:108]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-14 21:42:53,627 [base_case.py-->line:130]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-14 21:42:53,627 [base_case.py-->line:45]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-14 21:42:53,675 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 21:42:53,676 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 21:42:53,676 [base_case.py-->line:33]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-14 21:42:53,736 [base_case.py-->line:108]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-14 21:42:53,737 [base_case.py-->line:130]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-14 21:42:53,737 [base_case.py-->line:45]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-14 21:42:53,737 [base_case.py-->line:29]:**********审核接口测试结束**********
INFO 2021-04-14 21:42:53,738 [base_case.py-->line:25]:=========贷款业务流接口开始测试==========
INFO 2021-04-14 21:42:53,738 [base_case.py-->line:33]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-14 21:42:54,129 [base_case.py-->line:108]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-14 21:42:54,129 [base_case.py-->line:130]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-14 21:42:54,129 [base_case.py-->line:45]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-14 21:42:54,129 [base_case.py-->line:33]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-14 21:42:54,358 [base_case.py-->line:108]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-14 21:42:54,359 [base_case.py-->line:130]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-14 21:42:54,359 [base_case.py-->line:45]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-14 21:42:54,360 [base_case.py-->line:33]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-14 21:42:54,411 [base_case.py-->line:108]:用例【添加项目】状态码断言成功！
ERROR 2021-04-14 21:42:54,412 [base_case.py-->line:124]:用例【添加项目】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\base_case.py", line 122, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 0, 'msg': 'OK'} != {'code': 1003, 'msg': '无法解析的JSON值，请检查token或Authorization请求头'}
- {'code': 0, 'msg': 'OK'}
+ {'code': 1003, 'msg': '无法解析的JSON值，请检查token或Authorization请求头'}
DEBUG 2021-04-14 21:42:54,412 [base_case.py-->line:125]:期望数据：{'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 21:42:54,412 [base_case.py-->line:126]:实际结果: {'code': 1003, 'msg': '无法解析的JSON值，请检查token或Authorization请求头'}
DEBUG 2021-04-14 21:42:54,412 [base_case.py-->line:127]:响应结果：{'code': 1003, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved', 'msg': '无法解析的JSON值，请检查token或Authorization请求头'}
INFO 2021-04-14 21:42:54,413 [base_case.py-->line:33]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-14 21:42:54,807 [base_case.py-->line:108]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-14 21:42:54,807 [base_case.py-->line:130]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-14 21:42:54,970 [base_case.py-->line:147]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-14 21:42:54,970 [base_case.py-->line:45]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-14 21:42:54,972 [base_case.py-->line:33]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-14 21:42:55,220 [base_case.py-->line:108]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-14 21:42:55,221 [base_case.py-->line:130]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-14 21:42:55,221 [base_case.py-->line:45]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-14 21:42:55,223 [base_case.py-->line:33]:用例【审核项目】开始测试>>>>>>>
ERROR 2021-04-14 21:42:55,223 [base_case.py-->line:75]:用例【审核项目】的json格式不正确
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\base_case.py", line 72, in pre_test_data
    self.case['request'] = json.loads(self.case['request'])
  File "D:\Program Files\Python38\lib\json\__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "D:\Program Files\Python38\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "D:\Program Files\Python38\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 4 column 43 (char 185)
DEBUG 2021-04-14 21:42:55,225 [base_case.py-->line:76]:case["request"]:
                        {
                        "headers": {"X-Lemonban-Media-Type": "lemonban.v2","Authorization":"Bearer #admin_token#"},
                        "json":{"loan_id":#loan_id#,"approved_or_not":true}
                        }
                        
ERROR 2021-04-14 21:42:55,225 [base_case.py-->line:77]:case["expect_data"]:{"code":0,"msg":"OK"}
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\base_case.py", line 72, in pre_test_data
    self.case['request'] = json.loads(self.case['request'])
  File "D:\Program Files\Python38\lib\json\__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "D:\Program Files\Python38\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "D:\Program Files\Python38\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 4 column 43 (char 185)
INFO 2021-04-14 21:42:55,227 [base_case.py-->line:29]:**********贷款业务流接口测试结束**********
INFO 2021-04-14 21:42:55,227 [test_recharge.py-->line:24]:=========充值接口开始测试==========
INFO 2021-04-14 21:42:55,621 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-14 21:42:55,622 [test_recharge.py-->line:32]:注册用户15826775646成功
INFO 2021-04-14 21:42:55,866 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-14 21:42:55,866 [base_case.py-->line:33]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-14 21:42:55,919 [base_case.py-->line:108]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-14 21:42:55,919 [base_case.py-->line:130]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-14 21:42:55,943 [base_case.py-->line:147]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-14 21:42:55,943 [base_case.py-->line:45]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-14 21:42:55,943 [base_case.py-->line:33]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-14 21:42:56,005 [base_case.py-->line:108]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-14 21:42:56,005 [base_case.py-->line:130]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-14 21:42:56,028 [base_case.py-->line:147]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-14 21:42:56,028 [base_case.py-->line:45]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-14 21:42:56,028 [base_case.py-->line:33]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-14 21:42:56,088 [base_case.py-->line:108]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-14 21:42:56,088 [base_case.py-->line:130]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-14 21:42:56,111 [base_case.py-->line:147]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-14 21:42:56,111 [base_case.py-->line:45]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-14 21:42:56,111 [base_case.py-->line:33]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-14 21:42:56,152 [base_case.py-->line:108]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-14 21:42:56,153 [base_case.py-->line:130]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-14 21:42:56,175 [base_case.py-->line:147]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-14 21:42:56,175 [base_case.py-->line:45]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-14 21:42:56,176 [base_case.py-->line:33]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-14 21:42:56,226 [base_case.py-->line:108]:用例【会员id位空】状态码断言成功！
INFO 2021-04-14 21:42:56,226 [base_case.py-->line:130]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-14 21:42:56,226 [base_case.py-->line:45]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-14 21:42:56,227 [base_case.py-->line:33]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-14 21:42:56,264 [base_case.py-->line:108]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-14 21:42:56,264 [base_case.py-->line:130]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-14 21:42:56,264 [base_case.py-->line:45]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-14 21:42:56,264 [base_case.py-->line:33]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-14 21:42:56,320 [base_case.py-->line:108]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-14 21:42:56,320 [base_case.py-->line:124]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\base_case.py", line 122, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-14 21:42:56,321 [base_case.py-->line:125]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-14 21:42:56,321 [base_case.py-->line:126]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 21:42:56,321 [base_case.py-->line:127]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000356770, 'leave_amount': 503553.68, 'mobile_phone': '15826775646', 'reg_name': '小柠檬', 'reg_time': '2021-04-14 21:42:55.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-14 21:42:56,322 [base_case.py-->line:33]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-14 21:42:56,365 [base_case.py-->line:108]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-14 21:42:56,365 [base_case.py-->line:130]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-14 21:42:56,365 [base_case.py-->line:45]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-14 21:42:56,366 [base_case.py-->line:33]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-14 21:42:56,407 [base_case.py-->line:108]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-14 21:42:56,408 [base_case.py-->line:124]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\base_case.py", line 122, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 21:42:56,408 [base_case.py-->line:125]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-14 21:42:56,409 [base_case.py-->line:126]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 21:42:56,409 [base_case.py-->line:127]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000356770, 'leave_amount': 503553.68, 'mobile_phone': '15826775646', 'reg_name': '小柠檬', 'reg_time': '2021-04-14 21:42:55.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-14 21:42:56,410 [base_case.py-->line:33]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-14 21:42:56,463 [base_case.py-->line:108]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-14 21:42:56,464 [base_case.py-->line:130]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-14 21:42:56,464 [base_case.py-->line:45]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-14 21:42:56,464 [base_case.py-->line:33]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-14 21:42:56,517 [base_case.py-->line:108]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-14 21:42:56,518 [base_case.py-->line:130]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-14 21:42:56,518 [base_case.py-->line:45]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-14 21:42:56,518 [base_case.py-->line:33]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-14 21:42:56,570 [base_case.py-->line:108]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-14 21:42:56,571 [base_case.py-->line:130]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-14 21:42:56,571 [base_case.py-->line:45]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-14 21:42:56,571 [base_case.py-->line:33]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-14 21:42:56,623 [base_case.py-->line:108]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-14 21:42:56,624 [base_case.py-->line:130]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-14 21:42:56,624 [base_case.py-->line:45]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-14 21:42:56,624 [base_case.py-->line:33]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-14 21:42:56,661 [base_case.py-->line:108]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-14 21:42:56,661 [base_case.py-->line:130]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-14 21:42:56,662 [base_case.py-->line:45]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-14 21:42:56,662 [base_case.py-->line:29]:**********充值接口测试结束**********
INFO 2021-04-14 21:42:56,662 [base_case.py-->line:25]:=========注册接口开始测试==========
INFO 2021-04-14 21:42:56,662 [base_case.py-->line:33]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-14 21:42:57,070 [base_case.py-->line:108]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-14 21:42:57,070 [base_case.py-->line:130]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-14 21:42:57,232 [base_case.py-->line:147]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-14 21:42:57,232 [base_case.py-->line:45]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-14 21:42:57,232 [base_case.py-->line:33]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-14 21:42:57,624 [base_case.py-->line:108]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-14 21:42:57,624 [base_case.py-->line:130]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-14 21:42:57,786 [base_case.py-->line:147]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-14 21:42:57,787 [base_case.py-->line:45]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-14 21:42:57,787 [base_case.py-->line:33]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-14 21:42:58,193 [base_case.py-->line:108]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-14 21:42:58,193 [base_case.py-->line:130]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-14 21:42:58,300 [base_case.py-->line:147]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-14 21:42:58,300 [base_case.py-->line:45]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-14 21:42:58,300 [base_case.py-->line:33]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-14 21:42:58,353 [base_case.py-->line:108]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-14 21:42:58,353 [base_case.py-->line:130]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-14 21:42:58,353 [base_case.py-->line:45]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-14 21:42:58,353 [base_case.py-->line:33]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-14 21:42:58,407 [base_case.py-->line:108]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-14 21:42:58,407 [base_case.py-->line:130]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-14 21:42:58,407 [base_case.py-->line:45]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-14 21:42:58,408 [base_case.py-->line:33]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-14 21:42:58,459 [base_case.py-->line:108]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-14 21:42:58,460 [base_case.py-->line:130]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-14 21:42:58,460 [base_case.py-->line:45]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-14 21:42:58,460 [base_case.py-->line:33]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-14 21:42:58,514 [base_case.py-->line:108]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-14 21:42:58,514 [base_case.py-->line:130]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-14 21:42:58,514 [base_case.py-->line:45]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-14 21:42:58,514 [base_case.py-->line:33]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-14 21:42:58,755 [base_case.py-->line:108]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-14 21:42:58,755 [base_case.py-->line:130]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-14 21:42:58,755 [base_case.py-->line:45]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-14 21:42:58,755 [base_case.py-->line:33]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-14 21:42:58,798 [base_case.py-->line:108]:用例【密码7位】状态码断言成功！
INFO 2021-04-14 21:42:58,799 [base_case.py-->line:130]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-14 21:42:58,799 [base_case.py-->line:45]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-14 21:42:58,799 [base_case.py-->line:33]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-14 21:42:58,837 [base_case.py-->line:108]:用例【密码17位】状态码断言成功！
INFO 2021-04-14 21:42:58,837 [base_case.py-->line:130]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-14 21:42:58,837 [base_case.py-->line:45]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-14 21:42:58,837 [base_case.py-->line:33]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-14 21:42:58,885 [base_case.py-->line:108]:用例【不输入密码】状态码断言成功！
INFO 2021-04-14 21:42:58,886 [base_case.py-->line:130]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-14 21:42:58,886 [base_case.py-->line:45]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-14 21:42:58,886 [base_case.py-->line:33]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-14 21:42:58,927 [base_case.py-->line:108]:用例【昵称11位】状态码断言成功！
INFO 2021-04-14 21:42:58,930 [base_case.py-->line:130]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-14 21:42:58,931 [base_case.py-->line:45]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-14 21:42:58,931 [base_case.py-->line:33]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-14 21:42:58,971 [base_case.py-->line:108]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-14 21:42:58,971 [base_case.py-->line:130]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-14 21:42:58,972 [base_case.py-->line:45]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-14 21:42:58,972 [base_case.py-->line:29]:**********注册接口测试结束**********
INFO 2021-04-14 21:43:46,990 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-14 21:43:47,255 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-14 21:43:47,255 [test_audit.py-->line:31]:注册普通用户15804663395成功
INFO 2021-04-14 21:43:47,505 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-14 21:43:47,778 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-14 21:43:47,778 [test_audit.py-->line:47]:注册用户15877104217成功
INFO 2021-04-14 21:43:47,937 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-14 21:43:47,982 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 21:43:47,983 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 21:43:47,983 [base_case.py-->line:33]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-14 21:43:48,044 [base_case.py-->line:108]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-14 21:43:48,044 [base_case.py-->line:130]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-14 21:43:48,064 [base_case.py-->line:147]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-14 21:43:48,064 [base_case.py-->line:45]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-14 21:43:48,110 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 21:43:48,110 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 21:43:48,110 [base_case.py-->line:33]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-14 21:43:48,161 [base_case.py-->line:108]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-14 21:43:48,161 [base_case.py-->line:130]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-14 21:43:48,178 [base_case.py-->line:147]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-14 21:43:48,179 [base_case.py-->line:45]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-14 21:43:48,219 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 21:43:48,220 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 21:43:48,220 [base_case.py-->line:33]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-14 21:43:48,256 [base_case.py-->line:108]:用例【项目id为空】状态码断言成功！
INFO 2021-04-14 21:43:48,256 [base_case.py-->line:130]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-14 21:43:48,256 [base_case.py-->line:45]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-14 21:43:48,312 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 21:43:48,313 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 21:43:48,313 [base_case.py-->line:33]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-14 21:43:48,368 [base_case.py-->line:108]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-14 21:43:48,369 [base_case.py-->line:124]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\base_case.py", line 122, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-14 21:43:48,370 [base_case.py-->line:125]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-14 21:43:48,370 [base_case.py-->line:126]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 21:43:48,370 [base_case.py-->line:127]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-14 21:43:48,413 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 21:43:48,414 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 21:43:48,414 [base_case.py-->line:33]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-14 21:43:48,466 [base_case.py-->line:108]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-14 21:43:48,466 [base_case.py-->line:130]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-14 21:43:48,466 [base_case.py-->line:45]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-14 21:43:48,508 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 21:43:48,509 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 21:43:48,509 [base_case.py-->line:33]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-14 21:43:48,548 [base_case.py-->line:108]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-14 21:43:48,548 [base_case.py-->line:130]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-14 21:43:48,548 [base_case.py-->line:45]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-14 21:43:48,602 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 21:43:48,602 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 21:43:48,603 [base_case.py-->line:33]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-14 21:43:48,644 [base_case.py-->line:108]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-14 21:43:48,644 [base_case.py-->line:130]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-14 21:43:48,644 [base_case.py-->line:45]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-14 21:43:48,644 [base_case.py-->line:29]:**********审核接口测试结束**********
INFO 2021-04-14 21:43:48,644 [base_case.py-->line:25]:=========贷款业务流接口开始测试==========
INFO 2021-04-14 21:43:48,644 [base_case.py-->line:33]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-14 21:43:48,927 [base_case.py-->line:108]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-14 21:43:48,927 [base_case.py-->line:130]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-14 21:43:48,927 [base_case.py-->line:45]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-14 21:43:48,927 [base_case.py-->line:33]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-14 21:43:49,104 [base_case.py-->line:108]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-14 21:43:49,104 [base_case.py-->line:130]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-14 21:43:49,104 [base_case.py-->line:45]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-14 21:43:49,106 [base_case.py-->line:33]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-14 21:43:49,158 [base_case.py-->line:108]:用例【添加项目】状态码断言成功！
ERROR 2021-04-14 21:43:49,159 [base_case.py-->line:124]:用例【添加项目】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\base_case.py", line 122, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 0, 'msg': 'OK'} != {'code': 1003, 'msg': '无法解析的JSON值，请检查token或Authorization请求头'}
- {'code': 0, 'msg': 'OK'}
+ {'code': 1003, 'msg': '无法解析的JSON值，请检查token或Authorization请求头'}
DEBUG 2021-04-14 21:43:49,159 [base_case.py-->line:125]:期望数据：{'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 21:43:49,159 [base_case.py-->line:126]:实际结果: {'code': 1003, 'msg': '无法解析的JSON值，请检查token或Authorization请求头'}
DEBUG 2021-04-14 21:43:49,159 [base_case.py-->line:127]:响应结果：{'code': 1003, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved', 'msg': '无法解析的JSON值，请检查token或Authorization请求头'}
INFO 2021-04-14 21:43:49,160 [base_case.py-->line:33]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-14 21:43:49,436 [base_case.py-->line:108]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-14 21:43:49,437 [base_case.py-->line:130]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-14 21:43:49,542 [base_case.py-->line:147]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-14 21:43:49,542 [base_case.py-->line:45]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-14 21:43:49,542 [base_case.py-->line:33]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-14 21:43:49,710 [base_case.py-->line:108]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-14 21:43:49,711 [base_case.py-->line:130]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-14 21:43:49,711 [base_case.py-->line:45]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-14 21:43:49,711 [base_case.py-->line:33]:用例【审核项目】开始测试>>>>>>>
ERROR 2021-04-14 21:43:49,711 [base_case.py-->line:75]:用例【审核项目】的json格式不正确
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\base_case.py", line 72, in pre_test_data
    self.case['request'] = json.loads(self.case['request'])
  File "D:\Program Files\Python38\lib\json\__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "D:\Program Files\Python38\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "D:\Program Files\Python38\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 4 column 43 (char 335)
DEBUG 2021-04-14 21:43:49,712 [base_case.py-->line:76]:case["request"]:
                        {
                        "headers": {"X-Lemonban-Media-Type": "lemonban.v2","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNTY3ODUsImV4cCI6MTYxODQwODEyOX0.fA24HoyaQ7Obw6gT9vc9Cn5AXdH0eGxvXQjKCoAo8ZieZt1I6tTtED9PkY9SwgASDlGX_wNs_vo9umqDfWN04A"},
                        "json":{"loan_id":#loan_id#,"approved_or_not":true}
                        }
                        
ERROR 2021-04-14 21:43:49,713 [base_case.py-->line:77]:case["expect_data"]:{"code":0,"msg":"OK"}
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\base_case.py", line 72, in pre_test_data
    self.case['request'] = json.loads(self.case['request'])
  File "D:\Program Files\Python38\lib\json\__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "D:\Program Files\Python38\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "D:\Program Files\Python38\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 4 column 43 (char 335)
INFO 2021-04-14 21:43:49,714 [base_case.py-->line:29]:**********贷款业务流接口测试结束**********
INFO 2021-04-14 21:43:49,714 [test_recharge.py-->line:24]:=========充值接口开始测试==========
INFO 2021-04-14 21:43:49,984 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-14 21:43:49,984 [test_recharge.py-->line:32]:注册用户15871546611成功
INFO 2021-04-14 21:43:50,168 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-14 21:43:50,168 [base_case.py-->line:33]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-14 21:43:50,219 [base_case.py-->line:108]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-14 21:43:50,219 [base_case.py-->line:130]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-14 21:43:50,236 [base_case.py-->line:147]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-14 21:43:50,236 [base_case.py-->line:45]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-14 21:43:50,236 [base_case.py-->line:33]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-14 21:43:50,281 [base_case.py-->line:108]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-14 21:43:50,281 [base_case.py-->line:130]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-14 21:43:50,297 [base_case.py-->line:147]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-14 21:43:50,298 [base_case.py-->line:45]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-14 21:43:50,298 [base_case.py-->line:33]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-14 21:43:50,357 [base_case.py-->line:108]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-14 21:43:50,358 [base_case.py-->line:130]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-14 21:43:50,374 [base_case.py-->line:147]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-14 21:43:50,374 [base_case.py-->line:45]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-14 21:43:50,375 [base_case.py-->line:33]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-14 21:43:50,418 [base_case.py-->line:108]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-14 21:43:50,419 [base_case.py-->line:130]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-14 21:43:50,436 [base_case.py-->line:147]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-14 21:43:50,436 [base_case.py-->line:45]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-14 21:43:50,437 [base_case.py-->line:33]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-14 21:43:50,486 [base_case.py-->line:108]:用例【会员id位空】状态码断言成功！
INFO 2021-04-14 21:43:50,487 [base_case.py-->line:130]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-14 21:43:50,487 [base_case.py-->line:45]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-14 21:43:50,487 [base_case.py-->line:33]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-14 21:43:50,540 [base_case.py-->line:108]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-14 21:43:50,540 [base_case.py-->line:130]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-14 21:43:50,540 [base_case.py-->line:45]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-14 21:43:50,540 [base_case.py-->line:33]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-14 21:43:50,596 [base_case.py-->line:108]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-14 21:43:50,597 [base_case.py-->line:124]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\base_case.py", line 122, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-14 21:43:50,597 [base_case.py-->line:125]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-14 21:43:50,597 [base_case.py-->line:126]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 21:43:50,598 [base_case.py-->line:127]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000356786, 'leave_amount': 503553.68, 'mobile_phone': '15871546611', 'reg_name': '小柠檬', 'reg_time': '2021-04-14 21:43:49.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-14 21:43:50,598 [base_case.py-->line:33]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-14 21:43:50,637 [base_case.py-->line:108]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-14 21:43:50,637 [base_case.py-->line:130]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-14 21:43:50,637 [base_case.py-->line:45]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-14 21:43:50,637 [base_case.py-->line:33]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-14 21:43:50,692 [base_case.py-->line:108]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-14 21:43:50,693 [base_case.py-->line:124]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\base_case.py", line 122, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 21:43:50,693 [base_case.py-->line:125]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-14 21:43:50,693 [base_case.py-->line:126]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 21:43:50,693 [base_case.py-->line:127]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000356786, 'leave_amount': 503553.68, 'mobile_phone': '15871546611', 'reg_name': '小柠檬', 'reg_time': '2021-04-14 21:43:49.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-14 21:43:50,694 [base_case.py-->line:33]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-14 21:43:50,734 [base_case.py-->line:108]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-14 21:43:50,734 [base_case.py-->line:130]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-14 21:43:50,734 [base_case.py-->line:45]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-14 21:43:50,734 [base_case.py-->line:33]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-14 21:43:50,788 [base_case.py-->line:108]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-14 21:43:50,788 [base_case.py-->line:130]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-14 21:43:50,788 [base_case.py-->line:45]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-14 21:43:50,789 [base_case.py-->line:33]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-14 21:43:50,840 [base_case.py-->line:108]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-14 21:43:50,840 [base_case.py-->line:130]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-14 21:43:50,840 [base_case.py-->line:45]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-14 21:43:50,840 [base_case.py-->line:33]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-14 21:43:50,881 [base_case.py-->line:108]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-14 21:43:50,881 [base_case.py-->line:130]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-14 21:43:50,881 [base_case.py-->line:45]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-14 21:43:50,881 [base_case.py-->line:33]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-14 21:43:50,932 [base_case.py-->line:108]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-14 21:43:50,933 [base_case.py-->line:130]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-14 21:43:50,933 [base_case.py-->line:45]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-14 21:43:50,933 [base_case.py-->line:29]:**********充值接口测试结束**********
INFO 2021-04-14 21:43:50,933 [base_case.py-->line:25]:=========注册接口开始测试==========
INFO 2021-04-14 21:43:50,933 [base_case.py-->line:33]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-14 21:43:51,224 [base_case.py-->line:108]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-14 21:43:51,224 [base_case.py-->line:130]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-14 21:43:51,329 [base_case.py-->line:147]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-14 21:43:51,329 [base_case.py-->line:45]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-14 21:43:51,329 [base_case.py-->line:33]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-14 21:43:51,612 [base_case.py-->line:108]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-14 21:43:51,612 [base_case.py-->line:130]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-14 21:43:51,716 [base_case.py-->line:147]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-14 21:43:51,716 [base_case.py-->line:45]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-14 21:43:51,716 [base_case.py-->line:33]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-14 21:43:52,008 [base_case.py-->line:108]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-14 21:43:52,008 [base_case.py-->line:130]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-14 21:43:52,124 [base_case.py-->line:147]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-14 21:43:52,125 [base_case.py-->line:45]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-14 21:43:52,125 [base_case.py-->line:33]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-14 21:43:52,170 [base_case.py-->line:108]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-14 21:43:52,170 [base_case.py-->line:130]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-14 21:43:52,170 [base_case.py-->line:45]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-14 21:43:52,171 [base_case.py-->line:33]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-14 21:43:52,209 [base_case.py-->line:108]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-14 21:43:52,209 [base_case.py-->line:130]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-14 21:43:52,209 [base_case.py-->line:45]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-14 21:43:52,209 [base_case.py-->line:33]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-14 21:43:52,255 [base_case.py-->line:108]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-14 21:43:52,255 [base_case.py-->line:130]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-14 21:43:52,255 [base_case.py-->line:45]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-14 21:43:52,255 [base_case.py-->line:33]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-14 21:43:52,292 [base_case.py-->line:108]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-14 21:43:52,292 [base_case.py-->line:130]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-14 21:43:52,292 [base_case.py-->line:45]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-14 21:43:52,292 [base_case.py-->line:33]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-14 21:43:52,467 [base_case.py-->line:108]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-14 21:43:52,467 [base_case.py-->line:130]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-14 21:43:52,467 [base_case.py-->line:45]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-14 21:43:52,468 [base_case.py-->line:33]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-14 21:43:52,507 [base_case.py-->line:108]:用例【密码7位】状态码断言成功！
INFO 2021-04-14 21:43:52,507 [base_case.py-->line:130]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-14 21:43:52,508 [base_case.py-->line:45]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-14 21:43:52,508 [base_case.py-->line:33]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-14 21:43:52,565 [base_case.py-->line:108]:用例【密码17位】状态码断言成功！
INFO 2021-04-14 21:43:52,565 [base_case.py-->line:130]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-14 21:43:52,566 [base_case.py-->line:45]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-14 21:43:52,567 [base_case.py-->line:33]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-14 21:43:52,625 [base_case.py-->line:108]:用例【不输入密码】状态码断言成功！
INFO 2021-04-14 21:43:52,626 [base_case.py-->line:130]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-14 21:43:52,626 [base_case.py-->line:45]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-14 21:43:52,626 [base_case.py-->line:33]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-14 21:43:52,664 [base_case.py-->line:108]:用例【昵称11位】状态码断言成功！
INFO 2021-04-14 21:43:52,664 [base_case.py-->line:130]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-14 21:43:52,665 [base_case.py-->line:45]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-14 21:43:52,665 [base_case.py-->line:33]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-14 21:43:52,716 [base_case.py-->line:108]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-14 21:43:52,716 [base_case.py-->line:130]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-14 21:43:52,716 [base_case.py-->line:45]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-14 21:43:52,716 [base_case.py-->line:29]:**********注册接口测试结束**********
INFO 2021-04-14 21:44:42,792 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-14 21:44:43,092 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-14 21:44:43,092 [test_audit.py-->line:31]:注册普通用户15862161565成功
INFO 2021-04-14 21:44:43,254 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-14 21:44:43,566 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-14 21:44:43,566 [test_audit.py-->line:47]:注册用户15839456119成功
INFO 2021-04-14 21:44:43,743 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-14 21:44:43,792 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 21:44:43,792 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 21:44:43,793 [base_case.py-->line:33]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-14 21:44:43,840 [base_case.py-->line:108]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-14 21:44:43,840 [base_case.py-->line:130]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-14 21:44:43,865 [base_case.py-->line:147]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-14 21:44:43,865 [base_case.py-->line:45]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-14 21:44:43,923 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 21:44:43,923 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 21:44:43,923 [base_case.py-->line:33]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-14 21:44:43,964 [base_case.py-->line:108]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-14 21:44:43,964 [base_case.py-->line:130]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-14 21:44:43,987 [base_case.py-->line:147]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-14 21:44:43,987 [base_case.py-->line:45]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-14 21:44:44,043 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 21:44:44,043 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 21:44:44,044 [base_case.py-->line:33]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-14 21:44:44,084 [base_case.py-->line:108]:用例【项目id为空】状态码断言成功！
INFO 2021-04-14 21:44:44,084 [base_case.py-->line:130]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-14 21:44:44,085 [base_case.py-->line:45]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-14 21:44:44,133 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 21:44:44,134 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 21:44:44,134 [base_case.py-->line:33]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-14 21:44:44,182 [base_case.py-->line:108]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-14 21:44:44,183 [base_case.py-->line:124]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\base_case.py", line 122, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-14 21:44:44,184 [base_case.py-->line:125]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-14 21:44:44,184 [base_case.py-->line:126]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 21:44:44,184 [base_case.py-->line:127]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-14 21:44:44,229 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 21:44:44,229 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 21:44:44,229 [base_case.py-->line:33]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-14 21:44:44,281 [base_case.py-->line:108]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-14 21:44:44,281 [base_case.py-->line:130]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-14 21:44:44,281 [base_case.py-->line:45]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-14 21:44:44,321 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 21:44:44,322 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 21:44:44,322 [base_case.py-->line:33]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-14 21:44:44,363 [base_case.py-->line:108]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-14 21:44:44,363 [base_case.py-->line:130]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-14 21:44:44,363 [base_case.py-->line:45]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-14 21:44:44,407 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-14 21:44:44,407 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-14 21:44:44,407 [base_case.py-->line:33]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-14 21:44:44,451 [base_case.py-->line:108]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-14 21:44:44,451 [base_case.py-->line:130]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-14 21:44:44,451 [base_case.py-->line:45]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-14 21:44:44,451 [base_case.py-->line:29]:**********审核接口测试结束**********
INFO 2021-04-14 21:44:44,451 [base_case.py-->line:25]:=========贷款业务流接口开始测试==========
INFO 2021-04-14 21:44:44,451 [base_case.py-->line:33]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-14 21:44:44,743 [base_case.py-->line:108]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-14 21:44:44,744 [base_case.py-->line:130]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-14 21:44:44,744 [base_case.py-->line:45]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-14 21:44:44,744 [base_case.py-->line:33]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-14 21:44:44,915 [base_case.py-->line:108]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-14 21:44:44,915 [base_case.py-->line:130]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-14 21:44:44,915 [base_case.py-->line:45]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-14 21:44:44,915 [base_case.py-->line:33]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-14 21:44:44,959 [base_case.py-->line:108]:用例【添加项目】状态码断言成功！
INFO 2021-04-14 21:44:44,959 [base_case.py-->line:130]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-14 21:44:44,959 [base_case.py-->line:45]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-14 21:44:44,959 [base_case.py-->line:33]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-14 21:44:45,261 [base_case.py-->line:108]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-14 21:44:45,262 [base_case.py-->line:130]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-14 21:44:45,373 [base_case.py-->line:147]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-14 21:44:45,373 [base_case.py-->line:45]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-14 21:44:45,373 [base_case.py-->line:33]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-14 21:44:45,549 [base_case.py-->line:108]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-14 21:44:45,549 [base_case.py-->line:130]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-14 21:44:45,549 [base_case.py-->line:45]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-14 21:44:45,550 [base_case.py-->line:33]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-14 21:44:45,600 [base_case.py-->line:108]:用例【审核项目】状态码断言成功！
INFO 2021-04-14 21:44:45,600 [base_case.py-->line:130]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-14 21:44:45,600 [base_case.py-->line:45]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-14 21:44:45,600 [base_case.py-->line:29]:**********贷款业务流接口测试结束**********
INFO 2021-04-14 21:44:45,600 [test_recharge.py-->line:24]:=========充值接口开始测试==========
INFO 2021-04-14 21:44:45,918 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-14 21:44:45,918 [test_recharge.py-->line:32]:注册用户15836084674成功
INFO 2021-04-14 21:44:46,087 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-14 21:44:46,087 [base_case.py-->line:33]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-14 21:44:46,131 [base_case.py-->line:108]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-14 21:44:46,132 [base_case.py-->line:130]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-14 21:44:46,155 [base_case.py-->line:147]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-14 21:44:46,155 [base_case.py-->line:45]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-14 21:44:46,155 [base_case.py-->line:33]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-14 21:44:46,200 [base_case.py-->line:108]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-14 21:44:46,200 [base_case.py-->line:130]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-14 21:44:46,223 [base_case.py-->line:147]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-14 21:44:46,224 [base_case.py-->line:45]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-14 21:44:46,224 [base_case.py-->line:33]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-14 21:44:46,269 [base_case.py-->line:108]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-14 21:44:46,269 [base_case.py-->line:130]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-14 21:44:46,292 [base_case.py-->line:147]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-14 21:44:46,293 [base_case.py-->line:45]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-14 21:44:46,293 [base_case.py-->line:33]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-14 21:44:46,344 [base_case.py-->line:108]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-14 21:44:46,344 [base_case.py-->line:130]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-14 21:44:46,367 [base_case.py-->line:147]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-14 21:44:46,367 [base_case.py-->line:45]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-14 21:44:46,368 [base_case.py-->line:33]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-14 21:44:46,409 [base_case.py-->line:108]:用例【会员id位空】状态码断言成功！
INFO 2021-04-14 21:44:46,409 [base_case.py-->line:130]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-14 21:44:46,409 [base_case.py-->line:45]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-14 21:44:46,409 [base_case.py-->line:33]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-14 21:44:46,462 [base_case.py-->line:108]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-14 21:44:46,462 [base_case.py-->line:130]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-14 21:44:46,463 [base_case.py-->line:45]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-14 21:44:46,463 [base_case.py-->line:33]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-14 21:44:46,514 [base_case.py-->line:108]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-14 21:44:46,515 [base_case.py-->line:124]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\base_case.py", line 122, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-14 21:44:46,515 [base_case.py-->line:125]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-14 21:44:46,515 [base_case.py-->line:126]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 21:44:46,515 [base_case.py-->line:127]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000356802, 'leave_amount': 503553.68, 'mobile_phone': '15836084674', 'reg_name': '小柠檬', 'reg_time': '2021-04-14 21:44:45.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-14 21:44:46,516 [base_case.py-->line:33]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-14 21:44:46,567 [base_case.py-->line:108]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-14 21:44:46,567 [base_case.py-->line:130]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-14 21:44:46,567 [base_case.py-->line:45]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-14 21:44:46,568 [base_case.py-->line:33]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-14 21:44:46,622 [base_case.py-->line:108]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-14 21:44:46,623 [base_case.py-->line:124]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day26\test_cases\base_case.py", line 122, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 21:44:46,623 [base_case.py-->line:125]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-14 21:44:46,623 [base_case.py-->line:126]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-14 21:44:46,623 [base_case.py-->line:127]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000356802, 'leave_amount': 503553.68, 'mobile_phone': '15836084674', 'reg_name': '小柠檬', 'reg_time': '2021-04-14 21:44:45.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-14 21:44:46,624 [base_case.py-->line:33]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-14 21:44:46,667 [base_case.py-->line:108]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-14 21:44:46,667 [base_case.py-->line:130]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-14 21:44:46,667 [base_case.py-->line:45]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-14 21:44:46,668 [base_case.py-->line:33]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-14 21:44:46,727 [base_case.py-->line:108]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-14 21:44:46,727 [base_case.py-->line:130]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-14 21:44:46,727 [base_case.py-->line:45]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-14 21:44:46,727 [base_case.py-->line:33]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-14 21:44:46,782 [base_case.py-->line:108]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-14 21:44:46,783 [base_case.py-->line:130]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-14 21:44:46,783 [base_case.py-->line:45]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-14 21:44:46,783 [base_case.py-->line:33]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-14 21:44:46,822 [base_case.py-->line:108]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-14 21:44:46,822 [base_case.py-->line:130]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-14 21:44:46,822 [base_case.py-->line:45]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-14 21:44:46,823 [base_case.py-->line:33]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-14 21:44:46,859 [base_case.py-->line:108]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-14 21:44:46,859 [base_case.py-->line:130]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-14 21:44:46,860 [base_case.py-->line:45]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-14 21:44:46,860 [base_case.py-->line:29]:**********充值接口测试结束**********
INFO 2021-04-14 21:44:46,860 [base_case.py-->line:25]:=========注册接口开始测试==========
INFO 2021-04-14 21:44:46,860 [base_case.py-->line:33]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-14 21:44:47,123 [base_case.py-->line:108]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-14 21:44:47,123 [base_case.py-->line:130]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-14 21:44:47,229 [base_case.py-->line:147]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-14 21:44:47,229 [base_case.py-->line:45]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-14 21:44:47,229 [base_case.py-->line:33]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-14 21:44:47,506 [base_case.py-->line:108]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-14 21:44:47,506 [base_case.py-->line:130]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-14 21:44:47,612 [base_case.py-->line:147]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-14 21:44:47,612 [base_case.py-->line:45]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-14 21:44:47,613 [base_case.py-->line:33]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-14 21:44:47,890 [base_case.py-->line:108]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-14 21:44:47,891 [base_case.py-->line:130]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-14 21:44:47,996 [base_case.py-->line:147]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-14 21:44:47,996 [base_case.py-->line:45]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-14 21:44:47,998 [base_case.py-->line:33]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-14 21:44:48,057 [base_case.py-->line:108]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-14 21:44:48,057 [base_case.py-->line:130]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-14 21:44:48,058 [base_case.py-->line:45]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-14 21:44:48,058 [base_case.py-->line:33]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-14 21:44:48,097 [base_case.py-->line:108]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-14 21:44:48,097 [base_case.py-->line:130]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-14 21:44:48,097 [base_case.py-->line:45]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-14 21:44:48,098 [base_case.py-->line:33]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-14 21:44:48,139 [base_case.py-->line:108]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-14 21:44:48,140 [base_case.py-->line:130]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-14 21:44:48,140 [base_case.py-->line:45]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-14 21:44:48,140 [base_case.py-->line:33]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-14 21:44:48,192 [base_case.py-->line:108]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-14 21:44:48,192 [base_case.py-->line:130]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-14 21:44:48,192 [base_case.py-->line:45]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-14 21:44:48,192 [base_case.py-->line:33]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-14 21:44:48,361 [base_case.py-->line:108]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-14 21:44:48,361 [base_case.py-->line:130]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-14 21:44:48,362 [base_case.py-->line:45]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-14 21:44:48,362 [base_case.py-->line:33]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-14 21:44:48,400 [base_case.py-->line:108]:用例【密码7位】状态码断言成功！
INFO 2021-04-14 21:44:48,401 [base_case.py-->line:130]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-14 21:44:48,401 [base_case.py-->line:45]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-14 21:44:48,401 [base_case.py-->line:33]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-14 21:44:48,445 [base_case.py-->line:108]:用例【密码17位】状态码断言成功！
INFO 2021-04-14 21:44:48,445 [base_case.py-->line:130]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-14 21:44:48,445 [base_case.py-->line:45]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-14 21:44:48,446 [base_case.py-->line:33]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-14 21:44:48,502 [base_case.py-->line:108]:用例【不输入密码】状态码断言成功！
INFO 2021-04-14 21:44:48,502 [base_case.py-->line:130]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-14 21:44:48,502 [base_case.py-->line:45]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-14 21:44:48,503 [base_case.py-->line:33]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-14 21:44:48,559 [base_case.py-->line:108]:用例【昵称11位】状态码断言成功！
INFO 2021-04-14 21:44:48,560 [base_case.py-->line:130]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-14 21:44:48,560 [base_case.py-->line:45]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-14 21:44:48,560 [base_case.py-->line:33]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-14 21:44:48,613 [base_case.py-->line:108]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-14 21:44:48,615 [base_case.py-->line:130]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-14 21:44:48,615 [base_case.py-->line:45]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-14 21:44:48,615 [base_case.py-->line:29]:**********注册接口测试结束**********
INFO 2021-04-16 20:54:32,438 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-16 20:54:32,846 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-16 20:54:32,847 [test_audit.py-->line:31]:注册普通用户15832663455成功
INFO 2021-04-16 20:54:33,224 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-16 20:54:33,639 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-16 20:54:33,639 [test_audit.py-->line:47]:注册用户15822657075成功
INFO 2021-04-16 20:54:34,014 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-16 20:54:34,073 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-16 20:54:34,073 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-16 20:54:34,073 [base_case.py-->line:35]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-16 20:54:34,115 [base_case.py-->line:112]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-16 20:54:34,115 [base_case.py-->line:134]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-16 20:54:34,139 [base_case.py-->line:151]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-16 20:54:34,139 [base_case.py-->line:49]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-16 20:54:34,180 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-16 20:54:34,180 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-16 20:54:34,180 [base_case.py-->line:35]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-16 20:54:34,237 [base_case.py-->line:112]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-16 20:54:34,237 [base_case.py-->line:134]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-16 20:54:34,262 [base_case.py-->line:151]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-16 20:54:34,262 [base_case.py-->line:49]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-16 20:54:34,322 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-16 20:54:34,323 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-16 20:54:34,323 [base_case.py-->line:35]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-16 20:54:34,370 [base_case.py-->line:112]:用例【项目id为空】状态码断言成功！
INFO 2021-04-16 20:54:34,370 [base_case.py-->line:134]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-16 20:54:34,370 [base_case.py-->line:49]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-16 20:54:34,429 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-16 20:54:34,429 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-16 20:54:34,430 [base_case.py-->line:35]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-16 20:54:34,485 [base_case.py-->line:112]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-16 20:54:34,487 [base_case.py-->line:128]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day27\test_cases\base_case.py", line 126, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-16 20:54:34,491 [base_case.py-->line:129]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-16 20:54:34,491 [base_case.py-->line:130]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-16 20:54:34,491 [base_case.py-->line:131]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-16 20:54:34,534 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-16 20:54:34,534 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-16 20:54:34,535 [base_case.py-->line:35]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-16 20:54:34,572 [base_case.py-->line:112]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-16 20:54:34,573 [base_case.py-->line:134]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-16 20:54:34,573 [base_case.py-->line:49]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-16 20:54:34,621 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-16 20:54:34,622 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-16 20:54:34,622 [base_case.py-->line:35]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-16 20:54:34,684 [base_case.py-->line:112]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-16 20:54:34,684 [base_case.py-->line:134]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-16 20:54:34,685 [base_case.py-->line:49]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-16 20:54:34,731 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-16 20:54:34,733 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-16 20:54:34,733 [base_case.py-->line:35]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-16 20:54:34,775 [base_case.py-->line:112]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-16 20:54:34,776 [base_case.py-->line:134]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-16 20:54:34,776 [base_case.py-->line:49]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-16 20:54:34,776 [base_case.py-->line:31]:**********审核接口测试结束**********
INFO 2021-04-16 20:54:34,776 [base_case.py-->line:27]:=========投资业务流接口开始测试==========
INFO 2021-04-16 20:54:34,777 [base_case.py-->line:35]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-16 20:54:35,193 [base_case.py-->line:112]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-16 20:54:35,194 [base_case.py-->line:134]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-16 20:54:35,359 [base_case.py-->line:151]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-16 20:54:35,359 [base_case.py-->line:49]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-16 20:54:35,360 [base_case.py-->line:35]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-16 20:54:35,595 [base_case.py-->line:112]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-16 20:54:35,595 [base_case.py-->line:134]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-16 20:54:35,595 [base_case.py-->line:49]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-16 20:54:35,595 [base_case.py-->line:35]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-16 20:54:35,642 [base_case.py-->line:112]:用例【创建项目】状态码断言成功！
INFO 2021-04-16 20:54:35,642 [base_case.py-->line:134]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-16 20:54:35,642 [base_case.py-->line:49]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-16 20:54:35,643 [base_case.py-->line:35]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-16 20:54:36,044 [base_case.py-->line:112]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-16 20:54:36,044 [base_case.py-->line:134]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-16 20:54:36,045 [base_case.py-->line:49]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-16 20:54:36,045 [base_case.py-->line:35]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-16 20:54:36,418 [base_case.py-->line:112]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-16 20:54:36,418 [base_case.py-->line:134]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-16 20:54:36,418 [base_case.py-->line:49]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-16 20:54:36,419 [base_case.py-->line:35]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-16 20:54:36,466 [base_case.py-->line:112]:用例【审核项目】状态码断言成功！
INFO 2021-04-16 20:54:36,466 [base_case.py-->line:134]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-16 20:54:36,466 [base_case.py-->line:49]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-16 20:54:36,467 [base_case.py-->line:35]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-16 20:54:36,866 [base_case.py-->line:112]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-16 20:54:36,868 [base_case.py-->line:134]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-16 20:54:36,868 [base_case.py-->line:49]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-16 20:54:36,868 [base_case.py-->line:35]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-16 20:54:37,245 [base_case.py-->line:112]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-16 20:54:37,246 [base_case.py-->line:134]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-16 20:54:37,246 [base_case.py-->line:49]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-16 20:54:37,246 [base_case.py-->line:35]:用例【充值】开始测试>>>>>>>
INFO 2021-04-16 20:54:37,288 [base_case.py-->line:112]:用例【充值】状态码断言成功！
INFO 2021-04-16 20:54:37,289 [base_case.py-->line:134]:用例【充值】请求json结果断言成功！
INFO 2021-04-16 20:54:37,289 [base_case.py-->line:49]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-16 20:54:37,289 [base_case.py-->line:35]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-16 20:54:37,475 [base_case.py-->line:112]:用例【投资项目】状态码断言成功！
INFO 2021-04-16 20:54:37,475 [base_case.py-->line:134]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-16 20:54:37,476 [base_case.py-->line:49]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-16 20:54:37,476 [base_case.py-->line:31]:**********投资业务流接口测试结束**********
INFO 2021-04-16 20:54:37,476 [base_case.py-->line:27]:=========贷款业务流接口开始测试==========
INFO 2021-04-16 20:54:37,476 [base_case.py-->line:35]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-16 20:54:37,874 [base_case.py-->line:112]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-16 20:54:37,874 [base_case.py-->line:134]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-16 20:54:37,874 [base_case.py-->line:49]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-16 20:54:37,875 [base_case.py-->line:35]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-16 20:54:38,238 [base_case.py-->line:112]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-16 20:54:38,239 [base_case.py-->line:134]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-16 20:54:38,239 [base_case.py-->line:49]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-16 20:54:38,239 [base_case.py-->line:35]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-16 20:54:38,297 [base_case.py-->line:112]:用例【添加项目】状态码断言成功！
INFO 2021-04-16 20:54:38,298 [base_case.py-->line:134]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-16 20:54:38,298 [base_case.py-->line:49]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-16 20:54:38,298 [base_case.py-->line:35]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-16 20:54:38,694 [base_case.py-->line:112]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-16 20:54:38,695 [base_case.py-->line:134]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-16 20:54:38,860 [base_case.py-->line:151]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-16 20:54:38,861 [base_case.py-->line:49]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-16 20:54:38,862 [base_case.py-->line:35]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-16 20:54:39,116 [base_case.py-->line:112]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-16 20:54:39,116 [base_case.py-->line:134]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-16 20:54:39,116 [base_case.py-->line:49]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-16 20:54:39,117 [base_case.py-->line:35]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-16 20:54:39,157 [base_case.py-->line:112]:用例【审核项目】状态码断言成功！
INFO 2021-04-16 20:54:39,158 [base_case.py-->line:134]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-16 20:54:39,158 [base_case.py-->line:49]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-16 20:54:39,158 [base_case.py-->line:31]:**********贷款业务流接口测试结束**********
INFO 2021-04-16 20:54:39,158 [test_recharge.py-->line:24]:=========充值接口开始测试==========
INFO 2021-04-16 20:54:39,446 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-16 20:54:39,447 [test_recharge.py-->line:32]:注册用户15810322246成功
INFO 2021-04-16 20:54:39,684 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-16 20:54:39,684 [base_case.py-->line:35]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-16 20:54:39,743 [base_case.py-->line:112]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-16 20:54:39,744 [base_case.py-->line:134]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-16 20:54:39,768 [base_case.py-->line:151]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-16 20:54:39,768 [base_case.py-->line:49]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-16 20:54:39,768 [base_case.py-->line:35]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-16 20:54:39,900 [base_case.py-->line:112]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-16 20:54:39,901 [base_case.py-->line:134]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-16 20:54:39,925 [base_case.py-->line:151]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-16 20:54:39,925 [base_case.py-->line:49]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-16 20:54:39,925 [base_case.py-->line:35]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-16 20:54:40,080 [base_case.py-->line:112]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-16 20:54:40,080 [base_case.py-->line:134]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-16 20:54:40,109 [base_case.py-->line:151]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-16 20:54:40,109 [base_case.py-->line:49]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-16 20:54:40,109 [base_case.py-->line:35]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-16 20:54:40,268 [base_case.py-->line:112]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-16 20:54:40,269 [base_case.py-->line:134]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-16 20:54:40,293 [base_case.py-->line:151]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-16 20:54:40,293 [base_case.py-->line:49]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-16 20:54:40,293 [base_case.py-->line:35]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-16 20:54:40,338 [base_case.py-->line:112]:用例【会员id位空】状态码断言成功！
INFO 2021-04-16 20:54:40,338 [base_case.py-->line:134]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-16 20:54:40,338 [base_case.py-->line:49]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-16 20:54:40,339 [base_case.py-->line:35]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-16 20:54:40,379 [base_case.py-->line:112]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-16 20:54:40,379 [base_case.py-->line:134]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-16 20:54:40,379 [base_case.py-->line:49]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-16 20:54:40,380 [base_case.py-->line:35]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-16 20:54:40,438 [base_case.py-->line:112]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-16 20:54:40,439 [base_case.py-->line:128]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day27\test_cases\base_case.py", line 126, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-16 20:54:40,439 [base_case.py-->line:129]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-16 20:54:40,440 [base_case.py-->line:130]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-16 20:54:40,440 [base_case.py-->line:131]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000366030, 'leave_amount': 503553.68, 'mobile_phone': '15810322246', 'reg_name': '小柠檬', 'reg_time': '2021-04-16 20:54:40.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-16 20:54:40,441 [base_case.py-->line:35]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-16 20:54:40,496 [base_case.py-->line:112]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-16 20:54:40,496 [base_case.py-->line:134]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-16 20:54:40,496 [base_case.py-->line:49]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-16 20:54:40,496 [base_case.py-->line:35]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-16 20:54:40,617 [base_case.py-->line:112]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-16 20:54:40,618 [base_case.py-->line:128]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day27\test_cases\base_case.py", line 126, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-16 20:54:40,618 [base_case.py-->line:129]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-16 20:54:40,618 [base_case.py-->line:130]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-16 20:54:40,618 [base_case.py-->line:131]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000366030, 'leave_amount': 503553.68, 'mobile_phone': '15810322246', 'reg_name': '小柠檬', 'reg_time': '2021-04-16 20:54:40.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-16 20:54:40,619 [base_case.py-->line:35]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-16 20:54:40,660 [base_case.py-->line:112]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-16 20:54:40,660 [base_case.py-->line:134]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-16 20:54:40,660 [base_case.py-->line:49]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-16 20:54:40,660 [base_case.py-->line:35]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-16 20:54:40,713 [base_case.py-->line:112]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-16 20:54:40,713 [base_case.py-->line:134]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-16 20:54:40,713 [base_case.py-->line:49]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-16 20:54:40,713 [base_case.py-->line:35]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-16 20:54:40,772 [base_case.py-->line:112]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-16 20:54:40,772 [base_case.py-->line:134]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-16 20:54:40,772 [base_case.py-->line:49]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-16 20:54:40,772 [base_case.py-->line:35]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-16 20:54:40,811 [base_case.py-->line:112]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-16 20:54:40,811 [base_case.py-->line:134]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-16 20:54:40,811 [base_case.py-->line:49]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-16 20:54:40,811 [base_case.py-->line:35]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-16 20:54:40,866 [base_case.py-->line:112]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-16 20:54:40,866 [base_case.py-->line:134]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-16 20:54:40,866 [base_case.py-->line:49]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-16 20:54:40,867 [base_case.py-->line:31]:**********充值接口测试结束**********
INFO 2021-04-16 20:54:40,867 [base_case.py-->line:27]:=========注册接口开始测试==========
INFO 2021-04-16 20:54:40,867 [base_case.py-->line:35]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-16 20:54:41,136 [base_case.py-->line:112]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-16 20:54:41,137 [base_case.py-->line:134]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-16 20:54:41,249 [base_case.py-->line:151]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-16 20:54:41,250 [base_case.py-->line:49]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-16 20:54:41,250 [base_case.py-->line:35]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-16 20:54:41,614 [base_case.py-->line:112]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-16 20:54:41,614 [base_case.py-->line:134]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-16 20:54:41,780 [base_case.py-->line:151]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-16 20:54:41,781 [base_case.py-->line:49]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-16 20:54:41,781 [base_case.py-->line:35]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-16 20:54:42,196 [base_case.py-->line:112]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-16 20:54:42,196 [base_case.py-->line:134]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-16 20:54:42,361 [base_case.py-->line:151]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-16 20:54:42,361 [base_case.py-->line:49]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-16 20:54:42,362 [base_case.py-->line:35]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-16 20:54:42,417 [base_case.py-->line:112]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-16 20:54:42,418 [base_case.py-->line:134]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-16 20:54:42,418 [base_case.py-->line:49]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-16 20:54:42,418 [base_case.py-->line:35]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-16 20:54:42,471 [base_case.py-->line:112]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-16 20:54:42,471 [base_case.py-->line:134]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-16 20:54:42,471 [base_case.py-->line:49]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-16 20:54:42,471 [base_case.py-->line:35]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-16 20:54:42,527 [base_case.py-->line:112]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-16 20:54:42,527 [base_case.py-->line:134]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-16 20:54:42,528 [base_case.py-->line:49]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-16 20:54:42,528 [base_case.py-->line:35]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-16 20:54:42,582 [base_case.py-->line:112]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-16 20:54:42,582 [base_case.py-->line:134]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-16 20:54:42,583 [base_case.py-->line:49]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-16 20:54:42,583 [base_case.py-->line:35]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-16 20:54:42,830 [base_case.py-->line:112]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-16 20:54:42,830 [base_case.py-->line:134]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-16 20:54:42,830 [base_case.py-->line:49]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-16 20:54:42,830 [base_case.py-->line:35]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-16 20:54:42,872 [base_case.py-->line:112]:用例【密码7位】状态码断言成功！
INFO 2021-04-16 20:54:42,873 [base_case.py-->line:134]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-16 20:54:42,873 [base_case.py-->line:49]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-16 20:54:42,873 [base_case.py-->line:35]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-16 20:54:42,925 [base_case.py-->line:112]:用例【密码17位】状态码断言成功！
INFO 2021-04-16 20:54:42,925 [base_case.py-->line:134]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-16 20:54:42,925 [base_case.py-->line:49]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-16 20:54:42,926 [base_case.py-->line:35]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-16 20:54:42,973 [base_case.py-->line:112]:用例【不输入密码】状态码断言成功！
INFO 2021-04-16 20:54:42,973 [base_case.py-->line:134]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-16 20:54:42,973 [base_case.py-->line:49]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-16 20:54:42,973 [base_case.py-->line:35]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-16 20:54:43,035 [base_case.py-->line:112]:用例【昵称11位】状态码断言成功！
INFO 2021-04-16 20:54:43,035 [base_case.py-->line:134]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-16 20:54:43,035 [base_case.py-->line:49]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-16 20:54:43,035 [base_case.py-->line:35]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-16 20:54:43,091 [base_case.py-->line:112]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-16 20:54:43,092 [base_case.py-->line:134]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-16 20:54:43,092 [base_case.py-->line:49]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-16 20:54:43,092 [base_case.py-->line:31]:**********注册接口测试结束**********
INFO 2021-04-16 21:26:29,030 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-16 21:26:29,369 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-16 21:26:29,369 [test_audit.py-->line:31]:注册普通用户15814201348成功
INFO 2021-04-16 21:26:29,536 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-16 21:26:29,896 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-16 21:26:29,896 [test_audit.py-->line:47]:注册用户15877015165成功
INFO 2021-04-16 21:26:30,135 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-16 21:26:30,192 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-16 21:26:30,192 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-16 21:26:30,192 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-16 21:26:30,252 [base_case.py-->line:116]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-16 21:26:30,252 [base_case.py-->line:138]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-16 21:26:30,276 [base_case.py-->line:155]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-16 21:26:30,277 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-16 21:26:30,326 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-16 21:26:30,326 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-16 21:26:30,327 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-16 21:26:30,357 [base_case.py-->line:116]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-16 21:26:30,357 [base_case.py-->line:138]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-16 21:26:30,381 [base_case.py-->line:155]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-16 21:26:30,382 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-16 21:26:30,435 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-16 21:26:30,435 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-16 21:26:30,435 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-16 21:26:30,462 [base_case.py-->line:116]:用例【项目id为空】状态码断言成功！
INFO 2021-04-16 21:26:30,462 [base_case.py-->line:138]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-16 21:26:30,462 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-16 21:26:30,505 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-16 21:26:30,505 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-16 21:26:30,505 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-16 21:26:30,534 [base_case.py-->line:116]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-16 21:26:30,535 [base_case.py-->line:132]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day27\test_cases\base_case.py", line 130, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-16 21:26:30,542 [base_case.py-->line:133]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-16 21:26:30,542 [base_case.py-->line:134]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-16 21:26:30,542 [base_case.py-->line:135]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-16 21:26:30,604 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-16 21:26:30,605 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-16 21:26:30,605 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-16 21:26:30,633 [base_case.py-->line:116]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-16 21:26:30,633 [base_case.py-->line:138]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-16 21:26:30,633 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-16 21:26:30,678 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-16 21:26:30,679 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-16 21:26:30,679 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-16 21:26:30,708 [base_case.py-->line:116]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-16 21:26:30,708 [base_case.py-->line:138]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-16 21:26:30,708 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-16 21:26:30,751 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-16 21:26:30,751 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-16 21:26:30,751 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-16 21:26:30,784 [base_case.py-->line:116]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-16 21:26:30,785 [base_case.py-->line:138]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-16 21:26:30,785 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-16 21:26:30,785 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-16 21:26:30,785 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-16 21:26:30,785 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-16 21:26:31,102 [base_case.py-->line:116]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-16 21:26:31,102 [base_case.py-->line:138]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-16 21:26:31,268 [base_case.py-->line:155]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-16 21:26:31,269 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-16 21:26:31,269 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-16 21:26:31,493 [base_case.py-->line:116]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-16 21:26:31,493 [base_case.py-->line:138]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-16 21:26:31,493 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-16 21:26:31,493 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-16 21:26:31,523 [base_case.py-->line:116]:用例【创建项目】状态码断言成功！
INFO 2021-04-16 21:26:31,523 [base_case.py-->line:138]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-16 21:26:31,523 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-16 21:26:31,523 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-16 21:26:31,911 [base_case.py-->line:116]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-16 21:26:31,912 [base_case.py-->line:138]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-16 21:26:31,912 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-16 21:26:31,912 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-16 21:26:32,137 [base_case.py-->line:116]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-16 21:26:32,137 [base_case.py-->line:138]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-16 21:26:32,138 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-16 21:26:32,138 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-16 21:26:32,167 [base_case.py-->line:116]:用例【审核项目】状态码断言成功！
INFO 2021-04-16 21:26:32,168 [base_case.py-->line:138]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-16 21:26:32,168 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-16 21:26:32,168 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-16 21:26:32,552 [base_case.py-->line:116]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-16 21:26:32,552 [base_case.py-->line:138]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-16 21:26:32,552 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-16 21:26:32,553 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-16 21:26:32,701 [base_case.py-->line:116]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-16 21:26:32,701 [base_case.py-->line:138]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-16 21:26:32,701 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-16 21:26:32,701 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-16 21:26:32,735 [base_case.py-->line:116]:用例【充值】状态码断言成功！
INFO 2021-04-16 21:26:32,736 [base_case.py-->line:138]:用例【充值】请求json结果断言成功！
INFO 2021-04-16 21:26:32,736 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-16 21:26:32,736 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-16 21:26:32,771 [base_case.py-->line:116]:用例【投资项目】状态码断言成功！
INFO 2021-04-16 21:26:32,771 [base_case.py-->line:138]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-16 21:26:32,771 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-16 21:26:32,771 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-16 21:26:32,772 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-16 21:26:32,772 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-16 21:26:33,051 [base_case.py-->line:116]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-16 21:26:33,051 [base_case.py-->line:138]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-16 21:26:33,051 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-16 21:26:33,051 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-16 21:26:33,199 [base_case.py-->line:116]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-16 21:26:33,199 [base_case.py-->line:138]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-16 21:26:33,200 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-16 21:26:33,200 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-16 21:26:33,230 [base_case.py-->line:116]:用例【添加项目】状态码断言成功！
INFO 2021-04-16 21:26:33,230 [base_case.py-->line:138]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-16 21:26:33,230 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-16 21:26:33,231 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-16 21:26:33,618 [base_case.py-->line:116]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-16 21:26:33,618 [base_case.py-->line:138]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-16 21:26:33,787 [base_case.py-->line:155]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-16 21:26:33,787 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-16 21:26:33,787 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-16 21:26:34,011 [base_case.py-->line:116]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-16 21:26:34,011 [base_case.py-->line:138]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-16 21:26:34,011 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-16 21:26:34,012 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-16 21:26:34,042 [base_case.py-->line:116]:用例【审核项目】状态码断言成功！
INFO 2021-04-16 21:26:34,042 [base_case.py-->line:138]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-16 21:26:34,042 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-16 21:26:34,042 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-16 21:26:34,043 [test_recharge.py-->line:24]:=========充值接口开始测试==========
INFO 2021-04-16 21:26:34,469 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-16 21:26:34,469 [test_recharge.py-->line:32]:注册用户15800049684成功
INFO 2021-04-16 21:26:34,703 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-16 21:26:34,703 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-16 21:26:34,735 [base_case.py-->line:116]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-16 21:26:34,735 [base_case.py-->line:138]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-16 21:26:34,759 [base_case.py-->line:155]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-16 21:26:34,759 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-16 21:26:34,760 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-16 21:26:34,792 [base_case.py-->line:116]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-16 21:26:34,792 [base_case.py-->line:138]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-16 21:26:34,816 [base_case.py-->line:155]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-16 21:26:34,817 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-16 21:26:34,817 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-16 21:26:34,856 [base_case.py-->line:116]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-16 21:26:34,857 [base_case.py-->line:138]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-16 21:26:34,881 [base_case.py-->line:155]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-16 21:26:34,881 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-16 21:26:34,881 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-16 21:26:34,919 [base_case.py-->line:116]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-16 21:26:34,919 [base_case.py-->line:138]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-16 21:26:34,943 [base_case.py-->line:155]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-16 21:26:34,943 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-16 21:26:34,943 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-16 21:26:34,971 [base_case.py-->line:116]:用例【会员id位空】状态码断言成功！
INFO 2021-04-16 21:26:34,972 [base_case.py-->line:138]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-16 21:26:34,972 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-16 21:26:34,972 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-16 21:26:35,000 [base_case.py-->line:116]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-16 21:26:35,000 [base_case.py-->line:138]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-16 21:26:35,000 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-16 21:26:35,000 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-16 21:26:35,033 [base_case.py-->line:116]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-16 21:26:35,034 [base_case.py-->line:132]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day27\test_cases\base_case.py", line 130, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-16 21:26:35,034 [base_case.py-->line:133]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-16 21:26:35,034 [base_case.py-->line:134]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-16 21:26:35,034 [base_case.py-->line:135]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000366152, 'leave_amount': 503553.68, 'mobile_phone': '15800049684', 'reg_name': '小柠檬', 'reg_time': '2021-04-16 21:26:35.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-16 21:26:35,034 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-16 21:26:35,062 [base_case.py-->line:116]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-16 21:26:35,062 [base_case.py-->line:138]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-16 21:26:35,062 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-16 21:26:35,062 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-16 21:26:35,095 [base_case.py-->line:116]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-16 21:26:35,096 [base_case.py-->line:132]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day27\test_cases\base_case.py", line 130, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-16 21:26:35,100 [base_case.py-->line:133]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-16 21:26:35,100 [base_case.py-->line:134]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-16 21:26:35,101 [base_case.py-->line:135]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000366152, 'leave_amount': 503553.68, 'mobile_phone': '15800049684', 'reg_name': '小柠檬', 'reg_time': '2021-04-16 21:26:35.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-16 21:26:35,102 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-16 21:26:35,130 [base_case.py-->line:116]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-16 21:26:35,130 [base_case.py-->line:138]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-16 21:26:35,130 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-16 21:26:35,131 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-16 21:26:35,158 [base_case.py-->line:116]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-16 21:26:35,159 [base_case.py-->line:138]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-16 21:26:35,159 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-16 21:26:35,159 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-16 21:26:35,187 [base_case.py-->line:116]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-16 21:26:35,187 [base_case.py-->line:138]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-16 21:26:35,188 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-16 21:26:35,188 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-16 21:26:35,217 [base_case.py-->line:116]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-16 21:26:35,217 [base_case.py-->line:138]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-16 21:26:35,217 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-16 21:26:35,217 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-16 21:26:35,245 [base_case.py-->line:116]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-16 21:26:35,245 [base_case.py-->line:138]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-16 21:26:35,245 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-16 21:26:35,246 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-16 21:26:35,246 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-16 21:26:35,246 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-16 21:26:35,520 [base_case.py-->line:116]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-16 21:26:35,520 [base_case.py-->line:138]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-16 21:26:35,685 [base_case.py-->line:155]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-16 21:26:35,686 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-16 21:26:35,686 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-16 21:26:36,071 [base_case.py-->line:116]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-16 21:26:36,071 [base_case.py-->line:138]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-16 21:26:36,198 [base_case.py-->line:155]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-16 21:26:36,198 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-16 21:26:36,199 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-16 21:26:36,464 [base_case.py-->line:116]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-16 21:26:36,465 [base_case.py-->line:138]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-16 21:26:36,580 [base_case.py-->line:155]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-16 21:26:36,581 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-16 21:26:36,581 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-16 21:26:36,609 [base_case.py-->line:116]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-16 21:26:36,610 [base_case.py-->line:138]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-16 21:26:36,610 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-16 21:26:36,610 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-16 21:26:36,643 [base_case.py-->line:116]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-16 21:26:36,650 [base_case.py-->line:138]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-16 21:26:36,650 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-16 21:26:36,650 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-16 21:26:36,681 [base_case.py-->line:116]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-16 21:26:36,681 [base_case.py-->line:138]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-16 21:26:36,681 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-16 21:26:36,681 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-16 21:26:36,712 [base_case.py-->line:116]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-16 21:26:36,712 [base_case.py-->line:138]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-16 21:26:36,712 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-16 21:26:36,712 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-16 21:26:36,932 [base_case.py-->line:116]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-16 21:26:36,932 [base_case.py-->line:138]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-16 21:26:36,933 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-16 21:26:36,933 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-16 21:26:36,961 [base_case.py-->line:116]:用例【密码7位】状态码断言成功！
INFO 2021-04-16 21:26:36,961 [base_case.py-->line:138]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-16 21:26:36,961 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-16 21:26:36,961 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-16 21:26:36,988 [base_case.py-->line:116]:用例【密码17位】状态码断言成功！
INFO 2021-04-16 21:26:36,989 [base_case.py-->line:138]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-16 21:26:36,989 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-16 21:26:36,989 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-16 21:26:37,016 [base_case.py-->line:116]:用例【不输入密码】状态码断言成功！
INFO 2021-04-16 21:26:37,016 [base_case.py-->line:138]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-16 21:26:37,016 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-16 21:26:37,016 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-16 21:26:37,044 [base_case.py-->line:116]:用例【昵称11位】状态码断言成功！
INFO 2021-04-16 21:26:37,044 [base_case.py-->line:138]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-16 21:26:37,044 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-16 21:26:37,044 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-16 21:26:37,071 [base_case.py-->line:116]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-16 21:26:37,071 [base_case.py-->line:138]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-16 21:26:37,071 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-16 21:26:37,071 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-16 21:40:28,316 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-16 21:40:28,681 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-16 21:40:28,681 [test_audit.py-->line:31]:注册普通用户15834898565成功
INFO 2021-04-16 21:40:28,841 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-16 21:40:29,208 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-16 21:40:29,208 [test_audit.py-->line:47]:注册用户15860493636成功
INFO 2021-04-16 21:40:29,444 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-16 21:40:29,502 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-16 21:40:29,502 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-16 21:40:29,502 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-16 21:40:29,543 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-16 21:40:29,543 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-16 21:40:29,567 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-16 21:40:29,567 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-16 21:40:29,621 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-16 21:40:29,622 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-16 21:40:29,622 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-16 21:40:29,646 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-16 21:40:29,646 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-16 21:40:29,670 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-16 21:40:29,670 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-16 21:40:29,725 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-16 21:40:29,725 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-16 21:40:29,725 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-16 21:40:29,746 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-16 21:40:29,746 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-16 21:40:29,747 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-16 21:40:29,788 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-16 21:40:29,789 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-16 21:40:29,789 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-16 21:40:29,813 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-16 21:40:29,814 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day27\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-16 21:40:29,815 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-16 21:40:29,815 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-16 21:40:29,815 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-16 21:40:29,874 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-16 21:40:29,875 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-16 21:40:29,875 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-16 21:40:29,896 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-16 21:40:29,897 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-16 21:40:29,897 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-16 21:40:29,936 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-16 21:40:29,936 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-16 21:40:29,936 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-16 21:40:29,957 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-16 21:40:29,958 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-16 21:40:29,958 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-16 21:40:30,001 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-16 21:40:30,001 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-16 21:40:30,001 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-16 21:40:30,023 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-16 21:40:30,024 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-16 21:40:30,024 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-16 21:40:30,025 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-16 21:40:30,025 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-16 21:40:30,025 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-16 21:40:30,299 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-16 21:40:30,299 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-16 21:40:30,299 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-16 21:40:30,299 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-16 21:40:30,595 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-16 21:40:30,597 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-16 21:40:30,597 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-16 21:40:30,597 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-16 21:40:30,597 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-16 21:40:30,598 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-16 21:40:30,868 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-16 21:40:30,868 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-16 21:40:31,037 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-16 21:40:31,038 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-16 21:40:31,038 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-16 21:40:31,180 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-16 21:40:31,180 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-16 21:40:31,181 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-16 21:40:31,181 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-16 21:40:31,205 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-16 21:40:31,205 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-16 21:40:31,205 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-16 21:40:31,205 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-16 21:40:31,457 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-16 21:40:31,457 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-16 21:40:31,458 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-16 21:40:31,458 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-16 21:40:31,612 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-16 21:40:31,612 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-16 21:40:31,612 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-16 21:40:31,613 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-16 21:40:31,636 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-16 21:40:31,636 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-16 21:40:31,636 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-16 21:40:31,636 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-16 21:40:31,915 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-16 21:40:31,915 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-16 21:40:31,915 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-16 21:40:31,915 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-16 21:40:32,063 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-16 21:40:32,063 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-16 21:40:32,064 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-16 21:40:32,064 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-16 21:40:32,090 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-16 21:40:32,091 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-16 21:40:32,091 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-16 21:40:32,091 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-16 21:40:32,121 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-16 21:40:32,121 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-16 21:40:32,122 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-16 21:40:32,122 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-16 21:40:32,122 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-16 21:40:32,122 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-16 21:40:32,383 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-16 21:40:32,384 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-16 21:40:32,384 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-16 21:40:32,384 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-16 21:40:32,528 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-16 21:40:32,529 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-16 21:40:32,529 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-16 21:40:32,529 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-16 21:40:32,553 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-16 21:40:32,553 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-16 21:40:32,553 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-16 21:40:32,553 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-16 21:40:32,807 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-16 21:40:32,807 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-16 21:40:32,951 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-16 21:40:32,951 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-16 21:40:32,951 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-16 21:40:33,105 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-16 21:40:33,106 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-16 21:40:33,106 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-16 21:40:33,106 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-16 21:40:33,131 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-16 21:40:33,131 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-16 21:40:33,131 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-16 21:40:33,132 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-16 21:40:33,132 [test_recharge.py-->line:24]:=========充值接口开始测试==========
INFO 2021-04-16 21:40:33,460 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-16 21:40:33,460 [test_recharge.py-->line:32]:注册用户15896434085成功
INFO 2021-04-16 21:40:33,660 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-16 21:40:33,661 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-16 21:40:33,689 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-16 21:40:33,690 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-16 21:40:33,714 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-16 21:40:33,714 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-16 21:40:33,714 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-16 21:40:33,745 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-16 21:40:33,745 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-16 21:40:33,769 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-16 21:40:33,769 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-16 21:40:33,769 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-16 21:40:33,795 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-16 21:40:33,795 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-16 21:40:33,819 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-16 21:40:33,819 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-16 21:40:33,820 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-16 21:40:33,850 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-16 21:40:33,850 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-16 21:40:33,874 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-16 21:40:33,875 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-16 21:40:33,875 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-16 21:40:33,900 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-16 21:40:33,900 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-16 21:40:33,901 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-16 21:40:33,901 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-16 21:40:33,922 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-16 21:40:33,922 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-16 21:40:33,923 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-16 21:40:33,923 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-16 21:40:33,951 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-16 21:40:33,952 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day27\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-16 21:40:33,952 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-16 21:40:33,952 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-16 21:40:33,953 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000366194, 'leave_amount': 503553.68, 'mobile_phone': '15896434085', 'reg_name': '小柠檬', 'reg_time': '2021-04-16 21:40:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-16 21:40:33,953 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-16 21:40:33,975 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-16 21:40:33,975 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-16 21:40:33,975 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-16 21:40:33,975 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-16 21:40:34,000 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-16 21:40:34,000 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day27\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-16 21:40:34,001 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-16 21:40:34,001 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-16 21:40:34,001 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000366194, 'leave_amount': 503553.68, 'mobile_phone': '15896434085', 'reg_name': '小柠檬', 'reg_time': '2021-04-16 21:40:34.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-16 21:40:34,002 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-16 21:40:34,024 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-16 21:40:34,025 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-16 21:40:34,025 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-16 21:40:34,025 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-16 21:40:34,046 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-16 21:40:34,046 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-16 21:40:34,046 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-16 21:40:34,046 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-16 21:40:34,067 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-16 21:40:34,067 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-16 21:40:34,067 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-16 21:40:34,068 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-16 21:40:34,089 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-16 21:40:34,090 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-16 21:40:34,090 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-16 21:40:34,090 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-16 21:40:34,112 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-16 21:40:34,112 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-16 21:40:34,112 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-16 21:40:34,112 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-16 21:40:34,112 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-16 21:40:34,112 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-16 21:40:34,370 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-16 21:40:34,371 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-16 21:40:34,488 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-16 21:40:34,488 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-16 21:40:34,488 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-16 21:40:34,813 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-16 21:40:34,813 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-16 21:40:34,959 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-16 21:40:34,960 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-16 21:40:34,960 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-16 21:40:35,254 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-16 21:40:35,254 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-16 21:40:35,370 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-16 21:40:35,370 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-16 21:40:35,371 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-16 21:40:35,392 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-16 21:40:35,392 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-16 21:40:35,392 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-16 21:40:35,392 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-16 21:40:35,413 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-16 21:40:35,413 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-16 21:40:35,413 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-16 21:40:35,414 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-16 21:40:35,437 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-16 21:40:35,438 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-16 21:40:35,438 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-16 21:40:35,438 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-16 21:40:35,460 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-16 21:40:35,461 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-16 21:40:35,461 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-16 21:40:35,461 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-16 21:40:35,673 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-16 21:40:35,673 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-16 21:40:35,674 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-16 21:40:35,674 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-16 21:40:35,696 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-16 21:40:35,696 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-16 21:40:35,696 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-16 21:40:35,696 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-16 21:40:35,718 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-16 21:40:35,718 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-16 21:40:35,718 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-16 21:40:35,718 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-16 21:40:35,739 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-16 21:40:35,739 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-16 21:40:35,739 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-16 21:40:35,740 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-16 21:40:35,760 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-16 21:40:35,760 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-16 21:40:35,760 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-16 21:40:35,760 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-16 21:40:35,781 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-16 21:40:35,781 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-16 21:40:35,781 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-16 21:40:35,781 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-19 21:13:58,155 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-19 21:13:58,326 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-19 22:01:10,622 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-19 22:01:10,974 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-19 22:01:10,975 [test_audit.py-->line:31]:注册普通用户15801739335成功
INFO 2021-04-19 22:01:11,169 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-19 22:01:11,505 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-19 22:01:11,506 [test_audit.py-->line:47]:注册用户15897203044成功
INFO 2021-04-19 22:01:11,684 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-19 22:01:11,731 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-19 22:01:11,731 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-19 22:01:11,731 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-19 22:01:11,789 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-19 22:01:11,789 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-19 22:01:11,820 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-19 22:01:11,820 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-19 22:01:11,864 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-19 22:01:11,865 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-19 22:01:11,865 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-19 22:01:11,896 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-19 22:01:11,896 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-19 22:01:11,936 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-19 22:01:11,936 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-19 22:01:11,994 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-19 22:01:11,994 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-19 22:01:11,995 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-19 22:01:12,023 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-19 22:01:12,023 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-19 22:01:12,023 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-19 22:01:12,070 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-19 22:01:12,070 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-19 22:01:12,071 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-19 22:01:12,101 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-19 22:01:12,102 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-19 22:01:12,106 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-19 22:01:12,106 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-19 22:01:12,106 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-19 22:01:12,155 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-19 22:01:12,155 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-19 22:01:12,155 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-19 22:01:12,186 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-19 22:01:12,186 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-19 22:01:12,186 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-19 22:01:12,246 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-19 22:01:12,246 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-19 22:01:12,246 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-19 22:01:12,276 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-19 22:01:12,276 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-19 22:01:12,276 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-19 22:01:12,334 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-19 22:01:12,335 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-19 22:01:12,335 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-19 22:01:12,361 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-19 22:01:12,362 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-19 22:01:12,362 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-19 22:01:12,362 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-19 22:01:12,362 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-19 22:01:12,362 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-19 22:01:12,668 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-19 22:01:12,668 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-19 22:01:12,669 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-19 22:01:12,669 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-19 22:01:12,997 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-19 22:01:12,999 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-19 22:01:12,999 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-19 22:01:12,999 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-19 22:01:12,999 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-19 22:01:12,999 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-19 22:01:13,289 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-19 22:01:13,290 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-19 22:01:13,290 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-19 22:01:13,291 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-19 22:01:13,474 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-19 22:01:13,474 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-19 22:01:13,475 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-19 22:01:13,475 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-19 22:01:13,502 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
ERROR 2021-04-19 22:01:13,503 [base_case.py-->line:134]:用例【前置条件-创建项目】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 0, 'msg': 'OK'} != {'code': 1003, 'msg': '验签失败，缺少timestamp参数'}
- {'code': 0, 'msg': 'OK'}
+ {'code': 1003, 'msg': '验签失败，缺少timestamp参数'}
DEBUG 2021-04-19 22:01:13,503 [base_case.py-->line:135]:期望数据：{'code': 0, 'msg': 'OK'}
DEBUG 2021-04-19 22:01:13,503 [base_case.py-->line:136]:实际结果: {'code': 1003, 'msg': '验签失败，缺少timestamp参数'}
DEBUG 2021-04-19 22:01:13,503 [base_case.py-->line:137]:响应结果：{'code': 1003, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved', 'msg': '验签失败，缺少timestamp参数'}
INFO 2021-04-19 22:01:13,504 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-19 22:01:13,810 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-19 22:01:13,811 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-19 22:01:13,812 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-19 22:01:13,813 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-19 22:01:13,974 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-19 22:01:13,975 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-19 22:01:13,975 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-19 22:01:13,975 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-19 22:01:14,004 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
ERROR 2021-04-19 22:01:14,005 [base_case.py-->line:134]:用例【前置条件-投资普通用户1充值】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 0, 'msg': 'OK'} != {'code': 1003, 'msg': '验签失败，缺少timestamp参数'}
- {'code': 0, 'msg': 'OK'}
+ {'code': 1003, 'msg': '验签失败，缺少timestamp参数'}
DEBUG 2021-04-19 22:01:14,005 [base_case.py-->line:135]:期望数据：{'code': 0, 'msg': 'OK'}
DEBUG 2021-04-19 22:01:14,005 [base_case.py-->line:136]:实际结果: {'code': 1003, 'msg': '验签失败，缺少timestamp参数'}
DEBUG 2021-04-19 22:01:14,005 [base_case.py-->line:137]:响应结果：{'code': 1003, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved', 'msg': '验签失败，缺少timestamp参数'}
INFO 2021-04-19 22:01:14,006 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-19 22:01:14,281 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-19 22:01:14,281 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-19 22:01:14,281 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-19 22:01:14,281 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-19 22:01:14,432 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-19 22:01:14,432 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-19 22:01:14,432 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-19 22:01:14,432 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-19 22:01:14,459 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
ERROR 2021-04-19 22:01:14,460 [base_case.py-->line:134]:用例【前置条件-投资普通用户2充值】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 0, 'msg': 'OK'} != {'code': 1003, 'msg': '验签失败，缺少timestamp参数'}
- {'code': 0, 'msg': 'OK'}
+ {'code': 1003, 'msg': '验签失败，缺少timestamp参数'}
DEBUG 2021-04-19 22:01:14,460 [base_case.py-->line:135]:期望数据：{'code': 0, 'msg': 'OK'}
DEBUG 2021-04-19 22:01:14,460 [base_case.py-->line:136]:实际结果: {'code': 1003, 'msg': '验签失败，缺少timestamp参数'}
DEBUG 2021-04-19 22:01:14,461 [base_case.py-->line:137]:响应结果：{'code': 1003, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved', 'msg': '验签失败，缺少timestamp参数'}
INFO 2021-04-19 22:01:14,461 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-19 22:01:14,736 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-19 22:01:14,736 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-19 22:01:14,736 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-19 22:01:14,736 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-19 22:01:14,900 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-19 22:01:14,900 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-19 22:01:14,903 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-19 22:01:14,904 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
ERROR 2021-04-19 22:01:14,904 [base_case.py-->line:83]:用例【投资项目不是竞标中状态】的json格式不正确
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 80, in pre_test_data
    self.case['request'] = json.loads(self.case['request'])
  File "D:\Program Files\Python38\lib\json\__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "D:\Program Files\Python38\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "D:\Program Files\Python38\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 3 column 43 (char 286)
DEBUG 2021-04-19 22:01:14,906 [base_case.py-->line:84]:case["request"]:{
"headers": {"X-Lemonban-Media-Type": "lemonban.v3","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNzQ1MTIsImV4cCI6MTYxODg0MTE3M30.1jejpVOX7X63goDYiGUW71lvauEiJbpG53zYNLfYDhA8rjmCYPcl14QwuH05KC12rJcPalfts6vi5xHS4Ub6gw"},
"json": {"member_id":1000374512,"loan_id":#loan_id#,"amount":800}
}
ERROR 2021-04-19 22:01:14,906 [base_case.py-->line:85]:case["expect_data"]:{"code":2,
"msg":"该项目不在竞标中状态"}
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 80, in pre_test_data
    self.case['request'] = json.loads(self.case['request'])
  File "D:\Program Files\Python38\lib\json\__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "D:\Program Files\Python38\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "D:\Program Files\Python38\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 3 column 43 (char 286)
INFO 2021-04-19 22:01:14,908 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
ERROR 2021-04-19 22:01:14,908 [base_case.py-->line:83]:用例【前置条件-审核项目】的json格式不正确
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 80, in pre_test_data
    self.case['request'] = json.loads(self.case['request'])
  File "D:\Program Files\Python38\lib\json\__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "D:\Program Files\Python38\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "D:\Program Files\Python38\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 3 column 20 (char 264)
DEBUG 2021-04-19 22:01:14,909 [base_case.py-->line:84]:case["request"]:{
 "headers": {"X-Lemonban-Media-Type": "lemonban.v2","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNzQ1MTQsImV4cCI6MTYxODg0MTE3NH0.hJm99W83N-aQdOp9ALRqLPpjgAH1CtxmyObR3HFndYiwk0Yj5nON2j4lGR0sTA8O_BgSziyktlKeCVqurGaHxg"},
 "json":{"loan_id":#loan_id#,"approved_or_not":true}
}
ERROR 2021-04-19 22:01:14,909 [base_case.py-->line:85]:case["expect_data"]:{"code":0,"msg":"OK"}
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 80, in pre_test_data
    self.case['request'] = json.loads(self.case['request'])
  File "D:\Program Files\Python38\lib\json\__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "D:\Program Files\Python38\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "D:\Program Files\Python38\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 3 column 20 (char 264)
INFO 2021-04-19 22:01:14,914 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
ERROR 2021-04-19 22:01:14,914 [base_case.py-->line:83]:用例【用户id为空】的json格式不正确
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 80, in pre_test_data
    self.case['request'] = json.loads(self.case['request'])
  File "D:\Program Files\Python38\lib\json\__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "D:\Program Files\Python38\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "D:\Program Files\Python38\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 3 column 20 (char 263)
DEBUG 2021-04-19 22:01:14,915 [base_case.py-->line:84]:case["request"]:{
"headers": {"X-Lemonban-Media-Type": "lemonban.v3","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNzQ1MTIsImV4cCI6MTYxODg0MTE3M30.1jejpVOX7X63goDYiGUW71lvauEiJbpG53zYNLfYDhA8rjmCYPcl14QwuH05KC12rJcPalfts6vi5xHS4Ub6gw"},
"json": {"loan_id":#loan_id#,"amount":800}
}
ERROR 2021-04-19 22:01:14,915 [base_case.py-->line:85]:case["expect_data"]:{"code":1,"msg":"会员id为空"}
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 80, in pre_test_data
    self.case['request'] = json.loads(self.case['request'])
  File "D:\Program Files\Python38\lib\json\__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "D:\Program Files\Python38\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "D:\Program Files\Python38\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 3 column 20 (char 263)
INFO 2021-04-19 22:01:14,917 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
ERROR 2021-04-19 22:01:14,917 [base_case.py-->line:83]:用例【投资金额为空】的json格式不正确
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 80, in pre_test_data
    self.case['request'] = json.loads(self.case['request'])
  File "D:\Program Files\Python38\lib\json\__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "D:\Program Files\Python38\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "D:\Program Files\Python38\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 3 column 43 (char 286)
DEBUG 2021-04-19 22:01:14,921 [base_case.py-->line:84]:case["request"]:{
"headers": {"X-Lemonban-Media-Type": "lemonban.v3","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNzQ1MTIsImV4cCI6MTYxODg0MTE3M30.1jejpVOX7X63goDYiGUW71lvauEiJbpG53zYNLfYDhA8rjmCYPcl14QwuH05KC12rJcPalfts6vi5xHS4Ub6gw"},
"json": {"member_id":1000374512,"loan_id":#loan_id#}
}
ERROR 2021-04-19 22:01:14,921 [base_case.py-->line:85]:case["expect_data"]:{"code":1,"msg":"余额为空"}
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 80, in pre_test_data
    self.case['request'] = json.loads(self.case['request'])
  File "D:\Program Files\Python38\lib\json\__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "D:\Program Files\Python38\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "D:\Program Files\Python38\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 3 column 43 (char 286)
INFO 2021-04-19 22:01:14,923 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
ERROR 2021-04-19 22:01:14,923 [base_case.py-->line:83]:用例【投资金额为不能被100整除的数】的json格式不正确
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 80, in pre_test_data
    self.case['request'] = json.loads(self.case['request'])
  File "D:\Program Files\Python38\lib\json\__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "D:\Program Files\Python38\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "D:\Program Files\Python38\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 3 column 43 (char 286)
DEBUG 2021-04-19 22:01:14,924 [base_case.py-->line:84]:case["request"]:{
"headers": {"X-Lemonban-Media-Type": "lemonban.v3","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNzQ1MTIsImV4cCI6MTYxODg0MTE3M30.1jejpVOX7X63goDYiGUW71lvauEiJbpG53zYNLfYDhA8rjmCYPcl14QwuH05KC12rJcPalfts6vi5xHS4Ub6gw"},
"json": {"member_id":1000374512,"loan_id":#loan_id#,"amount":888}
}
ERROR 2021-04-19 22:01:14,924 [base_case.py-->line:85]:case["expect_data"]:{"code":2,
"msg":"投资金额必须大于100，并且可以被100整除"}
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 80, in pre_test_data
    self.case['request'] = json.loads(self.case['request'])
  File "D:\Program Files\Python38\lib\json\__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "D:\Program Files\Python38\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "D:\Program Files\Python38\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 3 column 43 (char 286)
INFO 2021-04-19 22:01:14,926 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
ERROR 2021-04-19 22:01:14,927 [base_case.py-->line:83]:用例【投资成功】的json格式不正确
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 80, in pre_test_data
    self.case['request'] = json.loads(self.case['request'])
  File "D:\Program Files\Python38\lib\json\__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "D:\Program Files\Python38\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "D:\Program Files\Python38\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 3 column 43 (char 286)
DEBUG 2021-04-19 22:01:14,927 [base_case.py-->line:84]:case["request"]:{
"headers": {"X-Lemonban-Media-Type": "lemonban.v3","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNzQ1MTIsImV4cCI6MTYxODg0MTE3M30.1jejpVOX7X63goDYiGUW71lvauEiJbpG53zYNLfYDhA8rjmCYPcl14QwuH05KC12rJcPalfts6vi5xHS4Ub6gw"},
"json": {"member_id":1000374512,"loan_id":#loan_id#,"amount":5000}
}
ERROR 2021-04-19 22:01:14,927 [base_case.py-->line:85]:case["expect_data"]:{"code":0,"msg":"OK"}
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 80, in pre_test_data
    self.case['request'] = json.loads(self.case['request'])
  File "D:\Program Files\Python38\lib\json\__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "D:\Program Files\Python38\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "D:\Program Files\Python38\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 3 column 43 (char 286)
INFO 2021-04-19 22:01:14,932 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
ERROR 2021-04-19 22:01:14,932 [base_case.py-->line:83]:用例【投资金额大于项目剩余可投金额】的json格式不正确
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 80, in pre_test_data
    self.case['request'] = json.loads(self.case['request'])
  File "D:\Program Files\Python38\lib\json\__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "D:\Program Files\Python38\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "D:\Program Files\Python38\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 3 column 43 (char 286)
DEBUG 2021-04-19 22:01:14,933 [base_case.py-->line:84]:case["request"]:{
"headers": {"X-Lemonban-Media-Type": "lemonban.v3","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNzQ1MTMsImV4cCI6MTYxODg0MTE3NH0.woOykxRc_GG3lF6jpGsSgP9GhE-AbwdFm2r0D5Sbwx6m0kprGWd_TDMWDUMJPOMD_dElvwiGYm-cdtV9nofGFQ"},
"json": {"member_id":1000374513,"loan_id":#loan_id#,"amount":5100}
}
ERROR 2021-04-19 22:01:14,933 [base_case.py-->line:85]:case["expect_data"]:{"code":2,"msg":"该标可投金额不足,可投金额：5000.0"}
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 80, in pre_test_data
    self.case['request'] = json.loads(self.case['request'])
  File "D:\Program Files\Python38\lib\json\__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "D:\Program Files\Python38\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "D:\Program Files\Python38\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 3 column 43 (char 286)
INFO 2021-04-19 22:01:14,935 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
ERROR 2021-04-19 22:01:14,935 [base_case.py-->line:83]:用例【投资成功并满标】的json格式不正确
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 80, in pre_test_data
    self.case['request'] = json.loads(self.case['request'])
  File "D:\Program Files\Python38\lib\json\__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "D:\Program Files\Python38\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "D:\Program Files\Python38\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 3 column 43 (char 286)
DEBUG 2021-04-19 22:01:14,935 [base_case.py-->line:84]:case["request"]:{
"headers": {"X-Lemonban-Media-Type": "lemonban.v3","Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEwMDAzNzQ1MTMsImV4cCI6MTYxODg0MTE3NH0.woOykxRc_GG3lF6jpGsSgP9GhE-AbwdFm2r0D5Sbwx6m0kprGWd_TDMWDUMJPOMD_dElvwiGYm-cdtV9nofGFQ"},
"json": {"member_id":1000374513,"loan_id":#loan_id#,"amount":5000}
}
ERROR 2021-04-19 22:01:14,935 [base_case.py-->line:85]:case["expect_data"]:{"code":0,"msg":"OK"}
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 80, in pre_test_data
    self.case['request'] = json.loads(self.case['request'])
  File "D:\Program Files\Python38\lib\json\__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "D:\Program Files\Python38\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "D:\Program Files\Python38\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 3 column 43 (char 286)
INFO 2021-04-19 22:01:14,937 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-19 22:01:14,937 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-19 22:01:14,937 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-19 22:01:15,248 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-19 22:01:15,248 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-19 22:01:15,363 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-19 22:01:15,364 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-19 22:01:15,364 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-19 22:01:15,519 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-19 22:01:15,520 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-19 22:01:15,520 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-19 22:01:15,520 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-19 22:01:15,550 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-19 22:01:15,550 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-19 22:01:15,550 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-19 22:01:15,551 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-19 22:01:15,827 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-19 22:01:15,828 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-19 22:01:15,828 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-19 22:01:15,829 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-19 22:01:15,999 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-19 22:01:15,999 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-19 22:01:15,999 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-19 22:01:15,999 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-19 22:01:16,029 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-19 22:01:16,029 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-19 22:01:16,030 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-19 22:01:16,030 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-19 22:01:16,388 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-19 22:01:16,388 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-19 22:01:16,389 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-19 22:01:16,389 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-19 22:01:16,540 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-19 22:01:16,540 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-19 22:01:16,543 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-19 22:01:16,544 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-19 22:01:16,577 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-19 22:01:16,578 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-19 22:01:16,578 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-19 22:01:16,578 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-19 22:01:16,613 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-19 22:01:16,614 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-19 22:01:16,614 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-19 22:01:16,614 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-19 22:01:16,614 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-19 22:01:16,614 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-19 22:01:16,887 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-19 22:01:16,887 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-19 22:01:16,887 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-19 22:01:16,888 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-19 22:01:17,054 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-19 22:01:17,054 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-19 22:01:17,054 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-19 22:01:17,054 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-19 22:01:17,086 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-19 22:01:17,087 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-19 22:01:17,087 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-19 22:01:17,088 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-19 22:01:17,364 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-19 22:01:17,364 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-19 22:01:17,484 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-19 22:01:17,484 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-19 22:01:17,484 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-19 22:01:17,636 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-19 22:01:17,636 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-19 22:01:17,636 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-19 22:01:17,636 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-19 22:01:17,666 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-19 22:01:17,666 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-19 22:01:17,666 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-19 22:01:17,666 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-19 22:01:17,666 [test_recharge.py-->line:24]:=========充值接口开始测试==========
INFO 2021-04-19 22:01:17,980 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-19 22:01:17,981 [test_recharge.py-->line:32]:注册用户15875588581成功
INFO 2021-04-19 22:01:18,146 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-19 22:01:18,146 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-19 22:01:18,183 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-19 22:01:18,184 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-19 22:01:18,214 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-19 22:01:18,215 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-19 22:01:18,215 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-19 22:01:18,246 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-19 22:01:18,247 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-19 22:01:18,281 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-19 22:01:18,281 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-19 22:01:18,281 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-19 22:01:18,313 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-19 22:01:18,313 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-19 22:01:18,350 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-19 22:01:18,350 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-19 22:01:18,351 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-19 22:01:18,382 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-19 22:01:18,383 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-19 22:01:18,415 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-19 22:01:18,415 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-19 22:01:18,415 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-19 22:01:18,444 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-19 22:01:18,444 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-19 22:01:18,445 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-19 22:01:18,445 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-19 22:01:18,473 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-19 22:01:18,473 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-19 22:01:18,474 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-19 22:01:18,474 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-19 22:01:18,507 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-19 22:01:18,507 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-19 22:01:18,507 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-19 22:01:18,507 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-19 22:01:18,508 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000374520, 'leave_amount': 503553.68, 'mobile_phone': '15875588581', 'reg_name': '小柠檬', 'reg_time': '2021-04-19 22:01:17.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-19 22:01:18,509 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-19 22:01:18,537 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-19 22:01:18,537 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-19 22:01:18,537 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-19 22:01:18,538 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-19 22:01:18,569 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-19 22:01:18,569 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-19 22:01:18,569 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-19 22:01:18,569 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-19 22:01:18,570 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000374520, 'leave_amount': 503553.68, 'mobile_phone': '15875588581', 'reg_name': '小柠檬', 'reg_time': '2021-04-19 22:01:17.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-19 22:01:18,570 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-19 22:01:18,598 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-19 22:01:18,599 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-19 22:01:18,599 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-19 22:01:18,599 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-19 22:01:18,627 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-19 22:01:18,628 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-19 22:01:18,628 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-19 22:01:18,628 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-19 22:01:18,658 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-19 22:01:18,660 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-19 22:01:18,660 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-19 22:01:18,661 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-19 22:01:18,689 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-19 22:01:18,689 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-19 22:01:18,689 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-19 22:01:18,690 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-19 22:01:18,717 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-19 22:01:18,718 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-19 22:01:18,718 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-19 22:01:18,718 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-19 22:01:18,719 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-19 22:01:18,719 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-19 22:01:19,080 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-19 22:01:19,081 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-19 22:01:19,209 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-19 22:01:19,209 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-19 22:01:19,209 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-19 22:01:19,499 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-19 22:01:19,499 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-19 22:01:19,643 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-19 22:01:19,643 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-19 22:01:19,643 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-19 22:01:19,943 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-19 22:01:19,943 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-19 22:01:20,067 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-19 22:01:20,068 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-19 22:01:20,068 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-19 22:01:20,094 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-19 22:01:20,094 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-19 22:01:20,094 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-19 22:01:20,095 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-19 22:01:20,121 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-19 22:01:20,122 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-19 22:01:20,122 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-19 22:01:20,122 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-19 22:01:20,148 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-19 22:01:20,149 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-19 22:01:20,149 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-19 22:01:20,149 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-19 22:01:20,177 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-19 22:01:20,178 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-19 22:01:20,178 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-19 22:01:20,178 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-19 22:01:20,329 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-19 22:01:20,329 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-19 22:01:20,329 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-19 22:01:20,329 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-19 22:01:20,357 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-19 22:01:20,357 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-19 22:01:20,357 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-19 22:01:20,357 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-19 22:01:20,388 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-19 22:01:20,388 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-19 22:01:20,388 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-19 22:01:20,389 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-19 22:01:20,417 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-19 22:01:20,417 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-19 22:01:20,417 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-19 22:01:20,417 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-19 22:01:20,445 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-19 22:01:20,446 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-19 22:01:20,446 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-19 22:01:20,449 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-19 22:01:20,481 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-19 22:01:20,481 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-19 22:01:20,481 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-19 22:01:20,481 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-19 22:03:50,618 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-19 22:03:50,913 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-19 22:03:50,913 [test_audit.py-->line:31]:注册普通用户15831364892成功
INFO 2021-04-19 22:03:51,100 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-19 22:03:51,378 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-19 22:03:51,378 [test_audit.py-->line:47]:注册用户15804039026成功
INFO 2021-04-19 22:03:51,550 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-19 22:03:51,607 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-19 22:03:51,607 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-19 22:03:51,607 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-19 22:03:51,664 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-19 22:03:51,665 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-19 22:03:51,691 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-19 22:03:51,691 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-19 22:03:51,731 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-19 22:03:51,732 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-19 22:03:51,732 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-19 22:03:51,762 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-19 22:03:51,762 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-19 22:03:51,787 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-19 22:03:51,787 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-19 22:03:51,828 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-19 22:03:51,828 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-19 22:03:51,829 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-19 22:03:51,858 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-19 22:03:51,859 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-19 22:03:51,859 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-19 22:03:51,900 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-19 22:03:51,901 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-19 22:03:51,901 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-19 22:03:51,932 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-19 22:03:51,932 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-19 22:03:51,933 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-19 22:03:51,933 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-19 22:03:51,933 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-19 22:03:51,976 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-19 22:03:51,976 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-19 22:03:51,976 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-19 22:03:52,006 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-19 22:03:52,006 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-19 22:03:52,006 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-19 22:03:52,066 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-19 22:03:52,067 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-19 22:03:52,067 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-19 22:03:52,096 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-19 22:03:52,096 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-19 22:03:52,096 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-19 22:03:52,141 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-19 22:03:52,142 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-19 22:03:52,142 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-19 22:03:52,172 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-19 22:03:52,172 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-19 22:03:52,172 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-19 22:03:52,173 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-19 22:03:52,173 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-19 22:03:52,173 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-19 22:03:52,426 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-19 22:03:52,427 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-19 22:03:52,427 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-19 22:03:52,427 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-19 22:03:52,699 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-19 22:03:52,700 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-19 22:03:52,700 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-19 22:03:52,700 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-19 22:03:52,700 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-19 22:03:52,700 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-19 22:03:53,040 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-19 22:03:53,041 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-19 22:03:53,042 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-19 22:03:53,042 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-19 22:03:53,196 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-19 22:03:53,197 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-19 22:03:53,197 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-19 22:03:53,197 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-19 22:03:53,261 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-19 22:03:53,261 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-19 22:03:53,262 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-19 22:03:53,262 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-19 22:03:53,550 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-19 22:03:53,550 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-19 22:03:53,551 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-19 22:03:53,551 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-19 22:03:53,701 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-19 22:03:53,701 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-19 22:03:53,702 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-19 22:03:53,702 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-19 22:03:53,736 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-19 22:03:53,736 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-19 22:03:53,737 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-19 22:03:53,737 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-19 22:03:54,021 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-19 22:03:54,021 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-19 22:03:54,026 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-19 22:03:54,027 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-19 22:03:54,215 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-19 22:03:54,215 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-19 22:03:54,216 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-19 22:03:54,216 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-19 22:03:54,251 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-19 22:03:54,251 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-19 22:03:54,251 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-19 22:03:54,251 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-19 22:03:54,595 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-19 22:03:54,595 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-19 22:03:54,595 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-19 22:03:54,596 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-19 22:03:54,748 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-19 22:03:54,749 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-19 22:03:54,749 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-19 22:03:54,749 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-19 22:03:54,783 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-19 22:03:54,783 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-19 22:03:54,783 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-19 22:03:54,783 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-19 22:03:54,818 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-19 22:03:54,819 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-19 22:03:54,819 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-19 22:03:54,819 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-19 22:03:54,850 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-19 22:03:54,850 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-19 22:03:54,850 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-19 22:03:54,850 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-19 22:03:54,880 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-19 22:03:54,880 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-19 22:03:54,881 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-19 22:03:54,881 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-19 22:03:54,910 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-19 22:03:54,911 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-19 22:03:54,911 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-19 22:03:54,911 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-19 22:03:54,911 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-19 22:03:54,912 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-19 22:03:54,948 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-19 22:03:54,949 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
ERROR 2021-04-19 22:03:54,982 [test_invest.py-->line:60]:用例【投资成功】数据库断言失败
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\test_invest.py", line 57, in assert_db_true
    db_res = self.db.exist(self.case['sql'])
  File "D:\project\classes\py38\day28\common\db_handler.py", line 51, in exist
    cursor.execute(sql)
  File "D:\Program Files\Python38\lib\site-packages\pymysql\cursors.py", line 163, in execute
    result = self._query(query)
  File "D:\Program Files\Python38\lib\site-packages\pymysql\cursors.py", line 321, in _query
    conn.query(q)
  File "D:\Program Files\Python38\lib\site-packages\pymysql\connections.py", line 505, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "D:\Program Files\Python38\lib\site-packages\pymysql\connections.py", line 724, in _read_query_result
    result.read()
  File "D:\Program Files\Python38\lib\site-packages\pymysql\connections.py", line 1069, in read
    first_packet = self.connection._read_packet()
  File "D:\Program Files\Python38\lib\site-packages\pymysql\connections.py", line 676, in _read_packet
    packet.raise_for_error()
  File "D:\Program Files\Python38\lib\site-packages\pymysql\protocol.py", line 223, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "D:\Program Files\Python38\lib\site-packages\pymysql\err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near \'["select id from member where id=1000374539 and leave_amount=0",\n"select id from\' at line 1')
DEBUG 2021-04-19 22:03:54,985 [test_invest.py-->line:61]:执行的sql是:["select id from member where id=1000374539 and leave_amount=0",
"select id from invest where member_id=1000374539 and loan_id=2052817 and amount=5000",
"select id from financelog where pay_member_id=1000374539 and amount=5000"]
INFO 2021-04-19 22:03:54,989 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-19 22:03:55,025 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-19 22:03:55,025 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-19 22:03:55,026 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-19 22:03:55,026 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-19 22:03:55,075 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-19 22:03:55,075 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
ERROR 2021-04-19 22:03:55,101 [test_invest.py-->line:60]:用例【投资成功并满标】数据库断言失败
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\test_invest.py", line 57, in assert_db_true
    db_res = self.db.exist(self.case['sql'])
  File "D:\project\classes\py38\day28\common\db_handler.py", line 51, in exist
    cursor.execute(sql)
  File "D:\Program Files\Python38\lib\site-packages\pymysql\cursors.py", line 163, in execute
    result = self._query(query)
  File "D:\Program Files\Python38\lib\site-packages\pymysql\cursors.py", line 321, in _query
    conn.query(q)
  File "D:\Program Files\Python38\lib\site-packages\pymysql\connections.py", line 505, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "D:\Program Files\Python38\lib\site-packages\pymysql\connections.py", line 724, in _read_query_result
    result.read()
  File "D:\Program Files\Python38\lib\site-packages\pymysql\connections.py", line 1069, in read
    first_packet = self.connection._read_packet()
  File "D:\Program Files\Python38\lib\site-packages\pymysql\connections.py", line 676, in _read_packet
    packet.raise_for_error()
  File "D:\Program Files\Python38\lib\site-packages\pymysql\protocol.py", line 223, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "D:\Program Files\Python38\lib\site-packages\pymysql\err.py", line 107, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near \'["select id from member where id=1000374540 and leave_amount=100",\n"select id fr\' at line 1')
DEBUG 2021-04-19 22:03:55,102 [test_invest.py-->line:61]:执行的sql是:["select id from member where id=1000374540 and leave_amount=100",
"select id from invest where member_id=1000374540 and loan_id=2052817 and amount=5000",
"select id from financelog where pay_member_id=1000374540 and amount=5000",
"select count(id) from repayment where invest_id in (select id from invest where loan_id=2052817)  having count(id)=12"]
INFO 2021-04-19 22:03:55,106 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-19 22:03:55,106 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-19 22:03:55,107 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-19 22:03:55,521 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-19 22:03:55,522 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-19 22:03:55,710 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-19 22:03:55,710 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-19 22:03:55,711 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-19 22:03:55,962 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-19 22:03:55,962 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-19 22:03:55,962 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-19 22:03:55,963 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-19 22:03:55,994 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-19 22:03:55,994 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-19 22:03:55,994 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-19 22:03:55,994 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-19 22:03:56,411 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-19 22:03:56,411 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-19 22:03:56,412 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-19 22:03:56,412 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-19 22:03:56,662 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-19 22:03:56,662 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-19 22:03:56,662 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-19 22:03:56,663 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-19 22:03:56,693 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-19 22:03:56,693 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-19 22:03:56,693 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-19 22:03:56,694 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-19 22:03:57,131 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-19 22:03:57,131 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-19 22:03:57,131 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-19 22:03:57,131 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-19 22:03:57,381 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-19 22:03:57,382 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-19 22:03:57,382 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-19 22:03:57,382 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-19 22:03:57,418 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-19 22:03:57,418 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-19 22:03:57,418 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-19 22:03:57,418 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-19 22:03:57,457 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-19 22:03:57,458 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-19 22:03:57,458 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-19 22:03:57,458 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-19 22:03:57,458 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-19 22:03:57,458 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-19 22:03:57,898 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-19 22:03:57,898 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-19 22:03:57,898 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-19 22:03:57,898 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-19 22:03:58,148 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-19 22:03:58,149 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-19 22:03:58,149 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-19 22:03:58,149 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-19 22:03:58,180 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-19 22:03:58,181 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-19 22:03:58,181 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-19 22:03:58,181 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-19 22:03:58,618 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-19 22:03:58,619 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-19 22:03:58,808 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-19 22:03:58,808 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-19 22:03:58,808 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-19 22:03:59,058 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-19 22:03:59,058 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-19 22:03:59,059 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-19 22:03:59,059 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-19 22:03:59,090 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-19 22:03:59,090 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-19 22:03:59,090 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-19 22:03:59,090 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-19 22:03:59,090 [test_recharge.py-->line:24]:=========充值接口开始测试==========
INFO 2021-04-19 22:03:59,539 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-19 22:03:59,540 [test_recharge.py-->line:32]:注册用户15850062262成功
INFO 2021-04-19 22:03:59,816 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-19 22:03:59,816 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-19 22:03:59,849 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-19 22:03:59,849 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-19 22:03:59,876 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-19 22:03:59,876 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-19 22:03:59,876 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-19 22:03:59,909 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-19 22:03:59,910 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-19 22:03:59,940 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-19 22:03:59,940 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-19 22:03:59,940 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-19 22:03:59,975 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-19 22:03:59,975 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-19 22:04:00,006 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-19 22:04:00,007 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-19 22:04:00,007 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-19 22:04:00,043 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-19 22:04:00,043 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-19 22:04:00,068 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-19 22:04:00,068 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-19 22:04:00,069 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-19 22:04:00,099 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-19 22:04:00,100 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-19 22:04:00,100 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-19 22:04:00,100 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-19 22:04:00,131 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-19 22:04:00,131 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-19 22:04:00,131 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-19 22:04:00,131 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-19 22:04:00,167 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-19 22:04:00,168 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-19 22:04:00,168 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-19 22:04:00,168 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-19 22:04:00,168 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000374547, 'leave_amount': 503553.68, 'mobile_phone': '15850062262', 'reg_name': '小柠檬', 'reg_time': '2021-04-19 22:03:59.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-19 22:04:00,169 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-19 22:04:00,200 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-19 22:04:00,201 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-19 22:04:00,201 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-19 22:04:00,205 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-19 22:04:00,240 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-19 22:04:00,240 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-19 22:04:00,241 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-19 22:04:00,241 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-19 22:04:00,241 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000374547, 'leave_amount': 503553.68, 'mobile_phone': '15850062262', 'reg_name': '小柠檬', 'reg_time': '2021-04-19 22:03:59.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-19 22:04:00,241 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-19 22:04:00,269 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-19 22:04:00,269 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-19 22:04:00,269 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-19 22:04:00,270 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-19 22:04:00,299 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-19 22:04:00,299 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-19 22:04:00,299 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-19 22:04:00,299 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-19 22:04:00,330 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-19 22:04:00,330 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-19 22:04:00,331 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-19 22:04:00,331 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-19 22:04:00,363 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-19 22:04:00,363 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-19 22:04:00,363 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-19 22:04:00,363 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-19 22:04:00,402 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-19 22:04:00,403 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-19 22:04:00,403 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-19 22:04:00,404 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-19 22:04:00,405 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-19 22:04:00,405 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-19 22:04:00,734 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-19 22:04:00,735 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-19 22:04:00,852 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-19 22:04:00,853 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-19 22:04:00,853 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-19 22:04:01,126 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-19 22:04:01,126 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-19 22:04:01,240 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-19 22:04:01,240 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-19 22:04:01,241 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-19 22:04:01,574 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-19 22:04:01,575 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-19 22:04:01,724 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-19 22:04:01,724 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-19 22:04:01,724 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-19 22:04:01,751 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-19 22:04:01,751 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-19 22:04:01,752 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-19 22:04:01,752 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-19 22:04:01,780 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-19 22:04:01,780 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-19 22:04:01,780 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-19 22:04:01,780 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-19 22:04:01,809 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-19 22:04:01,809 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-19 22:04:01,809 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-19 22:04:01,810 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-19 22:04:01,842 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-19 22:04:01,843 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-19 22:04:01,843 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-19 22:04:01,843 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-19 22:04:02,007 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-19 22:04:02,008 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-19 22:04:02,008 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-19 22:04:02,009 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-19 22:04:02,040 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-19 22:04:02,040 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-19 22:04:02,040 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-19 22:04:02,041 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-19 22:04:02,071 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-19 22:04:02,071 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-19 22:04:02,071 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-19 22:04:02,072 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-19 22:04:02,104 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-19 22:04:02,105 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-19 22:04:02,105 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-19 22:04:02,105 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-19 22:04:02,135 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-19 22:04:02,135 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-19 22:04:02,135 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-19 22:04:02,135 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-19 22:04:02,165 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-19 22:04:02,165 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-19 22:04:02,166 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-19 22:04:02,166 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-19 22:05:36,624 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-19 22:05:36,927 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-19 22:05:36,927 [test_audit.py-->line:31]:注册普通用户15801374164成功
INFO 2021-04-19 22:05:37,108 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-19 22:05:37,420 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-19 22:05:37,420 [test_audit.py-->line:47]:注册用户15854375736成功
INFO 2021-04-19 22:05:37,586 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-19 22:05:37,631 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-19 22:05:37,632 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-19 22:05:37,633 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-19 22:05:37,689 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-19 22:05:37,689 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-19 22:05:37,715 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-19 22:05:37,715 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-19 22:05:37,775 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-19 22:05:37,776 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-19 22:05:37,776 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-19 22:05:37,809 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-19 22:05:37,810 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-19 22:05:37,834 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-19 22:05:37,834 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-19 22:05:37,881 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-19 22:05:37,881 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-19 22:05:37,882 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-19 22:05:37,913 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-19 22:05:37,914 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-19 22:05:37,914 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-19 22:05:37,963 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-19 22:05:37,964 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-19 22:05:37,964 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-19 22:05:37,997 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-19 22:05:37,999 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-19 22:05:38,001 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-19 22:05:38,002 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-19 22:05:38,002 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-19 22:05:38,061 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-19 22:05:38,062 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-19 22:05:38,062 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-19 22:05:38,093 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-19 22:05:38,094 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-19 22:05:38,094 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-19 22:05:38,153 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-19 22:05:38,154 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-19 22:05:38,154 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-19 22:05:38,184 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-19 22:05:38,184 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-19 22:05:38,184 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-19 22:05:38,243 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-19 22:05:38,244 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-19 22:05:38,244 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-19 22:05:38,277 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-19 22:05:38,277 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-19 22:05:38,277 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-19 22:05:38,277 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-19 22:05:38,278 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-19 22:05:38,278 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-19 22:05:38,524 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-19 22:05:38,524 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-19 22:05:38,524 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-19 22:05:38,524 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-19 22:05:38,804 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-19 22:05:38,810 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-19 22:05:38,810 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-19 22:05:38,811 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-19 22:05:38,811 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-19 22:05:38,811 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-19 22:05:39,080 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-19 22:05:39,081 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-19 22:05:39,087 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-19 22:05:39,087 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-19 22:05:39,236 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-19 22:05:39,237 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-19 22:05:39,238 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-19 22:05:39,238 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-19 22:05:39,320 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-19 22:05:39,320 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-19 22:05:39,321 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-19 22:05:39,322 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-19 22:05:39,604 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-19 22:05:39,605 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-19 22:05:39,605 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-19 22:05:39,606 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-19 22:05:39,757 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-19 22:05:39,758 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-19 22:05:39,759 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-19 22:05:39,759 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-19 22:05:39,794 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-19 22:05:39,795 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-19 22:05:39,795 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-19 22:05:39,796 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-19 22:05:40,065 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-19 22:05:40,065 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-19 22:05:40,066 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-19 22:05:40,066 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-19 22:05:40,222 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-19 22:05:40,222 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-19 22:05:40,223 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-19 22:05:40,224 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-19 22:05:40,258 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-19 22:05:40,259 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-19 22:05:40,259 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-19 22:05:40,259 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-19 22:05:40,523 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-19 22:05:40,524 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-19 22:05:40,524 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-19 22:05:40,525 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-19 22:05:40,681 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-19 22:05:40,682 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-19 22:05:40,682 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-19 22:05:40,683 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-19 22:05:40,716 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-19 22:05:40,716 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-19 22:05:40,716 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-19 22:05:40,716 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-19 22:05:40,747 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-19 22:05:40,748 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-19 22:05:40,748 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-19 22:05:40,748 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-19 22:05:40,779 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-19 22:05:40,779 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-19 22:05:40,780 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-19 22:05:40,780 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-19 22:05:40,812 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-19 22:05:40,812 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-19 22:05:40,812 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-19 22:05:40,813 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-19 22:05:40,845 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-19 22:05:40,846 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-19 22:05:40,846 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-19 22:05:40,847 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-19 22:05:40,847 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-19 22:05:40,848 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-19 22:05:40,885 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-19 22:05:40,886 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-19 22:09:14,665 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-19 22:09:14,977 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-19 22:09:14,978 [test_audit.py-->line:31]:注册普通用户15888675536成功
INFO 2021-04-19 22:09:15,157 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-19 22:09:15,449 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-19 22:09:15,449 [test_audit.py-->line:47]:注册用户15811746709成功
INFO 2021-04-19 22:09:15,618 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-19 22:09:15,682 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-19 22:09:15,683 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-19 22:09:15,683 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-19 22:09:15,727 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-19 22:09:15,728 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-19 22:09:15,751 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-19 22:09:15,751 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-19 22:09:15,791 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-19 22:09:15,791 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-19 22:09:15,791 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-19 22:09:15,814 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-19 22:09:15,814 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-19 22:09:15,840 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-19 22:09:15,840 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-19 22:09:15,896 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-19 22:09:15,896 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-19 22:09:15,896 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-19 22:09:15,918 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-19 22:09:15,918 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-19 22:09:15,919 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-19 22:09:15,973 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-19 22:09:15,973 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-19 22:09:15,974 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-19 22:09:15,996 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-19 22:09:15,996 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-19 22:09:15,997 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-19 22:09:15,997 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-19 22:09:15,997 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-19 22:09:16,041 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-19 22:09:16,041 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-19 22:09:16,041 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-19 22:09:16,062 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-19 22:09:16,062 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-19 22:09:16,062 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-19 22:09:16,101 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-19 22:09:16,102 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-19 22:09:16,102 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-19 22:09:16,122 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-19 22:09:16,122 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-19 22:09:16,122 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-19 22:09:16,179 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-19 22:09:16,179 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-19 22:09:16,179 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-19 22:09:16,200 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-19 22:09:16,200 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-19 22:09:16,200 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-19 22:09:16,201 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-19 22:09:16,201 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-19 22:09:16,201 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-19 22:09:16,468 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-19 22:09:16,468 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-19 22:09:16,468 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-19 22:09:16,468 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-19 22:09:16,753 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-19 22:09:16,755 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-19 22:09:16,755 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-19 22:09:16,755 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-19 22:09:16,755 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-19 22:09:16,755 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-19 22:09:17,012 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-19 22:09:17,012 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-19 22:09:17,013 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-19 22:09:17,013 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-19 22:09:17,169 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-19 22:09:17,169 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-19 22:09:17,170 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-19 22:09:17,170 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-19 22:09:17,210 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-19 22:09:17,210 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-19 22:09:17,210 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-19 22:09:17,211 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-19 22:09:17,485 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-19 22:09:17,485 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-19 22:09:17,485 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-19 22:09:17,485 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-19 22:09:17,630 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-19 22:09:17,630 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-19 22:09:17,631 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-19 22:09:17,631 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-19 22:09:17,657 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-19 22:09:17,657 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-19 22:09:17,657 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-19 22:09:17,657 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-19 22:09:17,915 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-19 22:09:17,916 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-19 22:09:17,916 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-19 22:09:17,916 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-19 22:09:18,060 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-19 22:09:18,060 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-19 22:09:18,061 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-19 22:09:18,061 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-19 22:09:18,086 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-19 22:09:18,086 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-19 22:09:18,086 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-19 22:09:18,087 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-19 22:09:18,344 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-19 22:09:18,344 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-19 22:09:18,344 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-19 22:09:18,345 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-19 22:09:18,485 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-19 22:09:18,486 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-19 22:09:18,487 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-19 22:09:18,487 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-19 22:09:18,515 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-19 22:09:18,515 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-19 22:09:18,515 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-19 22:09:18,516 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-19 22:09:18,542 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-19 22:09:18,542 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-19 22:09:18,542 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-19 22:09:18,542 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-19 22:09:18,567 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-19 22:09:18,567 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-19 22:09:18,567 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-19 22:09:18,567 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-19 22:09:18,590 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-19 22:09:18,590 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-19 22:09:18,590 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-19 22:09:18,590 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-19 22:09:18,612 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-19 22:09:18,613 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-19 22:09:18,613 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-19 22:09:18,614 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-19 22:09:18,614 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-19 22:09:18,615 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-19 22:09:18,644 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-19 22:09:18,645 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-19 22:09:18,791 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-19 22:09:18,791 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-19 22:09:18,792 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-19 22:09:18,816 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-19 22:09:18,816 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-19 22:09:18,816 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-19 22:09:18,816 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-19 22:09:18,852 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-19 22:09:18,853 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-19 22:09:19,026 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-19 22:09:19,026 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-19 22:09:19,026 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-19 22:09:19,026 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-19 22:09:19,027 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-19 22:09:19,283 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-19 22:09:19,283 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-19 22:09:19,392 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-19 22:09:19,393 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-19 22:09:19,394 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-19 22:09:19,542 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-19 22:09:19,542 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-19 22:09:19,543 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-19 22:09:19,543 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-19 22:09:19,565 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-19 22:09:19,565 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-19 22:09:19,566 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-19 22:09:19,566 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-19 22:09:19,824 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-19 22:09:19,825 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-19 22:09:19,825 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-19 22:09:19,825 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-19 22:09:19,988 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-19 22:09:19,988 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-19 22:09:19,989 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-19 22:09:19,989 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-19 22:09:20,012 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-19 22:09:20,012 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-19 22:09:20,012 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-19 22:09:20,012 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-19 22:09:20,269 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-19 22:09:20,269 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-19 22:09:20,269 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-19 22:09:20,269 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-19 22:09:20,422 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-19 22:09:20,422 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-19 22:09:20,423 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-19 22:09:20,423 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-19 22:09:20,452 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-19 22:09:20,453 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-19 22:09:20,453 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-19 22:09:20,453 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-19 22:09:20,482 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-19 22:09:20,482 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-19 22:09:20,482 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-19 22:09:20,483 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-19 22:09:20,483 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-19 22:09:20,483 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-19 22:09:20,747 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-19 22:09:20,747 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-19 22:09:20,747 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-19 22:09:20,748 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-19 22:09:20,892 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-19 22:09:20,892 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-19 22:09:20,893 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-19 22:09:20,893 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-19 22:09:20,917 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-19 22:09:20,918 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-19 22:09:20,918 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-19 22:09:20,918 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-19 22:09:21,183 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-19 22:09:21,183 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-19 22:09:21,365 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-19 22:09:21,365 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-19 22:09:21,365 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-19 22:09:21,530 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-19 22:09:21,531 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-19 22:09:21,531 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-19 22:09:21,532 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-19 22:09:21,567 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-19 22:09:21,567 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-19 22:09:21,567 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-19 22:09:21,568 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-19 22:09:21,568 [test_recharge.py-->line:24]:=========充值接口开始测试==========
INFO 2021-04-19 22:09:21,855 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-19 22:09:21,855 [test_recharge.py-->line:32]:注册用户15842560819成功
INFO 2021-04-19 22:09:22,051 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-19 22:09:22,051 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-19 22:09:22,074 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-19 22:09:22,074 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-19 22:09:22,098 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-19 22:09:22,098 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-19 22:09:22,099 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-19 22:09:22,123 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-19 22:09:22,124 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-19 22:09:22,149 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-19 22:09:22,149 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-19 22:09:22,149 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-19 22:09:22,178 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-19 22:09:22,178 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-19 22:09:22,202 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-19 22:09:22,203 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-19 22:09:22,203 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-19 22:09:22,230 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-19 22:09:22,230 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-19 22:09:22,254 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-19 22:09:22,254 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-19 22:09:22,254 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-19 22:09:22,275 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-19 22:09:22,275 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-19 22:09:22,275 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-19 22:09:22,276 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-19 22:09:22,295 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-19 22:09:22,295 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-19 22:09:22,295 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-19 22:09:22,296 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-19 22:09:22,321 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-19 22:09:22,321 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-19 22:09:22,322 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-19 22:09:22,322 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-19 22:09:22,322 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000374601, 'leave_amount': 503553.68, 'mobile_phone': '15842560819', 'reg_name': '小柠檬', 'reg_time': '2021-04-19 22:09:21.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-19 22:09:22,323 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-19 22:09:22,346 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-19 22:09:22,347 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-19 22:09:22,347 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-19 22:09:22,348 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-19 22:09:22,371 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-19 22:09:22,372 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-19 22:09:22,372 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-19 22:09:22,372 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-19 22:09:22,372 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000374601, 'leave_amount': 503553.68, 'mobile_phone': '15842560819', 'reg_name': '小柠檬', 'reg_time': '2021-04-19 22:09:21.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-19 22:09:22,373 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-19 22:09:22,397 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-19 22:09:22,397 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-19 22:09:22,397 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-19 22:09:22,398 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-19 22:09:22,418 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-19 22:09:22,419 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-19 22:09:22,419 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-19 22:09:22,419 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-19 22:09:22,441 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-19 22:09:22,441 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-19 22:09:22,441 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-19 22:09:22,442 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-19 22:09:22,461 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-19 22:09:22,462 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-19 22:09:22,462 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-19 22:09:22,462 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-19 22:09:22,481 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-19 22:09:22,481 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-19 22:09:22,481 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-19 22:09:22,481 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-19 22:09:22,481 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-19 22:09:22,481 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-19 22:09:22,743 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-19 22:09:22,743 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-19 22:09:22,880 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-19 22:09:22,880 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-19 22:09:22,881 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-19 22:09:23,146 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-19 22:09:23,146 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-19 22:09:23,271 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-19 22:09:23,271 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-19 22:09:23,271 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-19 22:09:23,529 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-19 22:09:23,529 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-19 22:09:23,641 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-19 22:09:23,641 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-19 22:09:23,642 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-19 22:09:23,661 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-19 22:09:23,661 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-19 22:09:23,661 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-19 22:09:23,661 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-19 22:09:23,681 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-19 22:09:23,681 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-19 22:09:23,681 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-19 22:09:23,681 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-19 22:09:23,708 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-19 22:09:23,709 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-19 22:09:23,709 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-19 22:09:23,709 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-19 22:09:23,730 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-19 22:09:23,730 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-19 22:09:23,730 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-19 22:09:23,731 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-19 22:09:23,876 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-19 22:09:23,876 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-19 22:09:23,876 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-19 22:09:23,877 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-19 22:09:23,897 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-19 22:09:23,898 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-19 22:09:23,898 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-19 22:09:23,898 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-19 22:09:23,922 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-19 22:09:23,923 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-19 22:09:23,923 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-19 22:09:23,923 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-19 22:09:23,942 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-19 22:09:23,943 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-19 22:09:23,943 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-19 22:09:23,943 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-19 22:09:23,962 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-19 22:09:23,962 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-19 22:09:23,962 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-19 22:09:23,962 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-19 22:09:23,983 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-19 22:09:23,984 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-19 22:09:23,984 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-19 22:09:23,984 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-20 19:35:35,638 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-20 19:35:35,971 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 19:35:35,972 [test_recharge.py-->line:33]:注册用户15806903698成功
INFO 2021-04-20 19:35:36,145 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 19:35:36,147 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-20 19:35:36,206 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-20 19:35:36,206 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-20 19:35:36,224 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-20 19:35:36,224 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-20 19:35:36,225 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-20 19:35:36,261 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-20 19:35:36,261 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-20 19:35:36,278 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-20 19:35:36,279 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-20 19:35:36,280 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-20 19:35:36,319 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-20 19:35:36,320 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-20 19:35:36,337 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-20 19:35:36,337 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-20 19:35:36,337 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-20 19:35:36,370 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-20 19:35:36,370 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-20 19:35:36,387 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-20 19:35:36,387 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-20 19:35:36,388 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-20 19:35:36,415 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-20 19:35:36,416 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-20 19:35:36,416 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-20 19:35:36,416 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-20 19:35:36,445 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-20 19:35:36,445 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-20 19:35:36,445 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-20 19:35:36,445 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-20 19:35:36,477 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-20 19:35:36,478 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 19:35:36,480 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-20 19:35:36,480 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 19:35:36,480 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000375896, 'leave_amount': 503553.68, 'mobile_phone': '15806903698', 'reg_name': '小柠檬', 'reg_time': '2021-04-20 19:35:35.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 19:35:36,484 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-20 19:35:36,512 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-20 19:35:36,513 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-20 19:35:36,513 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-20 19:35:36,513 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-20 19:35:36,545 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-20 19:35:36,545 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 19:35:36,545 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-20 19:35:36,545 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 19:35:36,545 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000375896, 'leave_amount': 503553.68, 'mobile_phone': '15806903698', 'reg_name': '小柠檬', 'reg_time': '2021-04-20 19:35:35.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 19:35:36,547 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-20 19:35:36,575 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-20 19:35:36,575 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-20 19:35:36,575 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-20 19:35:36,575 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-20 19:35:36,605 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-20 19:35:36,605 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-20 19:35:36,605 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-20 19:35:36,606 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-20 19:35:36,634 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-20 19:35:36,634 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-20 19:35:36,635 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-20 19:35:36,635 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-20 19:35:36,663 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-20 19:35:36,663 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-20 19:35:36,663 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-20 19:35:36,664 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-20 19:35:36,692 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-20 19:35:36,692 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-20 19:35:36,693 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-20 19:35:36,693 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-20 20:07:23,688 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-20 20:07:24,102 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 20:07:24,102 [test_audit.py-->line:31]:注册普通用户15876711143成功
INFO 2021-04-20 20:07:24,343 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 20:07:24,759 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 20:07:24,759 [test_audit.py-->line:47]:注册用户15835495901成功
INFO 2021-04-20 20:07:25,004 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 20:07:25,059 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:07:25,059 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:07:25,059 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-20 20:07:25,100 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-20 20:07:25,100 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-20 20:07:25,125 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-20 20:07:25,125 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-20 20:07:25,166 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:07:25,167 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:07:25,168 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-20 20:07:25,218 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-20 20:07:25,218 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-20 20:07:25,243 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-20 20:07:25,243 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-20 20:07:25,286 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:07:25,286 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:07:25,286 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-20 20:07:25,306 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-20 20:07:25,306 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-20 20:07:25,307 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-20 20:07:25,364 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:07:25,364 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:07:25,364 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-20 20:07:25,386 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-20 20:07:25,387 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-20 20:07:25,393 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-20 20:07:25,393 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 20:07:25,393 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 20:07:25,451 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:07:25,452 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:07:25,453 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-20 20:07:25,477 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-20 20:07:25,477 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-20 20:07:25,477 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-20 20:07:25,532 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:07:25,532 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:07:25,532 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-20 20:07:25,552 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-20 20:07:25,552 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-20 20:07:25,553 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-20 20:07:25,610 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:07:25,611 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:07:25,611 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-20 20:07:25,635 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-20 20:07:25,635 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-20 20:07:25,635 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-20 20:07:25,635 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-20 20:07:25,635 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-20 20:07:25,635 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-20 20:07:25,997 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-20 20:07:25,998 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-20 20:07:25,999 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-20 20:07:25,999 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-20 20:07:26,331 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-20 20:07:26,332 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-20 20:07:26,332 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-20 20:07:26,332 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-20 20:07:26,332 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-20 20:07:26,332 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 20:07:26,722 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-20 20:07:26,723 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-20 20:07:26,723 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:07:26,724 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 20:07:26,944 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-20 20:07:26,944 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-20 20:07:26,945 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:07:26,945 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-20 20:07:27,002 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-20 20:07:27,002 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-20 20:07:27,002 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-20 20:07:27,002 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-20 20:07:27,399 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-20 20:07:27,400 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-20 20:07:27,400 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-20 20:07:27,400 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-20 20:07:27,626 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-20 20:07:27,627 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-20 20:07:27,627 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-20 20:07:27,627 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-20 20:07:27,657 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-20 20:07:27,657 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-20 20:07:27,657 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-20 20:07:27,657 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-20 20:07:28,046 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-20 20:07:28,047 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-20 20:07:28,047 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-20 20:07:28,047 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-20 20:07:28,267 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-20 20:07:28,269 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-20 20:07:28,271 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-20 20:07:28,273 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-20 20:07:28,305 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-20 20:07:28,305 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-20 20:07:28,305 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-20 20:07:28,305 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:07:28,694 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-20 20:07:28,694 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:07:28,694 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:07:28,695 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:07:28,840 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-20 20:07:28,840 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:07:28,841 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:07:28,841 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-20 20:07:28,865 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-20 20:07:28,865 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-20 20:07:28,865 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-20 20:07:28,866 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-20 20:07:28,889 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-20 20:07:28,889 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-20 20:07:28,890 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-20 20:07:28,890 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-20 20:07:28,911 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-20 20:07:28,911 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-20 20:07:28,911 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-20 20:07:28,912 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-20 20:07:28,933 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-20 20:07:28,933 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-20 20:07:28,933 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-20 20:07:28,933 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-20 20:07:28,953 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-20 20:07:28,954 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-20 20:07:28,955 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-20 20:07:28,955 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-20 20:07:28,955 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 20:07:28,956 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-20 20:07:28,984 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-20 20:07:28,984 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-20 20:07:29,173 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-20 20:07:29,173 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-20 20:07:29,174 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-20 20:07:29,198 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-20 20:07:29,199 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-20 20:07:29,199 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-20 20:07:29,200 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-20 20:07:29,242 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-20 20:07:29,242 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-20 20:07:29,462 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-20 20:07:29,463 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-20 20:07:29,463 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-20 20:07:29,463 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-20 20:07:29,463 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 20:07:29,852 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-20 20:07:29,852 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-20 20:07:30,022 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-20 20:07:30,023 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:07:30,023 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 20:07:30,243 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-20 20:07:30,243 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-20 20:07:30,243 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:07:30,243 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-20 20:07:30,266 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-20 20:07:30,266 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-20 20:07:30,266 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-20 20:07:30,266 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:07:30,654 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-20 20:07:30,654 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:07:30,654 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:07:30,654 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:07:30,874 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-20 20:07:30,874 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:07:30,874 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:07:30,875 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-20 20:07:30,897 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-20 20:07:30,898 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-20 20:07:30,898 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-20 20:07:30,898 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-20 20:07:31,286 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-20 20:07:31,287 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-20 20:07:31,287 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:07:31,287 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-20 20:07:31,506 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-20 20:07:31,506 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-20 20:07:31,506 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:07:31,506 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-20 20:07:31,533 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-20 20:07:31,533 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-20 20:07:31,533 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-20 20:07:31,533 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-20 20:07:31,563 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-20 20:07:31,563 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-20 20:07:31,563 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-20 20:07:31,563 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-20 20:07:31,563 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-20 20:07:31,563 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-20 20:07:31,956 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-20 20:07:31,956 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-20 20:07:31,956 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-20 20:07:31,957 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-20 20:07:32,176 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-20 20:07:32,176 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-20 20:07:32,176 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-20 20:07:32,177 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-20 20:07:32,200 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-20 20:07:32,200 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-20 20:07:32,200 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-20 20:07:32,200 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:07:32,588 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-20 20:07:32,588 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:07:32,759 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-20 20:07:32,759 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:07:32,759 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-20 20:07:32,978 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-20 20:07:32,979 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-20 20:07:32,979 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-20 20:07:32,979 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-20 20:07:33,002 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-20 20:07:33,002 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-20 20:07:33,002 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-20 20:07:33,003 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-20 20:07:33,003 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-20 20:07:33,409 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 20:07:33,409 [test_recharge.py-->line:33]:注册用户15820618479成功
INFO 2021-04-20 20:07:33,644 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 20:07:33,644 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-20 20:07:33,671 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-20 20:07:33,671 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-20 20:07:33,695 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-20 20:07:33,696 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-20 20:07:33,696 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-20 20:07:33,720 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-20 20:07:33,721 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-20 20:07:33,746 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-20 20:07:33,746 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-20 20:07:33,746 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-20 20:07:33,772 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-20 20:07:33,772 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-20 20:07:33,797 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-20 20:07:33,797 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-20 20:07:33,797 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-20 20:07:33,822 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-20 20:07:33,822 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-20 20:07:33,847 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-20 20:07:33,847 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-20 20:07:33,847 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-20 20:07:33,867 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-20 20:07:33,868 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-20 20:07:33,868 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-20 20:07:33,868 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-20 20:07:33,888 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-20 20:07:33,889 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-20 20:07:33,889 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-20 20:07:33,889 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-20 20:07:33,914 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-20 20:07:33,915 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-20 20:07:33,915 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-20 20:07:33,915 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 20:07:33,915 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000375980, 'leave_amount': 503553.68, 'mobile_phone': '15820618479', 'reg_name': '小柠檬', 'reg_time': '2021-04-20 20:07:33.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 20:07:33,916 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-20 20:07:33,936 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-20 20:07:33,936 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-20 20:07:33,936 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-20 20:07:33,936 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-20 20:07:33,960 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-20 20:07:33,960 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 20:07:33,960 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-20 20:07:33,961 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 20:07:33,961 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000375980, 'leave_amount': 503553.68, 'mobile_phone': '15820618479', 'reg_name': '小柠檬', 'reg_time': '2021-04-20 20:07:33.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 20:07:33,961 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-20 20:07:33,981 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-20 20:07:33,981 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-20 20:07:33,981 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-20 20:07:33,982 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-20 20:07:34,003 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-20 20:07:34,003 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-20 20:07:34,003 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-20 20:07:34,003 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-20 20:07:34,024 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-20 20:07:34,024 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-20 20:07:34,025 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-20 20:07:34,025 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-20 20:07:34,046 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-20 20:07:34,046 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-20 20:07:34,046 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-20 20:07:34,046 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-20 20:07:34,067 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-20 20:07:34,067 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-20 20:07:34,067 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-20 20:07:34,067 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-20 20:07:34,067 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-20 20:07:34,067 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-20 20:07:34,455 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-20 20:07:34,456 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-20 20:07:34,626 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-20 20:07:34,626 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-20 20:07:34,626 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-20 20:07:35,017 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-20 20:07:35,017 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-20 20:07:35,189 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-20 20:07:35,189 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-20 20:07:35,189 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-20 20:07:35,579 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-20 20:07:35,580 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-20 20:07:35,751 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-20 20:07:35,751 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-20 20:07:35,751 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-20 20:07:35,772 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-20 20:07:35,772 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-20 20:07:35,772 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-20 20:07:35,772 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-20 20:07:35,791 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-20 20:07:35,792 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-20 20:07:35,792 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-20 20:07:35,792 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-20 20:07:35,811 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-20 20:07:35,812 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-20 20:07:35,812 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-20 20:07:35,812 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-20 20:07:35,832 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-20 20:07:35,833 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-20 20:07:35,833 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-20 20:07:35,833 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-20 20:07:36,049 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-20 20:07:36,049 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-20 20:07:36,049 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-20 20:07:36,049 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-20 20:07:36,069 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-20 20:07:36,070 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-20 20:07:36,070 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-20 20:07:36,070 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-20 20:07:36,090 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-20 20:07:36,090 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-20 20:07:36,090 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-20 20:07:36,090 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-20 20:07:36,110 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-20 20:07:36,110 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-20 20:07:36,110 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-20 20:07:36,110 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-20 20:07:36,131 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-20 20:07:36,131 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-20 20:07:36,132 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-20 20:07:36,132 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-20 20:07:36,158 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-20 20:07:36,159 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-20 20:07:36,159 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-20 20:07:36,160 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-20 20:09:33,047 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-20 20:09:33,418 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 20:09:33,418 [test_audit.py-->line:31]:注册普通用户15806859289成功
INFO 2021-04-20 20:09:33,596 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 20:09:33,891 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 20:09:33,891 [test_audit.py-->line:47]:注册用户15817921403成功
INFO 2021-04-20 20:09:34,070 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 20:09:34,110 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:09:34,111 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:09:34,111 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-20 20:09:34,170 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-20 20:09:34,170 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-20 20:09:34,201 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-20 20:09:34,201 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-20 20:09:34,243 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:09:34,243 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:09:34,243 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-20 20:09:34,273 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-20 20:09:34,273 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-20 20:09:34,305 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-20 20:09:34,305 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-20 20:09:34,358 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:09:34,358 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:09:34,358 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-20 20:09:34,385 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-20 20:09:34,385 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-20 20:09:34,385 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-20 20:09:34,433 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:09:34,434 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:09:34,434 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-20 20:09:34,464 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-20 20:09:34,465 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-20 20:09:34,466 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-20 20:09:34,466 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 20:09:34,466 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 20:09:34,507 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:09:34,507 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:09:34,507 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-20 20:09:34,535 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-20 20:09:34,535 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-20 20:09:34,536 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-20 20:09:34,590 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:09:34,590 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:09:34,590 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-20 20:09:34,617 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-20 20:09:34,617 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-20 20:09:34,618 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-20 20:09:34,672 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:09:34,673 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:09:34,673 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-20 20:09:34,704 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-20 20:09:34,705 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-20 20:09:34,705 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-20 20:09:34,706 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-20 20:09:34,706 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-20 20:09:34,707 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-20 20:09:34,978 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-20 20:09:34,978 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-20 20:09:34,978 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-20 20:09:34,978 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-20 20:09:35,294 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-20 20:09:35,295 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-20 20:09:35,296 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-20 20:09:35,296 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-20 20:09:35,296 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-20 20:09:35,296 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 20:09:35,568 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-20 20:09:35,569 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-20 20:09:35,569 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:09:35,569 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 20:09:35,732 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-20 20:09:35,733 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-20 20:09:35,734 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:09:35,735 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-20 20:09:35,795 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-20 20:09:35,795 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-20 20:09:35,795 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-20 20:09:35,795 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-20 20:09:36,081 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-20 20:09:36,082 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-20 20:09:36,082 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-20 20:09:36,082 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-20 20:09:36,234 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-20 20:09:36,235 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-20 20:09:36,237 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-20 20:09:36,238 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-20 20:09:36,276 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-20 20:09:36,276 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-20 20:09:36,276 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-20 20:09:36,276 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-20 20:09:36,557 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-20 20:09:36,557 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-20 20:09:36,557 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-20 20:09:36,557 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-20 20:09:36,720 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-20 20:09:36,721 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-20 20:09:36,721 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-20 20:09:36,721 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-20 20:09:36,754 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-20 20:09:36,755 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-20 20:09:36,756 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-20 20:09:36,757 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:09:37,030 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-20 20:09:37,030 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:09:37,031 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:09:37,031 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:09:37,180 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-20 20:09:37,181 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:09:37,181 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:09:37,181 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-20 20:09:37,214 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-20 20:09:37,214 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-20 20:09:37,214 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-20 20:09:37,215 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-20 20:09:37,245 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-20 20:09:37,245 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-20 20:09:37,245 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-20 20:09:37,245 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-20 20:09:37,273 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-20 20:09:37,274 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-20 20:09:37,274 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-20 20:09:37,274 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-20 20:09:37,302 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-20 20:09:37,302 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-20 20:09:37,302 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-20 20:09:37,302 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-20 20:09:37,330 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-20 20:09:37,331 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-20 20:09:37,331 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-20 20:09:37,331 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-20 20:09:37,331 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 20:09:37,332 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-20 20:09:37,368 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-20 20:09:37,368 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-20 20:09:37,533 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-20 20:09:37,533 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-20 20:09:37,534 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-20 20:09:37,565 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-20 20:09:37,565 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-20 20:09:37,566 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-20 20:09:37,566 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-20 20:09:37,610 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-20 20:09:37,611 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-20 20:09:37,824 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-20 20:09:37,824 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-20 20:09:37,824 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-20 20:09:37,824 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-20 20:09:37,824 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 20:09:38,093 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-20 20:09:38,093 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-20 20:09:38,211 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-20 20:09:38,211 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:09:38,211 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 20:09:38,388 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-20 20:09:38,389 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-20 20:09:38,389 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:09:38,389 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-20 20:09:38,419 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-20 20:09:38,419 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-20 20:09:38,419 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-20 20:09:38,420 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:09:38,768 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-20 20:09:38,768 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:09:38,768 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:09:38,768 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:09:38,997 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-20 20:09:38,997 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:09:38,997 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:09:38,998 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-20 20:09:39,029 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-20 20:09:39,029 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-20 20:09:39,029 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-20 20:09:39,029 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-20 20:09:39,311 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-20 20:09:39,311 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-20 20:09:39,311 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:09:39,311 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-20 20:09:39,471 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-20 20:09:39,471 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-20 20:09:39,471 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:09:39,472 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-20 20:09:39,503 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-20 20:09:39,503 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-20 20:09:39,504 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-20 20:09:39,504 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-20 20:09:39,539 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-20 20:09:39,539 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-20 20:09:39,539 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-20 20:09:39,539 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-20 20:09:39,539 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-20 20:09:39,539 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-20 20:09:39,824 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-20 20:09:39,825 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-20 20:09:39,825 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-20 20:09:39,825 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-20 20:09:39,981 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-20 20:09:39,981 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-20 20:09:39,981 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-20 20:09:39,982 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-20 20:09:40,012 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-20 20:09:40,012 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-20 20:09:40,012 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-20 20:09:40,012 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:09:40,288 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-20 20:09:40,288 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:09:40,409 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-20 20:09:40,410 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:09:40,410 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-20 20:09:40,570 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-20 20:09:40,570 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-20 20:09:40,570 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-20 20:09:40,570 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-20 20:09:40,601 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-20 20:09:40,601 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-20 20:09:40,601 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-20 20:09:40,601 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-20 20:09:40,601 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-20 20:09:40,887 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 20:09:40,887 [test_recharge.py-->line:33]:注册用户15862120319成功
INFO 2021-04-20 20:09:41,051 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 20:09:41,051 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-20 20:09:41,083 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-20 20:09:41,083 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-20 20:09:41,116 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-20 20:09:41,116 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-20 20:09:41,117 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-20 20:09:41,152 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-20 20:09:41,152 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-20 20:09:41,183 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-20 20:09:41,184 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-20 20:09:41,184 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-20 20:09:41,217 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-20 20:09:41,217 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-20 20:09:41,248 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-20 20:09:41,248 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-20 20:09:41,249 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-20 20:09:41,281 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-20 20:09:41,282 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-20 20:09:41,313 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-20 20:09:41,314 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-20 20:09:41,315 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-20 20:09:41,347 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-20 20:09:41,347 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-20 20:09:41,347 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-20 20:09:41,347 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-20 20:09:41,375 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-20 20:09:41,375 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-20 20:09:41,375 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-20 20:09:41,375 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-20 20:09:41,409 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-20 20:09:41,411 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-20 20:09:41,412 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-20 20:09:41,413 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 20:09:41,413 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000375996, 'leave_amount': 503553.68, 'mobile_phone': '15862120319', 'reg_name': '小柠檬', 'reg_time': '2021-04-20 20:09:40.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 20:09:41,417 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-20 20:09:41,450 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-20 20:09:41,450 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-20 20:09:41,450 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-20 20:09:41,450 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-20 20:09:41,481 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-20 20:09:41,481 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 20:09:41,482 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-20 20:09:41,482 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 20:09:41,482 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000375996, 'leave_amount': 503553.68, 'mobile_phone': '15862120319', 'reg_name': '小柠檬', 'reg_time': '2021-04-20 20:09:40.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 20:09:41,482 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-20 20:09:41,509 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-20 20:09:41,509 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-20 20:09:41,510 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-20 20:09:41,510 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-20 20:09:41,537 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-20 20:09:41,537 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-20 20:09:41,537 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-20 20:09:41,537 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-20 20:09:41,564 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-20 20:09:41,565 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-20 20:09:41,565 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-20 20:09:41,565 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-20 20:09:41,592 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-20 20:09:41,593 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-20 20:09:41,593 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-20 20:09:41,593 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-20 20:09:41,620 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-20 20:09:41,620 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-20 20:09:41,620 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-20 20:09:41,621 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-20 20:09:41,621 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-20 20:09:41,621 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-20 20:09:42,000 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-20 20:09:42,001 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-20 20:09:42,197 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-20 20:09:42,197 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-20 20:09:42,198 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-20 20:09:42,647 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-20 20:09:42,647 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-20 20:09:42,767 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-20 20:09:42,768 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-20 20:09:42,768 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-20 20:09:43,050 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-20 20:09:43,050 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-20 20:09:43,179 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-20 20:09:43,179 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-20 20:09:43,179 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-20 20:09:43,207 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-20 20:09:43,207 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-20 20:09:43,207 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-20 20:09:43,207 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-20 20:09:43,236 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-20 20:09:43,237 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-20 20:09:43,237 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-20 20:09:43,238 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-20 20:09:43,269 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-20 20:09:43,270 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-20 20:09:43,270 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-20 20:09:43,271 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-20 20:09:43,297 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-20 20:09:43,297 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-20 20:09:43,297 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-20 20:09:43,297 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-20 20:09:43,462 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-20 20:09:43,462 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-20 20:09:43,462 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-20 20:09:43,462 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-20 20:09:43,489 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-20 20:09:43,489 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-20 20:09:43,489 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-20 20:09:43,489 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-20 20:09:43,516 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-20 20:09:43,516 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-20 20:09:43,516 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-20 20:09:43,517 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-20 20:09:43,543 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-20 20:09:43,544 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-20 20:09:43,544 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-20 20:09:43,544 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-20 20:09:43,571 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-20 20:09:43,571 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-20 20:09:43,571 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-20 20:09:43,571 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-20 20:09:43,598 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-20 20:09:43,598 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-20 20:09:43,599 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-20 20:09:43,599 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-20 20:13:29,513 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-20 20:13:29,802 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 20:13:29,803 [test_audit.py-->line:31]:注册普通用户15816360725成功
INFO 2021-04-20 20:13:30,039 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 20:13:30,465 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 20:13:30,465 [test_audit.py-->line:47]:注册用户15891613634成功
INFO 2021-04-20 20:13:30,631 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 20:13:30,688 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:13:30,689 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:13:30,690 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-20 20:13:30,739 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-20 20:13:30,740 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-20 20:13:30,758 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-20 20:13:30,758 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-20 20:13:30,798 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:13:30,798 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:13:30,798 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-20 20:13:30,823 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-20 20:13:30,823 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-20 20:13:30,841 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-20 20:13:30,841 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-20 20:13:30,885 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:13:30,885 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:13:30,885 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-20 20:13:30,907 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-20 20:13:30,907 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-20 20:13:30,907 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-20 20:13:30,951 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:13:30,951 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:13:30,951 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-20 20:13:30,976 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-20 20:13:30,976 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-20 20:13:30,977 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-20 20:13:30,977 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 20:13:30,977 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 20:13:31,034 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:13:31,034 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:13:31,034 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-20 20:13:31,057 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-20 20:13:31,058 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-20 20:13:31,058 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-20 20:13:31,110 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:13:31,110 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:13:31,110 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-20 20:13:31,133 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-20 20:13:31,133 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-20 20:13:31,133 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-20 20:13:31,191 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:13:31,191 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:13:31,191 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-20 20:13:31,213 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-20 20:13:31,213 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-20 20:13:31,213 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-20 20:13:31,213 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-20 20:13:31,213 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-20 20:13:31,214 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-20 20:13:31,486 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-20 20:13:31,486 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-20 20:13:31,486 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-20 20:13:31,486 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-20 20:13:31,821 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-20 20:13:31,824 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-20 20:13:31,824 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-20 20:13:31,825 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-20 20:13:31,825 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-20 20:13:31,825 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 20:13:32,111 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-20 20:13:32,112 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-20 20:13:32,113 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:13:32,114 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 20:13:32,258 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-20 20:13:32,258 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-20 20:13:32,258 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:13:32,258 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-20 20:13:32,300 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-20 20:13:32,300 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-20 20:13:32,301 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-20 20:13:32,301 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-20 20:13:32,553 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-20 20:13:32,553 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-20 20:13:32,554 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-20 20:13:32,554 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-20 20:13:32,734 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-20 20:13:32,734 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-20 20:13:32,735 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-20 20:13:32,735 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-20 20:13:32,761 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-20 20:13:32,762 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-20 20:13:32,762 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-20 20:13:32,762 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-20 20:13:33,013 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-20 20:13:33,014 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-20 20:13:33,014 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-20 20:13:33,014 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-20 20:13:33,165 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-20 20:13:33,166 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-20 20:13:33,166 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-20 20:13:33,166 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-20 20:13:33,192 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-20 20:13:33,192 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-20 20:13:33,193 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-20 20:13:33,193 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:13:33,529 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-20 20:13:33,529 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:13:33,530 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:13:33,530 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:13:33,703 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-20 20:13:33,703 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:13:33,703 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:13:33,703 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-20 20:13:33,729 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-20 20:13:33,730 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-20 20:13:33,730 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-20 20:13:33,730 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-20 20:13:33,754 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-20 20:13:33,754 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-20 20:13:33,754 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-20 20:13:33,754 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-20 20:13:33,778 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-20 20:13:33,778 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-20 20:13:33,778 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-20 20:13:33,779 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-20 20:13:33,801 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-20 20:13:33,802 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-20 20:13:33,802 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-20 20:13:33,802 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-20 20:13:33,824 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-20 20:13:33,825 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-20 20:13:33,825 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-20 20:13:33,825 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-20 20:13:33,825 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 20:13:33,826 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-20 20:13:33,861 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-20 20:13:33,861 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-20 20:13:33,991 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-20 20:13:33,992 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-20 20:13:33,992 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-20 20:13:34,018 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-20 20:13:34,018 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-20 20:13:34,018 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-20 20:13:34,018 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-20 20:13:34,058 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-20 20:13:34,058 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-20 20:13:34,211 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-20 20:13:34,211 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-20 20:13:34,211 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-20 20:13:34,211 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-20 20:13:34,211 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 20:13:34,505 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-20 20:13:34,505 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-20 20:13:34,613 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-20 20:13:34,613 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:13:34,614 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 20:13:34,758 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-20 20:13:34,758 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-20 20:13:34,758 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:13:34,759 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-20 20:13:34,783 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-20 20:13:34,784 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-20 20:13:34,784 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-20 20:13:34,784 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:13:35,046 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-20 20:13:35,046 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:13:35,047 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:13:35,047 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:13:35,191 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-20 20:13:35,191 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:13:35,191 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:13:35,192 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-20 20:13:35,216 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-20 20:13:35,216 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-20 20:13:35,216 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-20 20:13:35,216 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-20 20:13:35,468 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-20 20:13:35,468 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-20 20:13:35,468 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:13:35,468 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-20 20:13:35,616 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-20 20:13:35,617 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-20 20:13:35,618 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:13:35,619 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-20 20:13:35,650 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-20 20:13:35,650 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-20 20:13:35,651 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-20 20:13:35,651 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-20 20:13:35,680 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-20 20:13:35,680 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-20 20:13:35,680 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-20 20:13:35,680 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-20 20:13:35,681 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-20 20:13:35,681 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-20 20:13:35,932 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-20 20:13:35,932 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-20 20:13:35,933 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-20 20:13:35,933 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-20 20:13:36,080 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-20 20:13:36,080 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-20 20:13:36,080 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-20 20:13:36,081 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-20 20:13:36,106 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-20 20:13:36,106 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-20 20:13:36,106 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-20 20:13:36,106 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:13:36,356 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-20 20:13:36,356 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:13:36,461 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-20 20:13:36,461 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:13:36,461 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-20 20:13:36,603 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-20 20:13:36,603 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-20 20:13:36,603 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-20 20:13:36,604 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-20 20:13:36,629 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-20 20:13:36,630 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-20 20:13:36,630 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-20 20:13:36,630 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-20 20:13:36,630 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-20 20:13:36,898 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 20:13:36,898 [test_recharge.py-->line:33]:注册用户15824852499成功
INFO 2021-04-20 20:13:37,070 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 20:13:37,071 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-20 20:13:37,097 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-20 20:13:37,098 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-20 20:13:37,116 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-20 20:13:37,116 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-20 20:13:37,116 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-20 20:13:37,143 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-20 20:13:37,143 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-20 20:13:37,161 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-20 20:13:37,161 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-20 20:13:37,161 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-20 20:13:37,188 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-20 20:13:37,188 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-20 20:13:37,205 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-20 20:13:37,206 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-20 20:13:37,206 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-20 20:13:37,232 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-20 20:13:37,232 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-20 20:13:37,251 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-20 20:13:37,251 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-20 20:13:37,251 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-20 20:13:37,273 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-20 20:13:37,273 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-20 20:13:37,273 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-20 20:13:37,274 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-20 20:13:37,296 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-20 20:13:37,296 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-20 20:13:37,296 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-20 20:13:37,297 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-20 20:13:37,323 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-20 20:13:37,323 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-20 20:13:37,323 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-20 20:13:37,324 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 20:13:37,324 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000376011, 'leave_amount': 503553.68, 'mobile_phone': '15824852499', 'reg_name': '小柠檬', 'reg_time': '2021-04-20 20:13:36.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 20:13:37,324 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-20 20:13:37,347 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-20 20:13:37,347 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-20 20:13:37,347 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-20 20:13:37,347 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-20 20:13:37,372 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-20 20:13:37,373 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 20:13:37,373 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-20 20:13:37,373 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 20:13:37,373 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000376011, 'leave_amount': 503553.68, 'mobile_phone': '15824852499', 'reg_name': '小柠檬', 'reg_time': '2021-04-20 20:13:36.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 20:13:37,373 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-20 20:13:37,396 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-20 20:13:37,396 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-20 20:13:37,396 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-20 20:13:37,396 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-20 20:13:37,418 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-20 20:13:37,418 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-20 20:13:37,418 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-20 20:13:37,418 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-20 20:13:37,442 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-20 20:13:37,443 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-20 20:13:37,443 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-20 20:13:37,444 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-20 20:13:37,470 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-20 20:13:37,470 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-20 20:13:37,470 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-20 20:13:37,471 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-20 20:13:37,497 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-20 20:13:37,497 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-20 20:13:37,497 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-20 20:13:37,497 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-20 20:13:37,497 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-20 20:13:37,497 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-20 20:13:37,745 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-20 20:13:37,745 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-20 20:13:37,850 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-20 20:13:37,850 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-20 20:13:37,850 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-20 20:13:38,096 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-20 20:13:38,096 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-20 20:13:38,202 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-20 20:13:38,202 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-20 20:13:38,202 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-20 20:13:38,452 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-20 20:13:38,453 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-20 20:13:38,557 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-20 20:13:38,558 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-20 20:13:38,558 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-20 20:13:38,580 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-20 20:13:38,580 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-20 20:13:38,581 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-20 20:13:38,581 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-20 20:13:38,603 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-20 20:13:38,603 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-20 20:13:38,603 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-20 20:13:38,603 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-20 20:13:38,625 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-20 20:13:38,626 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-20 20:13:38,626 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-20 20:13:38,626 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-20 20:13:38,648 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-20 20:13:38,648 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-20 20:13:38,648 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-20 20:13:38,648 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-20 20:13:38,789 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-20 20:13:38,789 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-20 20:13:38,789 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-20 20:13:38,789 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-20 20:13:38,810 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-20 20:13:38,811 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-20 20:13:38,811 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-20 20:13:38,811 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-20 20:13:38,833 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-20 20:13:38,834 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-20 20:13:38,835 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-20 20:13:38,835 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-20 20:13:38,863 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-20 20:13:38,863 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-20 20:13:38,863 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-20 20:13:38,864 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-20 20:13:38,886 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-20 20:13:38,887 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-20 20:13:38,887 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-20 20:13:38,888 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-20 20:13:38,912 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-20 20:13:38,912 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-20 20:13:38,912 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-20 20:13:38,912 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-20 20:45:18,679 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-20 20:45:18,974 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 20:45:18,974 [test_audit.py-->line:31]:注册普通用户15804120547成功
INFO 2021-04-20 20:45:19,155 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 20:45:19,437 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 20:45:19,437 [test_audit.py-->line:47]:注册用户15873322166成功
INFO 2021-04-20 20:45:19,601 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 20:45:19,650 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:45:19,651 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:45:19,651 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-20 20:45:19,707 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-20 20:45:19,707 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-20 20:45:19,730 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-20 20:45:19,730 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-20 20:45:19,772 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:45:19,772 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:45:19,772 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-20 20:45:19,802 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-20 20:45:19,802 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-20 20:45:19,826 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-20 20:45:19,826 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-20 20:45:19,868 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:45:19,869 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:45:19,869 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-20 20:45:19,897 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-20 20:45:19,897 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-20 20:45:19,897 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-20 20:45:19,953 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:45:19,954 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:45:19,954 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-20 20:45:19,984 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-20 20:45:19,985 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-20 20:45:19,989 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-20 20:45:19,990 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 20:45:19,990 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 20:45:20,045 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:45:20,046 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:45:20,046 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-20 20:45:20,073 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-20 20:45:20,073 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-20 20:45:20,073 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-20 20:45:20,116 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:45:20,117 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:45:20,117 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-20 20:45:20,144 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-20 20:45:20,144 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-20 20:45:20,144 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-20 20:45:20,200 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:45:20,201 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:45:20,201 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-20 20:45:20,229 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-20 20:45:20,229 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-20 20:45:20,229 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-20 20:45:20,229 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-20 20:45:20,229 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-20 20:45:20,229 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-20 20:45:20,562 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-20 20:45:20,563 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-20 20:45:20,563 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-20 20:45:20,563 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-20 20:45:20,901 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-20 20:45:20,903 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-20 20:45:20,903 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-20 20:45:20,903 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-20 20:45:20,903 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-20 20:45:20,903 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 20:45:21,169 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-20 20:45:21,169 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-20 20:45:21,171 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:45:21,171 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 20:45:21,326 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-20 20:45:21,326 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-20 20:45:21,326 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:45:21,326 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-20 20:45:21,381 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-20 20:45:21,381 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-20 20:45:21,382 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-20 20:45:21,382 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-20 20:45:21,644 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-20 20:45:21,644 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-20 20:45:21,644 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-20 20:45:21,644 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-20 20:45:21,794 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-20 20:45:21,795 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-20 20:45:21,797 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-20 20:45:21,797 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-20 20:45:21,837 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-20 20:45:21,838 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-20 20:45:21,838 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-20 20:45:21,839 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-20 20:45:22,104 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-20 20:45:22,104 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-20 20:45:22,105 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-20 20:45:22,105 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-20 20:45:22,255 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-20 20:45:22,255 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-20 20:45:22,255 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-20 20:45:22,255 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-20 20:45:22,288 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-20 20:45:22,288 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-20 20:45:22,289 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-20 20:45:22,289 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:45:22,546 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-20 20:45:22,547 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:45:22,547 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:45:22,547 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:45:22,696 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-20 20:45:22,696 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:45:22,697 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:45:22,697 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-20 20:45:22,727 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-20 20:45:22,727 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-20 20:45:22,728 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-20 20:45:22,728 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-20 20:45:22,757 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-20 20:45:22,757 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-20 20:45:22,757 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-20 20:45:22,758 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-20 20:45:22,786 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-20 20:45:22,787 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-20 20:45:22,787 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-20 20:45:22,787 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-20 20:45:22,816 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-20 20:45:22,816 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-20 20:45:22,816 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-20 20:45:22,817 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-20 20:45:22,846 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-20 20:45:22,846 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-20 20:45:22,847 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-20 20:45:22,847 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-20 20:45:22,847 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 20:45:22,851 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-20 20:45:22,887 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-20 20:45:22,887 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-20 20:45:23,026 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-20 20:45:23,026 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-20 20:45:23,026 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-20 20:45:23,057 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-20 20:45:23,058 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-20 20:45:23,058 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-20 20:45:23,058 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-20 20:45:23,103 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-20 20:45:23,104 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-20 20:45:23,268 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-20 20:45:23,268 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-20 20:45:23,268 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-20 20:45:23,269 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-20 20:45:23,269 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 20:45:23,527 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-20 20:45:23,527 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-20 20:45:23,636 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-20 20:45:23,636 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:45:23,637 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 20:45:23,786 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-20 20:45:23,786 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-20 20:45:23,787 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:45:23,787 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-20 20:45:23,818 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-20 20:45:23,819 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-20 20:45:23,819 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-20 20:45:23,819 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:45:24,092 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-20 20:45:24,092 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:45:24,092 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:45:24,092 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:45:24,250 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-20 20:45:24,250 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:45:24,251 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:45:24,251 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-20 20:45:24,282 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-20 20:45:24,282 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-20 20:45:24,282 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-20 20:45:24,282 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-20 20:45:24,542 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-20 20:45:24,542 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-20 20:45:24,542 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:45:24,543 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-20 20:45:24,710 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-20 20:45:24,710 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-20 20:45:24,710 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:45:24,710 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-20 20:45:24,743 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-20 20:45:24,743 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-20 20:45:24,743 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-20 20:45:24,744 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-20 20:45:24,779 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-20 20:45:24,779 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-20 20:45:24,779 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-20 20:45:24,779 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-20 20:45:24,779 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-20 20:45:24,780 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-20 20:45:25,038 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-20 20:45:25,039 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-20 20:45:25,039 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-20 20:45:25,039 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-20 20:45:25,187 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-20 20:45:25,188 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-20 20:45:25,188 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-20 20:45:25,188 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-20 20:45:25,219 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-20 20:45:25,220 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-20 20:45:25,220 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-20 20:45:25,220 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:45:25,487 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-20 20:45:25,487 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:45:25,595 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-20 20:45:25,595 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:45:25,596 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-20 20:45:25,745 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-20 20:45:25,745 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-20 20:45:25,745 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-20 20:45:25,745 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-20 20:45:25,776 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-20 20:45:25,776 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-20 20:45:25,776 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-20 20:45:25,776 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-20 20:45:25,776 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-20 20:45:26,054 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 20:45:26,054 [test_recharge.py-->line:33]:注册用户15830717325成功
INFO 2021-04-20 20:45:26,225 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 20:45:26,226 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-20 20:45:26,258 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-20 20:45:26,258 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-20 20:45:26,286 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-20 20:45:26,286 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-20 20:45:26,287 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-20 20:45:26,319 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-20 20:45:26,319 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-20 20:45:26,343 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-20 20:45:26,344 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-20 20:45:26,344 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-20 20:45:26,388 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-20 20:45:26,388 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-20 20:45:26,412 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-20 20:45:26,412 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-20 20:45:26,412 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-20 20:45:26,445 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-20 20:45:26,445 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-20 20:45:26,468 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-20 20:45:26,468 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-20 20:45:26,468 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-20 20:45:26,495 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-20 20:45:26,496 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-20 20:45:26,496 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-20 20:45:26,496 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-20 20:45:26,524 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-20 20:45:26,524 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-20 20:45:26,524 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-20 20:45:26,524 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-20 20:45:26,557 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-20 20:45:26,557 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-20 20:45:26,558 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-20 20:45:26,558 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 20:45:26,558 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000376106, 'leave_amount': 503553.68, 'mobile_phone': '15830717325', 'reg_name': '小柠檬', 'reg_time': '2021-04-20 20:45:25.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 20:45:26,559 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-20 20:45:26,587 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-20 20:45:26,587 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-20 20:45:26,587 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-20 20:45:26,587 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-20 20:45:26,618 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-20 20:45:26,619 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 20:45:26,619 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-20 20:45:26,619 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 20:45:26,619 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000376106, 'leave_amount': 503553.68, 'mobile_phone': '15830717325', 'reg_name': '小柠檬', 'reg_time': '2021-04-20 20:45:25.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 20:45:26,619 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-20 20:45:26,647 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-20 20:45:26,647 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-20 20:45:26,647 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-20 20:45:26,647 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-20 20:45:26,676 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-20 20:45:26,676 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-20 20:45:26,677 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-20 20:45:26,677 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-20 20:45:26,705 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-20 20:45:26,705 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-20 20:45:26,705 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-20 20:45:26,705 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-20 20:45:26,735 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-20 20:45:26,735 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-20 20:45:26,735 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-20 20:45:26,735 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-20 20:45:26,764 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-20 20:45:26,764 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-20 20:45:26,764 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-20 20:45:26,764 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-20 20:45:26,764 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-20 20:45:26,764 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-20 20:45:27,024 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-20 20:45:27,025 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-20 20:45:27,134 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-20 20:45:27,134 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-20 20:45:27,134 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-20 20:45:27,392 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-20 20:45:27,392 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-20 20:45:27,501 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-20 20:45:27,502 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-20 20:45:27,502 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-20 20:45:27,760 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-20 20:45:27,760 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-20 20:45:27,869 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-20 20:45:27,869 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-20 20:45:27,869 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-20 20:45:27,896 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-20 20:45:27,896 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-20 20:45:27,896 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-20 20:45:27,897 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-20 20:45:27,926 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-20 20:45:27,926 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-20 20:45:27,926 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-20 20:45:27,926 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-20 20:45:27,954 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-20 20:45:27,954 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-20 20:45:27,954 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-20 20:45:27,954 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-20 20:45:27,981 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-20 20:45:27,982 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-20 20:45:27,982 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-20 20:45:27,982 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-20 20:45:28,131 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-20 20:45:28,131 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-20 20:45:28,132 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-20 20:45:28,133 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-20 20:45:28,167 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-20 20:45:28,167 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-20 20:45:28,167 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-20 20:45:28,168 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-20 20:45:28,195 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-20 20:45:28,195 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-20 20:45:28,195 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-20 20:45:28,195 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-20 20:45:28,222 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-20 20:45:28,222 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-20 20:45:28,222 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-20 20:45:28,222 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-20 20:45:28,250 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-20 20:45:28,250 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-20 20:45:28,250 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-20 20:45:28,251 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-20 20:45:28,279 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-20 20:45:28,279 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-20 20:45:28,279 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-20 20:45:28,279 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-20 20:55:38,992 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-20 20:55:39,309 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 20:55:39,309 [test_audit.py-->line:31]:注册普通用户15843089985成功
INFO 2021-04-20 20:55:39,493 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 20:55:39,788 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 20:55:39,788 [test_audit.py-->line:47]:注册用户15885183489成功
INFO 2021-04-20 20:55:39,957 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 20:55:40,014 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:55:40,014 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:55:40,014 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-20 20:55:40,056 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-20 20:55:40,056 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-20 20:55:40,086 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-20 20:55:40,086 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-20 20:55:40,127 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:55:40,128 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:55:40,128 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-20 20:55:40,152 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-20 20:55:40,152 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-20 20:55:40,182 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-20 20:55:40,182 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-20 20:55:40,235 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:55:40,236 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:55:40,236 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-20 20:55:40,259 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-20 20:55:40,260 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-20 20:55:40,260 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-20 20:55:40,314 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:55:40,315 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:55:40,316 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-20 20:55:40,344 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-20 20:55:40,345 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-20 20:55:40,347 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-20 20:55:40,347 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 20:55:40,347 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 20:55:40,405 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:55:40,406 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:55:40,407 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-20 20:55:40,432 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-20 20:55:40,433 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-20 20:55:40,433 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-20 20:55:40,493 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:55:40,494 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:55:40,494 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-20 20:55:40,515 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-20 20:55:40,515 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-20 20:55:40,515 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-20 20:55:40,559 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:55:40,560 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:55:40,560 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-20 20:55:40,580 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-20 20:55:40,581 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-20 20:55:40,581 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-20 20:55:40,581 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-20 20:55:40,581 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-20 20:55:40,581 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-20 20:55:40,876 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-20 20:55:40,876 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-20 20:55:40,876 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-20 20:55:40,877 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-20 20:55:41,224 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-20 20:55:41,226 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-20 20:55:41,227 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-20 20:55:41,227 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-20 20:55:41,227 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-20 20:55:41,227 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 20:55:41,512 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-20 20:55:41,513 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-20 20:55:41,513 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:55:41,514 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 20:55:41,657 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-20 20:55:41,657 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-20 20:55:41,658 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:55:41,658 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-20 20:55:41,699 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-20 20:55:41,700 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-20 20:55:41,700 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-20 20:55:41,700 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-20 20:55:41,961 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-20 20:55:41,962 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-20 20:55:41,962 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-20 20:55:41,962 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-20 20:55:42,123 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-20 20:55:42,123 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-20 20:55:42,124 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-20 20:55:42,124 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-20 20:55:42,151 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-20 20:55:42,151 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-20 20:55:42,151 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-20 20:55:42,151 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-20 20:55:42,438 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-20 20:55:42,438 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-20 20:55:42,439 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-20 20:55:42,439 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-20 20:55:42,596 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-20 20:55:42,597 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-20 20:55:42,597 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-20 20:55:42,597 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-20 20:55:42,623 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-20 20:55:42,623 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-20 20:55:42,623 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-20 20:55:42,623 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:55:42,935 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-20 20:55:42,935 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:55:42,935 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:55:42,935 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:55:43,094 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-20 20:55:43,094 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:55:43,095 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:55:43,095 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-20 20:55:43,124 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-20 20:55:43,124 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-20 20:55:43,124 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-20 20:55:43,124 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-20 20:55:43,151 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-20 20:55:43,151 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-20 20:55:43,151 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-20 20:55:43,151 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-20 20:55:43,172 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-20 20:55:43,173 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-20 20:55:43,173 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-20 20:55:43,173 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-20 20:55:43,197 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-20 20:55:43,198 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-20 20:55:43,199 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-20 20:55:43,200 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-20 20:55:43,231 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-20 20:55:43,232 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-20 20:55:43,232 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-20 20:55:43,232 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-20 20:55:43,232 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 20:55:43,233 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-20 20:55:43,262 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-20 20:55:43,263 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-20 20:55:43,474 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-20 20:55:43,475 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-20 20:55:43,475 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-20 20:55:43,513 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-20 20:55:43,515 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-20 20:55:43,515 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-20 20:55:43,516 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-20 20:55:43,562 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-20 20:55:43,563 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-20 20:55:43,825 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-20 20:55:43,825 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-20 20:55:43,825 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-20 20:55:43,826 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-20 20:55:43,826 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 20:55:44,101 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-20 20:55:44,103 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-20 20:55:44,229 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-20 20:55:44,230 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:55:44,232 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 20:55:44,396 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-20 20:55:44,397 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-20 20:55:44,400 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:55:44,401 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-20 20:55:44,430 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-20 20:55:44,431 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-20 20:55:44,432 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-20 20:55:44,432 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:55:44,721 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-20 20:55:44,721 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:55:44,722 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:55:44,723 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:55:44,882 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-20 20:55:44,882 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:55:44,882 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:55:44,883 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-20 20:55:44,907 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-20 20:55:44,907 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-20 20:55:44,908 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-20 20:55:44,908 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-20 20:55:45,192 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-20 20:55:45,192 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-20 20:55:45,192 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:55:45,193 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-20 20:55:45,350 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-20 20:55:45,350 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-20 20:55:45,350 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:55:45,351 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-20 20:55:45,375 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-20 20:55:45,375 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-20 20:55:45,376 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-20 20:55:45,376 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-20 20:55:45,405 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-20 20:55:45,406 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-20 20:55:45,406 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-20 20:55:45,406 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-20 20:55:45,406 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-20 20:55:45,406 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-20 20:55:45,689 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-20 20:55:45,689 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-20 20:55:45,689 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-20 20:55:45,689 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-20 20:55:45,845 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-20 20:55:45,845 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-20 20:55:45,845 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-20 20:55:45,845 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-20 20:55:45,870 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-20 20:55:45,870 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-20 20:55:45,870 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-20 20:55:45,870 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:55:46,156 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-20 20:55:46,156 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:55:46,273 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-20 20:55:46,273 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:55:46,273 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-20 20:55:46,433 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-20 20:55:46,434 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-20 20:55:46,434 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-20 20:55:46,434 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-20 20:55:46,457 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-20 20:55:46,457 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-20 20:55:46,458 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-20 20:55:46,458 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-20 20:55:46,458 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-20 20:55:46,765 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 20:55:46,765 [test_recharge.py-->line:33]:注册用户15817396617成功
INFO 2021-04-20 20:55:46,952 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 20:55:46,952 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-20 20:55:46,979 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-20 20:55:46,979 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-20 20:55:47,014 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-20 20:55:47,014 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-20 20:55:47,014 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-20 20:55:47,040 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-20 20:55:47,040 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-20 20:55:47,070 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-20 20:55:47,070 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-20 20:55:47,070 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-20 20:55:47,096 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-20 20:55:47,096 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-20 20:55:47,127 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-20 20:55:47,128 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-20 20:55:47,128 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-20 20:55:47,158 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-20 20:55:47,158 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-20 20:55:47,189 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-20 20:55:47,189 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-20 20:55:47,189 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-20 20:55:47,211 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-20 20:55:47,211 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-20 20:55:47,211 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-20 20:55:47,211 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-20 20:55:47,233 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-20 20:55:47,233 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-20 20:55:47,233 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-20 20:55:47,233 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-20 20:55:47,259 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-20 20:55:47,260 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-20 20:55:47,261 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-20 20:55:47,261 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 20:55:47,261 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000376125, 'leave_amount': 503553.68, 'mobile_phone': '15817396617', 'reg_name': '小柠檬', 'reg_time': '2021-04-20 20:55:46.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 20:55:47,262 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-20 20:55:47,284 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-20 20:55:47,284 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-20 20:55:47,284 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-20 20:55:47,285 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-20 20:55:47,315 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-20 20:55:47,315 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 20:55:47,316 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-20 20:55:47,316 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 20:55:47,316 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000376125, 'leave_amount': 503553.68, 'mobile_phone': '15817396617', 'reg_name': '小柠檬', 'reg_time': '2021-04-20 20:55:46.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 20:55:47,316 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-20 20:55:47,338 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-20 20:55:47,338 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-20 20:55:47,338 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-20 20:55:47,338 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-20 20:55:47,361 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-20 20:55:47,361 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-20 20:55:47,361 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-20 20:55:47,361 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-20 20:55:47,383 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-20 20:55:47,383 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-20 20:55:47,383 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-20 20:55:47,383 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-20 20:55:47,404 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-20 20:55:47,404 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-20 20:55:47,404 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-20 20:55:47,404 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-20 20:55:47,426 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-20 20:55:47,427 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-20 20:55:47,427 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-20 20:55:47,427 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-20 20:55:47,428 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-20 20:55:47,428 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-20 20:55:47,690 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-20 20:55:47,690 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-20 20:55:47,825 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-20 20:55:47,825 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-20 20:55:47,826 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-20 20:55:48,097 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-20 20:55:48,097 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-20 20:55:48,216 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-20 20:55:48,217 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-20 20:55:48,217 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-20 20:55:48,496 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-20 20:55:48,496 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-20 20:55:48,655 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-20 20:55:48,656 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-20 20:55:48,657 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-20 20:55:48,684 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-20 20:55:48,685 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-20 20:55:48,685 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-20 20:55:48,685 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-20 20:55:48,706 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-20 20:55:48,706 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-20 20:55:48,706 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-20 20:55:48,706 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-20 20:55:48,729 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-20 20:55:48,730 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-20 20:55:48,731 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-20 20:55:48,731 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-20 20:55:48,758 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-20 20:55:48,759 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-20 20:55:48,759 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-20 20:55:48,760 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-20 20:55:48,912 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-20 20:55:48,913 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-20 20:55:48,913 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-20 20:55:48,913 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-20 20:55:48,933 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-20 20:55:48,933 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-20 20:55:48,933 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-20 20:55:48,934 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-20 20:55:48,955 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-20 20:55:48,955 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-20 20:55:48,955 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-20 20:55:48,956 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-20 20:55:48,980 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-20 20:55:48,981 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-20 20:55:48,981 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-20 20:55:48,982 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-20 20:55:49,006 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-20 20:55:49,007 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-20 20:55:49,008 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-20 20:55:49,009 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-20 20:55:49,038 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-20 20:55:49,038 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-20 20:55:49,038 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-20 20:55:49,038 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-20 20:58:12,133 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-20 20:58:12,486 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 20:58:12,486 [test_audit.py-->line:31]:注册普通用户15828357063成功
INFO 2021-04-20 20:58:12,665 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 20:58:12,953 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 20:58:12,954 [test_audit.py-->line:47]:注册用户15835971252成功
INFO 2021-04-20 20:58:13,120 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 20:58:13,161 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:58:13,161 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:58:13,161 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-20 20:58:13,205 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-20 20:58:13,205 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-20 20:58:13,229 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-20 20:58:13,229 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-20 20:58:13,285 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:58:13,285 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:58:13,285 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-20 20:58:13,313 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-20 20:58:13,313 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-20 20:58:13,337 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-20 20:58:13,337 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-20 20:58:13,380 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:58:13,381 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:58:13,381 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-20 20:58:13,402 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-20 20:58:13,402 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-20 20:58:13,402 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-20 20:58:13,457 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:58:13,457 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:58:13,458 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-20 20:58:13,481 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-20 20:58:13,482 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-20 20:58:13,483 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-20 20:58:13,483 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 20:58:13,483 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 20:58:13,525 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:58:13,526 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:58:13,526 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-20 20:58:13,549 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-20 20:58:13,549 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-20 20:58:13,549 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-20 20:58:13,593 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:58:13,593 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:58:13,593 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-20 20:58:13,615 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-20 20:58:13,615 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-20 20:58:13,615 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-20 20:58:13,673 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:58:13,674 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:58:13,674 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-20 20:58:13,695 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-20 20:58:13,695 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-20 20:58:13,695 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-20 20:58:13,696 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-20 20:58:13,696 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-20 20:58:13,696 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-20 20:58:13,983 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-20 20:58:13,983 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-20 20:58:13,983 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-20 20:58:13,983 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-20 20:58:14,315 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-20 20:58:14,317 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-20 20:58:14,317 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-20 20:58:14,317 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-20 20:58:14,318 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-20 20:58:14,318 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 20:58:14,575 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-20 20:58:14,575 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-20 20:58:14,576 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:58:14,576 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 20:58:14,721 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-20 20:58:14,721 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-20 20:58:14,722 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:58:14,722 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-20 20:58:14,765 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-20 20:58:14,765 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-20 20:58:14,765 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-20 20:58:14,765 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-20 20:58:15,038 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-20 20:58:15,038 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-20 20:58:15,039 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-20 20:58:15,039 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-20 20:58:15,198 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-20 20:58:15,198 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-20 20:58:15,199 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-20 20:58:15,199 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-20 20:58:15,226 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-20 20:58:15,226 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-20 20:58:15,226 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-20 20:58:15,226 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-20 20:58:15,496 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-20 20:58:15,496 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-20 20:58:15,496 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-20 20:58:15,496 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-20 20:58:15,663 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-20 20:58:15,663 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-20 20:58:15,663 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-20 20:58:15,664 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-20 20:58:15,691 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-20 20:58:15,692 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-20 20:58:15,692 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-20 20:58:15,693 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:58:15,949 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-20 20:58:15,949 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:58:15,949 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:58:15,950 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:58:16,129 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-20 20:58:16,129 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:58:16,129 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:58:16,129 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-20 20:58:16,155 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-20 20:58:16,156 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-20 20:58:16,156 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-20 20:58:16,157 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-20 20:58:16,189 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-20 20:58:16,190 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-20 20:58:16,190 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-20 20:58:16,191 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-20 20:58:16,220 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-20 20:58:16,221 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-20 20:58:16,221 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-20 20:58:16,221 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-20 20:58:16,245 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-20 20:58:16,245 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-20 20:58:16,245 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-20 20:58:16,246 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-20 20:58:16,267 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-20 20:58:16,267 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-20 20:58:16,268 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-20 20:58:16,268 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-20 20:58:16,268 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 20:58:16,268 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-20 20:58:16,297 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-20 20:58:16,297 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-20 20:58:16,502 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-20 20:58:16,502 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-20 20:58:16,503 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-20 20:58:16,529 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-20 20:58:16,529 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-20 20:58:16,529 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-20 20:58:16,530 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-20 20:58:16,571 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-20 20:58:16,571 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-20 20:58:16,748 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-20 20:58:16,748 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-20 20:58:16,748 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-20 20:58:16,748 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-20 20:58:16,749 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 20:58:17,037 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-20 20:58:17,037 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-20 20:58:17,165 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-20 20:58:17,165 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:58:17,165 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 20:58:17,334 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-20 20:58:17,334 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-20 20:58:17,335 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:58:17,336 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-20 20:58:17,363 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-20 20:58:17,363 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-20 20:58:17,363 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-20 20:58:17,363 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:58:17,637 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-20 20:58:17,638 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:58:17,638 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:58:17,638 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:58:17,790 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-20 20:58:17,790 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:58:17,790 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:58:17,790 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-20 20:58:17,815 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-20 20:58:17,815 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-20 20:58:17,815 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-20 20:58:17,815 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-20 20:58:18,077 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-20 20:58:18,077 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-20 20:58:18,078 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:58:18,078 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-20 20:58:18,225 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-20 20:58:18,226 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-20 20:58:18,226 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:58:18,227 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-20 20:58:18,255 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-20 20:58:18,255 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-20 20:58:18,256 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-20 20:58:18,256 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-20 20:58:18,289 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-20 20:58:18,289 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-20 20:58:18,289 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-20 20:58:18,289 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-20 20:58:18,290 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-20 20:58:18,290 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-20 20:58:18,613 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-20 20:58:18,614 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-20 20:58:18,614 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-20 20:58:18,614 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-20 20:58:18,760 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-20 20:58:18,760 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-20 20:58:18,760 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-20 20:58:18,760 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-20 20:58:18,785 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-20 20:58:18,786 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-20 20:58:18,786 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-20 20:58:18,786 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:58:19,051 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-20 20:58:19,053 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:58:19,166 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-20 20:58:19,166 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:58:19,166 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-20 20:58:19,310 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-20 20:58:19,310 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-20 20:58:19,310 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-20 20:58:19,311 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-20 20:58:19,334 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-20 20:58:19,334 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-20 20:58:19,334 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-20 20:58:19,335 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-20 20:58:19,335 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-20 20:58:19,623 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 20:58:19,623 [test_recharge.py-->line:33]:注册用户15863338770成功
INFO 2021-04-20 20:58:19,796 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 20:58:19,797 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-20 20:58:19,824 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-20 20:58:19,825 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-20 20:58:19,850 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-20 20:58:19,850 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-20 20:58:19,850 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-20 20:58:19,876 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-20 20:58:19,876 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-20 20:58:19,900 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-20 20:58:19,900 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-20 20:58:19,900 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-20 20:58:19,928 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-20 20:58:19,928 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-20 20:58:19,952 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-20 20:58:19,952 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-20 20:58:19,952 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-20 20:58:19,980 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-20 20:58:19,981 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-20 20:58:20,005 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-20 20:58:20,005 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-20 20:58:20,005 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-20 20:58:20,029 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-20 20:58:20,030 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-20 20:58:20,030 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-20 20:58:20,031 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-20 20:58:20,059 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-20 20:58:20,059 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-20 20:58:20,059 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-20 20:58:20,059 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-20 20:58:20,086 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-20 20:58:20,087 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-20 20:58:20,087 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-20 20:58:20,087 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 20:58:20,087 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000376148, 'leave_amount': 503553.68, 'mobile_phone': '15863338770', 'reg_name': '小柠檬', 'reg_time': '2021-04-20 20:58:19.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 20:58:20,088 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-20 20:58:20,110 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-20 20:58:20,110 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-20 20:58:20,111 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-20 20:58:20,111 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-20 20:58:20,138 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-20 20:58:20,139 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 20:58:20,139 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-20 20:58:20,139 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 20:58:20,139 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000376148, 'leave_amount': 503553.68, 'mobile_phone': '15863338770', 'reg_name': '小柠檬', 'reg_time': '2021-04-20 20:58:19.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 20:58:20,140 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-20 20:58:20,162 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-20 20:58:20,162 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-20 20:58:20,163 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-20 20:58:20,163 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-20 20:58:20,185 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-20 20:58:20,185 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-20 20:58:20,185 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-20 20:58:20,185 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-20 20:58:20,206 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-20 20:58:20,207 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-20 20:58:20,207 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-20 20:58:20,207 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-20 20:58:20,236 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-20 20:58:20,236 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-20 20:58:20,236 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-20 20:58:20,237 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-20 20:58:20,262 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-20 20:58:20,262 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-20 20:58:20,262 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-20 20:58:20,262 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-20 20:58:20,262 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-20 20:58:20,262 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-20 20:58:20,520 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-20 20:58:20,520 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-20 20:58:20,638 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-20 20:58:20,638 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-20 20:58:20,638 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-20 20:58:20,915 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-20 20:58:20,915 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-20 20:58:21,035 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-20 20:58:21,035 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-20 20:58:21,036 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-20 20:58:21,347 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-20 20:58:21,347 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-20 20:58:21,501 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-20 20:58:21,501 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-20 20:58:21,501 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-20 20:58:21,522 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-20 20:58:21,522 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-20 20:58:21,522 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-20 20:58:21,523 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-20 20:58:21,544 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-20 20:58:21,544 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-20 20:58:21,544 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-20 20:58:21,544 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-20 20:58:21,565 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-20 20:58:21,565 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-20 20:58:21,565 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-20 20:58:21,566 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-20 20:58:21,587 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-20 20:58:21,587 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-20 20:58:21,587 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-20 20:58:21,587 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-20 20:58:21,785 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-20 20:58:21,785 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-20 20:58:21,785 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-20 20:58:21,785 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-20 20:58:21,807 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-20 20:58:21,807 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-20 20:58:21,807 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-20 20:58:21,808 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-20 20:58:21,829 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-20 20:58:21,830 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-20 20:58:21,830 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-20 20:58:21,830 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-20 20:58:21,850 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-20 20:58:21,851 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-20 20:58:21,851 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-20 20:58:21,851 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-20 20:58:21,873 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-20 20:58:21,873 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-20 20:58:21,874 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-20 20:58:21,874 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-20 20:58:21,897 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-20 20:58:21,897 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-20 20:58:21,897 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-20 20:58:21,897 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-20 20:59:17,072 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-20 20:59:17,368 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 20:59:17,368 [test_audit.py-->line:31]:注册普通用户15874783502成功
INFO 2021-04-20 20:59:17,544 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 20:59:17,830 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 20:59:17,830 [test_audit.py-->line:47]:注册用户15819746614成功
INFO 2021-04-20 20:59:18,009 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 20:59:18,067 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:59:18,068 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:59:18,068 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-20 20:59:18,123 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-20 20:59:18,124 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-20 20:59:18,154 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-20 20:59:18,155 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-20 20:59:18,209 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:59:18,210 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:59:18,210 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-20 20:59:18,239 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-20 20:59:18,240 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-20 20:59:18,270 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-20 20:59:18,270 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-20 20:59:18,327 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:59:18,327 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:59:18,327 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-20 20:59:18,355 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-20 20:59:18,356 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-20 20:59:18,356 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-20 20:59:18,409 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:59:18,409 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:59:18,409 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-20 20:59:18,440 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-20 20:59:18,440 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-20 20:59:18,441 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-20 20:59:18,441 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 20:59:18,441 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 20:59:18,483 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:59:18,484 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:59:18,484 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-20 20:59:18,512 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-20 20:59:18,512 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-20 20:59:18,512 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-20 20:59:18,567 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:59:18,567 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:59:18,568 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-20 20:59:18,595 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-20 20:59:18,595 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-20 20:59:18,596 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-20 20:59:18,650 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 20:59:18,650 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 20:59:18,650 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-20 20:59:18,678 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-20 20:59:18,678 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-20 20:59:18,678 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-20 20:59:18,678 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-20 20:59:18,678 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-20 20:59:18,678 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-20 20:59:18,905 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-20 20:59:18,905 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-20 20:59:18,905 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-20 20:59:18,905 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-20 20:59:19,181 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-20 20:59:19,183 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-20 20:59:19,183 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-20 20:59:19,183 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-20 20:59:19,184 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-20 20:59:19,184 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 20:59:19,453 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-20 20:59:19,453 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-20 20:59:19,454 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:59:19,454 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 20:59:19,606 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-20 20:59:19,607 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-20 20:59:19,607 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:59:19,608 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-20 20:59:19,657 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-20 20:59:19,658 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-20 20:59:19,658 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-20 20:59:19,658 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-20 20:59:19,927 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-20 20:59:19,927 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-20 20:59:19,927 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-20 20:59:19,928 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-20 20:59:20,081 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-20 20:59:20,081 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-20 20:59:20,082 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-20 20:59:20,082 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-20 20:59:20,115 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-20 20:59:20,115 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-20 20:59:20,115 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-20 20:59:20,116 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-20 20:59:20,382 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-20 20:59:20,383 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-20 20:59:20,383 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-20 20:59:20,383 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-20 20:59:20,536 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-20 20:59:20,536 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-20 20:59:20,536 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-20 20:59:20,536 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-20 20:59:20,569 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-20 20:59:20,570 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-20 20:59:20,570 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-20 20:59:20,570 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:59:20,839 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-20 20:59:20,839 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:59:20,840 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:59:20,840 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:59:20,991 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-20 20:59:20,991 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:59:20,991 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:59:20,991 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-20 20:59:21,022 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-20 20:59:21,022 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-20 20:59:21,022 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-20 20:59:21,022 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-20 20:59:21,052 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-20 20:59:21,052 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-20 20:59:21,052 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-20 20:59:21,052 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-20 20:59:21,083 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-20 20:59:21,084 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-20 20:59:21,084 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-20 20:59:21,085 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-20 20:59:21,119 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-20 20:59:21,119 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-20 20:59:21,119 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-20 20:59:21,119 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-20 20:59:21,150 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-20 20:59:21,151 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-20 20:59:21,153 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-20 20:59:21,153 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-20 20:59:21,153 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 20:59:21,155 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-20 20:59:21,194 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-20 20:59:21,194 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-20 20:59:21,361 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-20 20:59:21,362 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-20 20:59:21,362 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-20 20:59:21,394 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-20 20:59:21,394 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-20 20:59:21,394 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-20 20:59:21,394 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-20 20:59:21,438 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-20 20:59:21,439 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-20 20:59:21,636 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-20 20:59:21,636 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-20 20:59:21,636 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-20 20:59:21,636 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-20 20:59:21,636 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 20:59:21,908 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-20 20:59:21,908 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-20 20:59:22,028 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-20 20:59:22,028 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:59:22,029 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 20:59:22,177 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-20 20:59:22,177 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-20 20:59:22,178 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:59:22,178 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-20 20:59:22,211 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-20 20:59:22,212 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-20 20:59:22,213 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-20 20:59:22,214 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:59:22,483 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-20 20:59:22,483 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:59:22,483 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:59:22,483 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:59:22,633 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-20 20:59:22,633 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:59:22,633 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:59:22,633 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-20 20:59:22,664 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-20 20:59:22,665 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-20 20:59:22,666 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-20 20:59:22,667 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-20 20:59:22,941 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-20 20:59:22,941 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-20 20:59:22,941 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:59:22,941 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-20 20:59:23,091 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-20 20:59:23,092 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-20 20:59:23,092 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-20 20:59:23,094 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-20 20:59:23,127 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-20 20:59:23,128 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-20 20:59:23,128 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-20 20:59:23,128 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-20 20:59:23,169 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-20 20:59:23,169 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-20 20:59:23,169 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-20 20:59:23,169 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-20 20:59:23,169 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-20 20:59:23,169 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-20 20:59:23,440 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-20 20:59:23,440 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-20 20:59:23,440 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-20 20:59:23,440 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-20 20:59:23,594 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-20 20:59:23,595 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-20 20:59:23,595 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-20 20:59:23,595 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-20 20:59:23,629 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-20 20:59:23,629 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-20 20:59:23,629 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-20 20:59:23,629 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 20:59:23,903 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-20 20:59:23,903 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 20:59:24,021 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-20 20:59:24,021 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 20:59:24,021 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-20 20:59:24,170 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-20 20:59:24,171 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-20 20:59:24,171 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-20 20:59:24,171 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-20 20:59:24,202 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-20 20:59:24,203 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-20 20:59:24,203 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-20 20:59:24,204 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-20 20:59:24,204 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-20 20:59:24,512 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 20:59:24,512 [test_recharge.py-->line:33]:注册用户15888916263成功
INFO 2021-04-20 20:59:24,688 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 20:59:24,688 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-20 20:59:24,721 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-20 20:59:24,721 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-20 20:59:24,753 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-20 20:59:24,753 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-20 20:59:24,754 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-20 20:59:24,794 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-20 20:59:24,794 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-20 20:59:24,826 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-20 20:59:24,826 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-20 20:59:24,827 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-20 20:59:24,860 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-20 20:59:24,860 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-20 20:59:24,892 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-20 20:59:24,893 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-20 20:59:24,894 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-20 20:59:24,934 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-20 20:59:24,934 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-20 20:59:24,966 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-20 20:59:24,966 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-20 20:59:24,967 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-20 20:59:24,998 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-20 20:59:24,998 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-20 20:59:24,999 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-20 20:59:24,999 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-20 20:59:25,027 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-20 20:59:25,027 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-20 20:59:25,027 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-20 20:59:25,027 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-20 20:59:25,060 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-20 20:59:25,060 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-20 20:59:25,061 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-20 20:59:25,061 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 20:59:25,061 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000376164, 'leave_amount': 503553.68, 'mobile_phone': '15888916263', 'reg_name': '小柠檬', 'reg_time': '2021-04-20 20:59:24.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 20:59:25,061 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-20 20:59:25,091 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-20 20:59:25,091 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-20 20:59:25,091 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-20 20:59:25,091 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-20 20:59:25,123 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-20 20:59:25,124 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 20:59:25,125 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-20 20:59:25,125 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 20:59:25,125 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000376164, 'leave_amount': 503553.68, 'mobile_phone': '15888916263', 'reg_name': '小柠檬', 'reg_time': '2021-04-20 20:59:24.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 20:59:25,126 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-20 20:59:25,159 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-20 20:59:25,159 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-20 20:59:25,159 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-20 20:59:25,159 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-20 20:59:25,187 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-20 20:59:25,188 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-20 20:59:25,188 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-20 20:59:25,188 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-20 20:59:25,218 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-20 20:59:25,218 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-20 20:59:25,218 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-20 20:59:25,218 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-20 20:59:25,247 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-20 20:59:25,247 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-20 20:59:25,247 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-20 20:59:25,247 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-20 20:59:25,276 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-20 20:59:25,276 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-20 20:59:25,277 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-20 20:59:25,277 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-20 20:59:25,277 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-20 20:59:25,277 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-20 20:59:25,550 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-20 20:59:25,550 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-20 20:59:25,671 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-20 20:59:25,671 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-20 20:59:25,672 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-20 20:59:25,953 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-20 20:59:25,954 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-20 20:59:26,074 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-20 20:59:26,074 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-20 20:59:26,075 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-20 20:59:26,353 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-20 20:59:26,354 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-20 20:59:26,550 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-20 20:59:26,550 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-20 20:59:26,550 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-20 20:59:26,577 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-20 20:59:26,578 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-20 20:59:26,578 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-20 20:59:26,578 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-20 20:59:26,609 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-20 20:59:26,609 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-20 20:59:26,609 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-20 20:59:26,609 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-20 20:59:26,641 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-20 20:59:26,641 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-20 20:59:26,642 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-20 20:59:26,642 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-20 20:59:26,670 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-20 20:59:26,670 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-20 20:59:26,670 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-20 20:59:26,671 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-20 20:59:26,918 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-20 20:59:26,918 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-20 20:59:26,918 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-20 20:59:26,918 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-20 20:59:26,945 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-20 20:59:26,946 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-20 20:59:26,946 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-20 20:59:26,946 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-20 20:59:26,974 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-20 20:59:26,974 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-20 20:59:26,974 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-20 20:59:26,974 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-20 20:59:27,001 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-20 20:59:27,001 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-20 20:59:27,001 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-20 20:59:27,002 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-20 20:59:27,028 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-20 20:59:27,029 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-20 20:59:27,029 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-20 20:59:27,029 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-20 20:59:27,059 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-20 20:59:27,059 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-20 20:59:27,060 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-20 20:59:27,060 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-20 21:00:39,252 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-20 21:00:39,547 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 21:00:39,548 [test_audit.py-->line:31]:注册普通用户15818512259成功
INFO 2021-04-20 21:00:39,716 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 21:00:40,039 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 21:00:40,039 [test_audit.py-->line:47]:注册用户15849927746成功
INFO 2021-04-20 21:00:40,200 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 21:00:40,254 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:00:40,255 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:00:40,255 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-20 21:00:40,297 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-20 21:00:40,298 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-20 21:00:40,322 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-20 21:00:40,323 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-20 21:00:40,366 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:00:40,366 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:00:40,367 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-20 21:00:40,391 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-20 21:00:40,392 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-20 21:00:40,418 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-20 21:00:40,418 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-20 21:00:40,471 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:00:40,472 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:00:40,472 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-20 21:00:40,493 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-20 21:00:40,493 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-20 21:00:40,493 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-20 21:00:40,555 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:00:40,555 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:00:40,556 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-20 21:00:40,580 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-20 21:00:40,581 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-20 21:00:40,582 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-20 21:00:40,582 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 21:00:40,582 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 21:00:40,639 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:00:40,639 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:00:40,639 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-20 21:00:40,664 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-20 21:00:40,664 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-20 21:00:40,664 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-20 21:00:40,706 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:00:40,706 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:00:40,706 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-20 21:00:40,729 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-20 21:00:40,729 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-20 21:00:40,730 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-20 21:00:40,772 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:00:40,772 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:00:40,772 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-20 21:00:40,794 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-20 21:00:40,794 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-20 21:00:40,794 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-20 21:00:40,794 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-20 21:00:40,795 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-20 21:00:40,795 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-20 21:00:41,051 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-20 21:00:41,051 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-20 21:00:41,051 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-20 21:00:41,052 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-20 21:00:41,335 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-20 21:00:41,337 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-20 21:00:41,337 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-20 21:00:41,337 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-20 21:00:41,337 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-20 21:00:41,337 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 21:00:41,633 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-20 21:00:41,633 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-20 21:00:41,633 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:00:41,633 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 21:00:41,778 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-20 21:00:41,779 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-20 21:00:41,782 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:00:41,783 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-20 21:00:41,827 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-20 21:00:41,827 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-20 21:00:41,828 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-20 21:00:41,828 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-20 21:00:42,093 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-20 21:00:42,093 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-20 21:00:42,094 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-20 21:00:42,094 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-20 21:00:42,240 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-20 21:00:42,240 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-20 21:00:42,240 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-20 21:00:42,241 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-20 21:00:42,268 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-20 21:00:42,268 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-20 21:00:42,268 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-20 21:00:42,268 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-20 21:00:42,624 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-20 21:00:42,625 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-20 21:00:42,625 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-20 21:00:42,625 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-20 21:00:42,768 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-20 21:00:42,768 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-20 21:00:42,769 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-20 21:00:42,769 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-20 21:00:42,796 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-20 21:00:42,796 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-20 21:00:42,796 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-20 21:00:42,797 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 21:00:43,060 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-20 21:00:43,060 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 21:00:43,060 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 21:00:43,060 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-20 21:00:43,204 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-20 21:00:43,204 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-20 21:00:43,205 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 21:00:43,205 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-20 21:00:43,231 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-20 21:00:43,232 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-20 21:00:43,232 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-20 21:00:43,233 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-20 21:00:43,263 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-20 21:00:43,264 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-20 21:00:43,264 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-20 21:00:43,264 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-20 21:00:43,287 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-20 21:00:43,288 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-20 21:00:43,288 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-20 21:00:43,289 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-20 21:00:43,319 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-20 21:00:43,319 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-20 21:00:43,320 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-20 21:00:43,320 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-20 21:00:43,345 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-20 21:00:43,346 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-20 21:00:43,346 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-20 21:00:43,346 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-20 21:00:43,347 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 21:00:43,347 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-20 21:00:43,379 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-20 21:00:43,380 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-20 21:00:43,522 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-20 21:00:43,522 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-20 21:00:43,522 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-20 21:00:43,547 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-20 21:00:43,548 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-20 21:00:43,548 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-20 21:00:43,548 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-20 21:00:43,589 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-20 21:00:43,590 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-20 21:00:43,762 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-20 21:00:43,762 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-20 21:00:43,762 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-20 21:00:43,763 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-20 21:00:43,763 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 21:00:44,037 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-20 21:00:44,037 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-20 21:00:44,208 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-20 21:00:44,208 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:00:44,209 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 21:00:44,432 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-20 21:00:44,432 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-20 21:00:44,432 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:00:44,432 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-20 21:00:44,458 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-20 21:00:44,459 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-20 21:00:44,459 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-20 21:00:44,459 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 21:00:44,851 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-20 21:00:44,851 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 21:00:44,851 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 21:00:44,851 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-20 21:00:45,074 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-20 21:00:45,074 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-20 21:00:45,075 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 21:00:45,075 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-20 21:00:45,099 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-20 21:00:45,100 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-20 21:00:45,100 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-20 21:00:45,100 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-20 21:00:45,490 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-20 21:00:45,490 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-20 21:00:45,490 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:00:45,490 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-20 21:00:45,713 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-20 21:00:45,713 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-20 21:00:45,714 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:00:45,714 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-20 21:00:45,740 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-20 21:00:45,741 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-20 21:00:45,741 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-20 21:00:45,741 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-20 21:00:45,772 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-20 21:00:45,772 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-20 21:00:45,772 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-20 21:00:45,772 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-20 21:00:45,772 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-20 21:00:45,773 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-20 21:00:46,165 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-20 21:00:46,166 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-20 21:00:46,166 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-20 21:00:46,166 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-20 21:00:46,388 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-20 21:00:46,389 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-20 21:00:46,389 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-20 21:00:46,389 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-20 21:00:46,414 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-20 21:00:46,414 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-20 21:00:46,414 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-20 21:00:46,415 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 21:00:46,807 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-20 21:00:46,807 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 21:00:46,980 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-20 21:00:46,980 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 21:00:46,980 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-20 21:00:47,210 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-20 21:00:47,211 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-20 21:00:47,211 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-20 21:00:47,211 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-20 21:00:47,237 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-20 21:00:47,237 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-20 21:00:47,237 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-20 21:00:47,237 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-20 21:00:47,237 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-20 21:00:47,664 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 21:00:47,664 [test_recharge.py-->line:33]:注册用户15873183425成功
INFO 2021-04-20 21:00:47,847 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 21:00:47,847 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-20 21:00:47,875 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-20 21:00:47,875 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-20 21:00:47,900 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-20 21:00:47,900 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-20 21:00:47,900 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-20 21:00:47,927 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-20 21:00:47,928 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-20 21:00:47,953 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-20 21:00:47,953 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-20 21:00:47,953 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-20 21:00:47,980 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-20 21:00:47,980 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-20 21:00:48,005 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-20 21:00:48,005 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-20 21:00:48,005 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-20 21:00:48,033 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-20 21:00:48,033 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-20 21:00:48,058 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-20 21:00:48,058 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-20 21:00:48,058 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-20 21:00:48,082 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-20 21:00:48,083 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-20 21:00:48,083 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-20 21:00:48,083 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-20 21:00:48,107 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-20 21:00:48,107 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-20 21:00:48,108 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-20 21:00:48,108 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-20 21:00:48,144 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-20 21:00:48,145 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-20 21:00:48,145 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-20 21:00:48,146 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 21:00:48,146 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000376180, 'leave_amount': 503553.68, 'mobile_phone': '15873183425', 'reg_name': '小柠檬', 'reg_time': '2021-04-20 21:00:47.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 21:00:48,146 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-20 21:00:48,168 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-20 21:00:48,169 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-20 21:00:48,169 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-20 21:00:48,169 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-20 21:00:48,197 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-20 21:00:48,200 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 21:00:48,202 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-20 21:00:48,203 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 21:00:48,203 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000376180, 'leave_amount': 503553.68, 'mobile_phone': '15873183425', 'reg_name': '小柠檬', 'reg_time': '2021-04-20 21:00:47.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 21:00:48,204 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-20 21:00:48,233 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-20 21:00:48,233 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-20 21:00:48,234 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-20 21:00:48,234 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-20 21:00:48,256 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-20 21:00:48,257 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-20 21:00:48,257 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-20 21:00:48,257 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-20 21:00:48,281 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-20 21:00:48,282 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-20 21:00:48,282 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-20 21:00:48,282 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-20 21:00:48,305 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-20 21:00:48,305 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-20 21:00:48,305 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-20 21:00:48,306 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-20 21:00:48,328 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-20 21:00:48,329 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-20 21:00:48,329 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-20 21:00:48,329 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-20 21:00:48,329 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-20 21:00:48,329 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-20 21:00:48,720 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-20 21:00:48,720 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-20 21:00:48,892 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-20 21:00:48,892 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-20 21:00:48,893 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-20 21:00:49,285 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-20 21:00:49,285 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-20 21:00:49,457 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-20 21:00:49,457 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-20 21:00:49,457 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-20 21:00:49,852 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-20 21:00:49,853 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-20 21:00:50,024 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-20 21:00:50,024 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-20 21:00:50,024 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-20 21:00:50,048 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-20 21:00:50,049 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-20 21:00:50,049 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-20 21:00:50,050 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-20 21:00:50,078 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-20 21:00:50,079 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-20 21:00:50,080 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-20 21:00:50,080 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-20 21:00:50,107 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-20 21:00:50,108 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-20 21:00:50,108 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-20 21:00:50,109 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-20 21:00:50,134 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-20 21:00:50,135 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-20 21:00:50,135 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-20 21:00:50,135 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-20 21:00:50,351 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-20 21:00:50,352 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-20 21:00:50,352 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-20 21:00:50,352 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-20 21:00:50,373 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-20 21:00:50,374 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-20 21:00:50,374 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-20 21:00:50,374 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-20 21:00:50,396 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-20 21:00:50,396 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-20 21:00:50,396 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-20 21:00:50,396 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-20 21:00:50,418 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-20 21:00:50,418 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-20 21:00:50,418 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-20 21:00:50,418 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-20 21:00:50,439 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-20 21:00:50,440 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-20 21:00:50,440 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-20 21:00:50,440 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-20 21:00:50,463 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-20 21:00:50,464 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-20 21:00:50,464 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-20 21:00:50,465 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-20 21:02:39,280 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-20 21:02:39,559 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 21:02:39,559 [test_audit.py-->line:31]:注册普通用户15832301129成功
INFO 2021-04-20 21:02:39,722 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 21:02:39,987 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 21:02:39,987 [test_audit.py-->line:47]:注册用户15851489867成功
INFO 2021-04-20 21:02:40,147 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 21:02:40,206 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:02:40,207 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:02:40,207 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-20 21:02:40,264 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-20 21:02:40,265 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-20 21:02:40,282 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-20 21:02:40,282 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-20 21:02:40,328 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:02:40,328 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:02:40,328 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-20 21:02:40,358 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-20 21:02:40,358 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-20 21:02:40,375 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-20 21:02:40,375 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-20 21:02:40,431 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:02:40,432 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:02:40,432 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-20 21:02:40,458 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-20 21:02:40,458 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-20 21:02:40,459 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-20 21:02:40,501 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:02:40,501 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:02:40,501 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-20 21:02:40,530 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-20 21:02:40,530 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-20 21:02:40,531 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-20 21:02:40,531 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 21:02:40,531 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 21:02:40,573 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:02:40,573 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:02:40,573 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-20 21:02:40,600 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-20 21:02:40,601 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-20 21:02:40,601 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-20 21:02:40,642 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:02:40,642 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:02:40,642 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-20 21:02:40,669 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-20 21:02:40,669 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-20 21:02:40,669 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-20 21:02:40,712 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:02:40,713 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:02:40,713 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-20 21:02:40,739 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-20 21:02:40,739 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-20 21:02:40,740 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-20 21:02:40,740 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-20 21:02:40,740 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-20 21:02:40,740 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-20 21:02:40,962 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-20 21:02:40,962 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-20 21:02:40,962 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-20 21:02:40,962 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-20 21:02:41,229 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-20 21:02:41,230 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-20 21:02:41,230 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-20 21:02:41,230 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-20 21:02:41,230 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-20 21:02:41,231 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 21:02:41,484 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-20 21:02:41,484 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-20 21:02:41,484 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:02:41,484 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 21:02:41,633 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-20 21:02:41,633 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-20 21:02:41,633 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:02:41,634 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-20 21:02:41,683 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-20 21:02:41,683 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-20 21:02:41,683 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-20 21:02:41,684 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-20 21:02:41,935 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-20 21:02:41,935 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-20 21:02:41,935 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-20 21:02:41,936 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-20 21:02:42,085 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-20 21:02:42,085 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-20 21:02:42,086 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-20 21:02:42,086 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-20 21:02:42,118 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-20 21:02:42,118 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-20 21:02:42,118 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-20 21:02:42,119 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-20 21:02:42,371 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-20 21:02:42,371 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-20 21:02:42,372 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-20 21:02:42,372 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-20 21:02:42,526 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-20 21:02:42,526 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-20 21:02:42,527 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-20 21:02:42,527 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-20 21:02:42,578 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-20 21:02:42,578 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-20 21:02:42,578 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-20 21:02:42,579 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 21:02:42,850 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-20 21:02:42,850 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 21:02:42,851 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 21:02:42,851 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-20 21:02:43,101 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-20 21:02:43,101 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-20 21:02:43,102 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 21:02:43,102 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-20 21:02:43,135 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-20 21:02:43,135 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-20 21:02:43,135 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-20 21:02:43,135 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-20 21:02:43,165 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-20 21:02:43,165 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-20 21:02:43,165 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-20 21:02:43,165 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-20 21:02:43,193 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-20 21:02:43,193 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-20 21:02:43,193 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-20 21:02:43,193 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-20 21:02:43,221 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-20 21:02:43,221 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-20 21:02:43,221 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-20 21:02:43,222 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-20 21:02:43,249 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-20 21:02:43,250 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-20 21:02:43,250 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-20 21:02:43,250 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-20 21:02:43,250 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 21:02:43,251 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-20 21:02:43,286 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-20 21:02:43,286 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-20 21:02:43,406 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-20 21:02:43,407 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-20 21:02:43,407 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-20 21:02:43,440 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-20 21:02:43,440 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-20 21:02:43,440 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-20 21:02:43,441 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-20 21:02:43,488 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-20 21:02:43,488 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-20 21:02:43,641 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-20 21:02:43,641 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-20 21:02:43,641 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-20 21:02:43,641 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-20 21:02:43,642 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 21:02:43,901 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-20 21:02:43,901 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-20 21:02:44,005 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-20 21:02:44,006 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:02:44,006 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 21:02:44,172 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-20 21:02:44,173 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-20 21:02:44,174 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:02:44,175 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-20 21:02:44,446 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-20 21:02:44,446 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-20 21:02:44,447 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-20 21:02:44,447 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 21:02:44,710 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-20 21:02:44,710 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 21:02:44,710 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 21:02:44,710 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-20 21:02:44,865 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-20 21:02:44,865 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-20 21:02:44,865 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 21:02:44,865 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-20 21:02:44,897 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-20 21:02:44,898 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-20 21:02:44,898 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-20 21:02:44,899 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-20 21:02:45,161 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-20 21:02:45,161 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-20 21:02:45,162 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:02:45,162 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-20 21:02:45,318 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-20 21:02:45,318 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-20 21:02:45,318 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:02:45,318 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-20 21:02:45,349 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-20 21:02:45,349 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-20 21:02:45,349 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-20 21:02:45,350 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-20 21:02:45,385 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-20 21:02:45,385 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-20 21:02:45,385 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-20 21:02:45,385 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-20 21:02:45,385 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-20 21:02:45,385 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-20 21:02:45,709 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-20 21:02:45,709 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-20 21:02:45,709 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-20 21:02:45,710 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-20 21:02:45,869 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-20 21:02:45,869 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-20 21:02:45,869 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-20 21:02:45,870 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-20 21:02:45,900 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-20 21:02:45,900 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-20 21:02:45,901 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-20 21:02:45,902 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 21:02:46,218 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-20 21:02:46,219 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 21:02:46,329 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-20 21:02:46,329 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 21:02:46,330 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-20 21:02:46,490 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-20 21:02:46,490 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-20 21:02:46,490 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-20 21:02:46,491 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-20 21:02:46,521 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-20 21:02:46,521 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-20 21:02:46,521 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-20 21:02:46,521 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-20 21:02:46,521 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-20 21:02:46,812 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 21:02:46,813 [test_recharge.py-->line:33]:注册用户15806117809成功
INFO 2021-04-20 21:02:47,047 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 21:02:47,047 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-20 21:02:47,081 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-20 21:02:47,081 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-20 21:02:47,098 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-20 21:02:47,098 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-20 21:02:47,099 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-20 21:02:47,131 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-20 21:02:47,131 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-20 21:02:47,148 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-20 21:02:47,148 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-20 21:02:47,148 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-20 21:02:47,180 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-20 21:02:47,180 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-20 21:02:47,197 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-20 21:02:47,197 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-20 21:02:47,197 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-20 21:02:47,229 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-20 21:02:47,229 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-20 21:02:47,247 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-20 21:02:47,247 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-20 21:02:47,247 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-20 21:02:47,274 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-20 21:02:47,275 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-20 21:02:47,275 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-20 21:02:47,275 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-20 21:02:47,303 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-20 21:02:47,303 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-20 21:02:47,303 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-20 21:02:47,303 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-20 21:02:47,336 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-20 21:02:47,336 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-20 21:02:47,337 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-20 21:02:47,337 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 21:02:47,337 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000376200, 'leave_amount': 503553.68, 'mobile_phone': '15806117809', 'reg_name': '小柠檬', 'reg_time': '2021-04-20 21:02:46.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 21:02:47,338 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-20 21:02:47,367 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-20 21:02:47,367 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-20 21:02:47,367 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-20 21:02:47,367 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-20 21:02:47,398 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-20 21:02:47,399 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 21:02:47,399 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-20 21:02:47,399 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 21:02:47,399 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000376200, 'leave_amount': 503553.68, 'mobile_phone': '15806117809', 'reg_name': '小柠檬', 'reg_time': '2021-04-20 21:02:46.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 21:02:47,399 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-20 21:02:47,428 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-20 21:02:47,428 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-20 21:02:47,428 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-20 21:02:47,429 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-20 21:02:47,456 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-20 21:02:47,457 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-20 21:02:47,457 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-20 21:02:47,457 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-20 21:02:47,485 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-20 21:02:47,485 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-20 21:02:47,486 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-20 21:02:47,486 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-20 21:02:47,513 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-20 21:02:47,514 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-20 21:02:47,514 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-20 21:02:47,514 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-20 21:02:47,542 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-20 21:02:47,543 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-20 21:02:47,543 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-20 21:02:47,543 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-20 21:02:47,543 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-20 21:02:47,543 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-20 21:02:47,880 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-20 21:02:47,880 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-20 21:02:48,066 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-20 21:02:48,066 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-20 21:02:48,066 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-20 21:02:48,395 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-20 21:02:48,396 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-20 21:02:48,558 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-20 21:02:48,558 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-20 21:02:48,558 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-20 21:02:48,874 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-20 21:02:48,875 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-20 21:02:48,980 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-20 21:02:48,981 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-20 21:02:48,981 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-20 21:02:49,007 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-20 21:02:49,008 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-20 21:02:49,008 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-20 21:02:49,008 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-20 21:02:49,035 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-20 21:02:49,035 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-20 21:02:49,035 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-20 21:02:49,035 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-20 21:02:49,062 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-20 21:02:49,062 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-20 21:02:49,062 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-20 21:02:49,062 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-20 21:02:49,090 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-20 21:02:49,090 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-20 21:02:49,090 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-20 21:02:49,091 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-20 21:02:49,241 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-20 21:02:49,241 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-20 21:02:49,241 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-20 21:02:49,242 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-20 21:02:49,268 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-20 21:02:49,269 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-20 21:02:49,269 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-20 21:02:49,269 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-20 21:02:49,297 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-20 21:02:49,298 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-20 21:02:49,298 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-20 21:02:49,298 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-20 21:02:49,325 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-20 21:02:49,325 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-20 21:02:49,325 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-20 21:02:49,325 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-20 21:02:49,352 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-20 21:02:49,352 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-20 21:02:49,352 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-20 21:02:49,352 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-20 21:02:49,379 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-20 21:02:49,379 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-20 21:02:49,379 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-20 21:02:49,379 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-20 21:03:56,299 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-20 21:03:56,642 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 21:03:56,642 [test_audit.py-->line:31]:注册普通用户15891680963成功
INFO 2021-04-20 21:03:56,919 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 21:03:57,321 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 21:03:57,321 [test_audit.py-->line:47]:注册用户15817327576成功
INFO 2021-04-20 21:03:57,562 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 21:03:57,617 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:03:57,617 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:03:57,617 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-20 21:03:57,659 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-20 21:03:57,659 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-20 21:03:57,678 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-20 21:03:57,679 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-20 21:03:57,718 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:03:57,718 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:03:57,718 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-20 21:03:57,743 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-20 21:03:57,744 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-20 21:03:57,762 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-20 21:03:57,762 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-20 21:03:57,807 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:03:57,808 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:03:57,808 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-20 21:03:57,828 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-20 21:03:57,829 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-20 21:03:57,829 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-20 21:03:57,876 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:03:57,876 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:03:57,876 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-20 21:03:57,900 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-20 21:03:57,901 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-20 21:03:57,902 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-20 21:03:57,902 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 21:03:57,902 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 21:03:57,944 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:03:57,944 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:03:57,945 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-20 21:03:57,966 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-20 21:03:57,966 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-20 21:03:57,966 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-20 21:03:58,023 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:03:58,023 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:03:58,023 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-20 21:03:58,044 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-20 21:03:58,044 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-20 21:03:58,044 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-20 21:03:58,100 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:03:58,101 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:03:58,101 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-20 21:03:58,121 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-20 21:03:58,121 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-20 21:03:58,121 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-20 21:03:58,122 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-20 21:03:58,122 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-20 21:03:58,122 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-20 21:03:58,400 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-20 21:03:58,401 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-20 21:03:58,401 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-20 21:03:58,401 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-20 21:03:58,720 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-20 21:03:58,722 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-20 21:03:58,722 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-20 21:03:58,722 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-20 21:03:58,723 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-20 21:03:58,723 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 21:03:58,975 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-20 21:03:58,976 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-20 21:03:58,977 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:03:58,977 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 21:03:59,227 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-20 21:03:59,227 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-20 21:03:59,228 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:03:59,228 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-20 21:03:59,270 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-20 21:03:59,270 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-20 21:03:59,270 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-20 21:03:59,271 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-20 21:03:59,522 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-20 21:03:59,523 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-20 21:03:59,523 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-20 21:03:59,523 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-20 21:03:59,711 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-20 21:03:59,711 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-20 21:03:59,712 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-20 21:03:59,712 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-20 21:03:59,738 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-20 21:03:59,738 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-20 21:03:59,739 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-20 21:03:59,739 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-20 21:03:59,993 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-20 21:03:59,994 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-20 21:03:59,994 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-20 21:03:59,994 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-20 21:04:00,136 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-20 21:04:00,137 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-20 21:04:00,137 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-20 21:04:00,137 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-20 21:04:00,164 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-20 21:04:00,164 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-20 21:04:00,164 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-20 21:04:00,164 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 21:04:00,430 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-20 21:04:00,430 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 21:04:00,430 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 21:04:00,431 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-20 21:04:00,575 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-20 21:04:00,576 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-20 21:04:00,576 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 21:04:00,576 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-20 21:04:00,601 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-20 21:04:00,601 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-20 21:04:00,602 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-20 21:04:00,602 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-20 21:04:00,628 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-20 21:04:00,628 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-20 21:04:00,628 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-20 21:04:00,628 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-20 21:04:00,649 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-20 21:04:00,649 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-20 21:04:00,650 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-20 21:04:00,650 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-20 21:04:00,672 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-20 21:04:00,672 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-20 21:04:00,672 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-20 21:04:00,672 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-20 21:04:00,695 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-20 21:04:00,696 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-20 21:04:00,696 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-20 21:04:00,696 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-20 21:04:00,696 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 21:04:00,697 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-20 21:04:00,728 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-20 21:04:00,728 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-20 21:04:00,867 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-20 21:04:00,867 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-20 21:04:00,867 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-20 21:04:00,894 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-20 21:04:00,894 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-20 21:04:00,894 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-20 21:04:00,894 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-20 21:04:00,930 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-20 21:04:00,930 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-20 21:04:01,085 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-20 21:04:01,085 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-20 21:04:01,086 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-20 21:04:01,086 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-20 21:04:01,086 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 21:04:01,336 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-20 21:04:01,336 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-20 21:04:01,439 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-20 21:04:01,440 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:04:01,440 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 21:04:01,584 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-20 21:04:01,584 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-20 21:04:01,585 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:04:01,585 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-20 21:04:01,610 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-20 21:04:01,611 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-20 21:04:01,612 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-20 21:04:01,613 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 21:04:01,900 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-20 21:04:01,900 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 21:04:01,900 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 21:04:01,900 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-20 21:04:02,046 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-20 21:04:02,046 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-20 21:04:02,046 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 21:04:02,046 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-20 21:04:02,070 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-20 21:04:02,070 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-20 21:04:02,070 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-20 21:04:02,070 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-20 21:04:02,550 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-20 21:04:02,550 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-20 21:04:02,550 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:04:02,550 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-20 21:04:02,692 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-20 21:04:02,692 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-20 21:04:02,692 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:04:02,692 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-20 21:04:02,718 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-20 21:04:02,718 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-20 21:04:02,718 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-20 21:04:02,718 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-20 21:04:02,747 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-20 21:04:02,747 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-20 21:04:02,747 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-20 21:04:02,747 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-20 21:04:02,747 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-20 21:04:02,748 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-20 21:04:02,996 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-20 21:04:02,996 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-20 21:04:02,996 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-20 21:04:02,996 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-20 21:04:03,139 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-20 21:04:03,139 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-20 21:04:03,140 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-20 21:04:03,140 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-20 21:04:03,164 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-20 21:04:03,164 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-20 21:04:03,164 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-20 21:04:03,164 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 21:04:03,420 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-20 21:04:03,420 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 21:04:03,524 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-20 21:04:03,524 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 21:04:03,525 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-20 21:04:03,666 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-20 21:04:03,667 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-20 21:04:03,667 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-20 21:04:03,667 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-20 21:04:03,691 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-20 21:04:03,691 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-20 21:04:03,691 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-20 21:04:03,691 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-20 21:04:03,691 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-20 21:04:03,965 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 21:04:03,965 [test_recharge.py-->line:33]:注册用户15857076275成功
INFO 2021-04-20 21:04:04,141 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 21:04:04,141 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-20 21:04:04,168 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-20 21:04:04,168 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-20 21:04:04,187 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-20 21:04:04,187 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-20 21:04:04,187 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-20 21:04:04,213 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-20 21:04:04,213 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-20 21:04:04,231 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-20 21:04:04,231 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-20 21:04:04,231 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-20 21:04:04,257 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-20 21:04:04,258 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-20 21:04:04,276 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-20 21:04:04,276 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-20 21:04:04,277 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-20 21:04:04,301 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-20 21:04:04,302 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-20 21:04:04,320 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-20 21:04:04,320 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-20 21:04:04,320 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-20 21:04:04,341 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-20 21:04:04,341 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-20 21:04:04,342 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-20 21:04:04,342 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-20 21:04:04,362 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-20 21:04:04,362 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-20 21:04:04,362 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-20 21:04:04,363 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-20 21:04:04,388 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-20 21:04:04,388 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-20 21:04:04,389 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-20 21:04:04,389 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 21:04:04,389 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000376215, 'leave_amount': 503553.68, 'mobile_phone': '15857076275', 'reg_name': '小柠檬', 'reg_time': '2021-04-20 21:04:03.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 21:04:04,390 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-20 21:04:04,412 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-20 21:04:04,412 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-20 21:04:04,412 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-20 21:04:04,412 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-20 21:04:04,437 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-20 21:04:04,437 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 21:04:04,437 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-20 21:04:04,437 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 21:04:04,437 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000376215, 'leave_amount': 503553.68, 'mobile_phone': '15857076275', 'reg_name': '小柠檬', 'reg_time': '2021-04-20 21:04:03.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 21:04:04,438 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-20 21:04:04,459 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-20 21:04:04,459 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-20 21:04:04,459 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-20 21:04:04,460 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-20 21:04:04,480 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-20 21:04:04,480 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-20 21:04:04,481 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-20 21:04:04,481 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-20 21:04:04,501 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-20 21:04:04,501 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-20 21:04:04,502 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-20 21:04:04,502 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-20 21:04:04,524 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-20 21:04:04,524 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-20 21:04:04,524 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-20 21:04:04,524 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-20 21:04:04,546 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-20 21:04:04,546 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-20 21:04:04,546 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-20 21:04:04,546 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-20 21:04:04,547 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-20 21:04:04,547 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-20 21:04:04,804 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-20 21:04:04,805 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-20 21:04:04,912 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-20 21:04:04,912 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-20 21:04:04,912 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-20 21:04:05,163 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-20 21:04:05,163 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-20 21:04:05,269 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-20 21:04:05,270 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-20 21:04:05,270 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-20 21:04:05,525 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-20 21:04:05,525 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-20 21:04:05,635 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-20 21:04:05,635 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-20 21:04:05,635 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-20 21:04:05,656 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-20 21:04:05,656 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-20 21:04:05,657 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-20 21:04:05,657 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-20 21:04:05,677 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-20 21:04:05,678 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-20 21:04:05,678 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-20 21:04:05,678 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-20 21:04:05,698 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-20 21:04:05,698 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-20 21:04:05,698 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-20 21:04:05,698 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-20 21:04:05,718 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-20 21:04:05,718 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-20 21:04:05,718 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-20 21:04:05,718 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-20 21:04:05,862 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-20 21:04:05,862 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-20 21:04:05,862 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-20 21:04:05,862 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-20 21:04:05,883 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-20 21:04:05,883 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-20 21:04:05,883 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-20 21:04:05,884 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-20 21:04:05,904 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-20 21:04:05,904 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-20 21:04:05,904 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-20 21:04:05,905 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-20 21:04:05,925 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-20 21:04:05,925 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-20 21:04:05,926 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-20 21:04:05,926 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-20 21:04:06,047 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-20 21:04:06,047 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-20 21:04:06,048 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-20 21:04:06,048 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-20 21:04:06,069 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-20 21:04:06,070 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-20 21:04:06,070 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-20 21:04:06,070 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-20 21:09:05,555 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-20 21:09:05,832 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 21:09:05,832 [test_audit.py-->line:31]:注册普通用户15854851285成功
INFO 2021-04-20 21:09:06,068 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 21:09:06,409 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 21:09:06,409 [test_audit.py-->line:47]:注册用户15823401605成功
INFO 2021-04-20 21:09:06,582 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 21:09:06,637 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:09:06,638 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:09:06,638 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-20 21:09:06,682 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-20 21:09:06,682 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-20 21:09:06,700 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-20 21:09:06,700 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-20 21:09:06,742 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:09:06,742 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:09:06,742 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-20 21:09:06,766 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-20 21:09:06,767 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-20 21:09:06,784 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-20 21:09:06,784 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-20 21:09:06,838 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:09:06,838 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:09:06,838 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-20 21:09:06,860 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-20 21:09:06,860 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-20 21:09:06,860 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-20 21:09:06,903 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:09:06,903 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:09:06,903 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-20 21:09:06,928 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-20 21:09:06,929 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-20 21:09:06,930 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-20 21:09:06,930 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 21:09:06,930 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 21:09:06,987 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:09:06,987 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:09:06,987 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-20 21:09:07,010 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-20 21:09:07,010 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-20 21:09:07,010 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-20 21:09:07,066 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:09:07,066 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:09:07,067 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-20 21:09:07,089 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-20 21:09:07,090 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-20 21:09:07,090 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-20 21:09:07,131 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:09:07,132 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:09:07,132 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-20 21:09:07,153 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-20 21:09:07,153 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-20 21:09:07,153 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-20 21:09:07,153 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-20 21:09:07,154 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-20 21:09:07,154 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-20 21:09:07,520 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-20 21:09:07,520 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-20 21:09:07,520 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-20 21:09:07,521 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-20 21:09:07,805 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-20 21:09:07,807 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-20 21:09:07,807 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-20 21:09:07,807 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-20 21:09:07,807 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-20 21:09:07,807 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 21:09:08,060 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-20 21:09:08,060 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-20 21:09:08,061 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:09:08,061 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 21:09:08,220 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-20 21:09:08,220 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-20 21:09:08,220 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:09:08,220 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-20 21:09:08,263 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-20 21:09:08,264 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-20 21:09:08,265 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-20 21:09:08,265 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-20 21:09:08,606 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-20 21:09:08,607 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-20 21:09:08,607 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-20 21:09:08,607 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-20 21:09:08,854 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-20 21:09:08,854 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-20 21:09:08,854 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-20 21:09:08,854 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-20 21:09:08,882 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-20 21:09:08,882 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-20 21:09:08,882 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-20 21:09:08,883 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-20 21:09:09,134 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-20 21:09:09,135 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-20 21:09:09,135 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-20 21:09:09,135 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-20 21:09:09,379 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-20 21:09:09,380 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-20 21:09:09,380 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-20 21:09:09,380 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-20 21:09:09,409 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-20 21:09:09,409 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-20 21:09:09,409 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-20 21:09:09,409 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 21:09:09,735 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-20 21:09:09,736 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 21:09:09,736 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 21:09:09,736 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-20 21:09:09,882 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-20 21:09:09,883 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-20 21:09:09,884 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 21:09:09,884 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-20 21:09:09,916 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-20 21:09:09,917 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-20 21:09:09,917 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-20 21:09:09,917 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-20 21:09:09,942 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-20 21:09:09,943 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-20 21:09:09,943 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-20 21:09:09,944 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-20 21:09:09,970 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-20 21:09:09,970 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-20 21:09:09,971 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-20 21:09:09,971 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-20 21:09:09,993 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-20 21:09:09,993 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-20 21:09:09,993 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-20 21:09:09,994 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-20 21:09:10,015 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-20 21:09:10,016 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-20 21:09:10,016 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-20 21:09:10,016 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-20 21:09:10,016 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 21:09:10,017 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-20 21:09:10,050 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-20 21:09:10,050 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-20 21:09:10,173 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-20 21:09:10,174 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-20 21:09:10,174 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-20 21:09:10,205 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-20 21:09:10,206 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-20 21:09:10,206 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-20 21:09:10,207 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-20 21:09:10,249 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-20 21:09:10,249 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-20 21:09:10,390 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-20 21:09:10,391 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-20 21:09:10,391 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-20 21:09:10,391 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-20 21:09:10,391 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 21:09:10,671 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-20 21:09:10,671 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-20 21:09:10,776 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-20 21:09:10,776 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:09:10,776 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 21:09:11,024 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-20 21:09:11,026 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-20 21:09:11,028 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:09:11,029 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-20 21:09:11,058 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-20 21:09:11,058 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-20 21:09:11,058 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-20 21:09:11,059 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 21:09:11,402 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-20 21:09:11,402 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 21:09:11,402 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 21:09:11,402 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-20 21:09:11,558 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-20 21:09:11,558 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-20 21:09:11,558 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 21:09:11,558 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-20 21:09:11,582 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-20 21:09:11,582 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-20 21:09:11,582 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-20 21:09:11,583 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-20 21:09:11,939 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-20 21:09:11,940 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-20 21:09:11,940 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:09:11,940 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-20 21:09:12,163 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-20 21:09:12,164 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-20 21:09:12,165 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:09:12,166 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-20 21:09:12,215 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-20 21:09:12,216 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-20 21:09:12,216 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-20 21:09:12,217 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-20 21:09:12,251 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-20 21:09:12,252 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-20 21:09:12,252 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-20 21:09:12,252 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-20 21:09:12,252 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-20 21:09:12,253 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-20 21:09:12,508 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-20 21:09:12,509 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-20 21:09:12,509 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-20 21:09:12,509 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-20 21:09:12,659 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-20 21:09:12,660 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-20 21:09:12,660 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-20 21:09:12,660 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-20 21:09:12,685 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-20 21:09:12,685 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-20 21:09:12,685 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-20 21:09:12,685 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 21:09:13,022 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-20 21:09:13,022 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 21:09:13,136 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-20 21:09:13,136 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 21:09:13,136 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-20 21:09:13,288 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-20 21:09:13,288 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-20 21:09:13,288 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-20 21:09:13,289 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-20 21:09:13,314 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-20 21:09:13,314 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-20 21:09:13,314 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-20 21:09:13,314 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-20 21:09:13,314 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-20 21:09:13,706 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 21:09:13,707 [test_recharge.py-->line:33]:注册用户15813323980成功
INFO 2021-04-20 21:09:13,887 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 21:09:13,888 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-20 21:09:13,915 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-20 21:09:13,915 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-20 21:09:13,932 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-20 21:09:13,932 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-20 21:09:13,932 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-20 21:09:13,959 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-20 21:09:13,959 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-20 21:09:13,977 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-20 21:09:13,977 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-20 21:09:13,977 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-20 21:09:14,004 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-20 21:09:14,005 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-20 21:09:14,021 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-20 21:09:14,022 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-20 21:09:14,022 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-20 21:09:14,048 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-20 21:09:14,048 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-20 21:09:14,069 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-20 21:09:14,069 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-20 21:09:14,069 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-20 21:09:14,092 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-20 21:09:14,092 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-20 21:09:14,092 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-20 21:09:14,093 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-20 21:09:14,116 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-20 21:09:14,116 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-20 21:09:14,116 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-20 21:09:14,116 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-20 21:09:14,142 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-20 21:09:14,143 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-20 21:09:14,143 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-20 21:09:14,143 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 21:09:14,143 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000376232, 'leave_amount': 503553.68, 'mobile_phone': '15813323980', 'reg_name': '小柠檬', 'reg_time': '2021-04-20 21:09:13.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 21:09:14,144 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-20 21:09:14,167 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-20 21:09:14,168 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-20 21:09:14,168 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-20 21:09:14,169 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-20 21:09:14,198 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-20 21:09:14,198 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 21:09:14,198 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-20 21:09:14,198 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 21:09:14,198 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000376232, 'leave_amount': 503553.68, 'mobile_phone': '15813323980', 'reg_name': '小柠檬', 'reg_time': '2021-04-20 21:09:13.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 21:09:14,199 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-20 21:09:14,221 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-20 21:09:14,221 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-20 21:09:14,221 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-20 21:09:14,222 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-20 21:09:14,244 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-20 21:09:14,244 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-20 21:09:14,244 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-20 21:09:14,244 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-20 21:09:14,266 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-20 21:09:14,267 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-20 21:09:14,267 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-20 21:09:14,267 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-20 21:09:14,288 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-20 21:09:14,288 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-20 21:09:14,288 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-20 21:09:14,289 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-20 21:09:14,315 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-20 21:09:14,315 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-20 21:09:14,315 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-20 21:09:14,315 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-20 21:09:14,315 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-20 21:09:14,315 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-20 21:09:14,577 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-20 21:09:14,578 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-20 21:09:14,683 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-20 21:09:14,684 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-20 21:09:14,684 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-20 21:09:14,956 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-20 21:09:14,956 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-20 21:09:15,080 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-20 21:09:15,080 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-20 21:09:15,081 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-20 21:09:15,342 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-20 21:09:15,342 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-20 21:09:15,457 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-20 21:09:15,458 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-20 21:09:15,459 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-20 21:09:15,485 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-20 21:09:15,485 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-20 21:09:15,485 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-20 21:09:15,485 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-20 21:09:15,506 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-20 21:09:15,506 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-20 21:09:15,507 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-20 21:09:15,507 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-20 21:09:15,527 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-20 21:09:15,527 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-20 21:09:15,528 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-20 21:09:15,528 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-20 21:09:15,549 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-20 21:09:15,549 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-20 21:09:15,549 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-20 21:09:15,549 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-20 21:09:15,692 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-20 21:09:15,692 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-20 21:09:15,693 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-20 21:09:15,693 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-20 21:09:15,713 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-20 21:09:15,714 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-20 21:09:15,714 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-20 21:09:15,714 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-20 21:09:15,734 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-20 21:09:15,734 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-20 21:09:15,735 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-20 21:09:15,735 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-20 21:09:15,756 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-20 21:09:15,757 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-20 21:09:15,757 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-20 21:09:15,757 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-20 21:09:15,778 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-20 21:09:15,778 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-20 21:09:15,778 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-20 21:09:15,778 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-20 21:09:15,799 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-20 21:09:15,799 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-20 21:09:15,799 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-20 21:09:15,799 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-20 21:11:11,469 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-20 21:11:11,758 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 21:11:11,759 [test_audit.py-->line:31]:注册普通用户15828627183成功
INFO 2021-04-20 21:11:11,917 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 21:11:12,192 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 21:11:12,192 [test_audit.py-->line:47]:注册用户15865433757成功
INFO 2021-04-20 21:11:12,383 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 21:11:12,425 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:11:12,425 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:11:12,425 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-20 21:11:12,464 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-20 21:11:12,464 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-20 21:11:12,491 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-20 21:11:12,491 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-20 21:11:12,545 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:11:12,546 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:11:12,546 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-20 21:11:12,569 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-20 21:11:12,570 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-20 21:11:12,595 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-20 21:11:12,595 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-20 21:11:12,652 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:11:12,653 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:11:12,653 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-20 21:11:12,672 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-20 21:11:12,672 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-20 21:11:12,672 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-20 21:11:12,712 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:11:12,713 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:11:12,714 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-20 21:11:12,737 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-20 21:11:12,737 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-20 21:11:12,738 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-20 21:11:12,738 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 21:11:12,738 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 21:11:12,795 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:11:12,796 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:11:12,797 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-20 21:11:12,822 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-20 21:11:12,823 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-20 21:11:12,823 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-20 21:11:12,876 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:11:12,877 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:11:12,877 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-20 21:11:12,896 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-20 21:11:12,896 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-20 21:11:12,896 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-20 21:11:12,950 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:11:12,950 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:11:12,950 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-20 21:11:12,970 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-20 21:11:12,970 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-20 21:11:12,970 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-20 21:11:12,970 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-20 21:11:12,971 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-20 21:11:12,971 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-20 21:11:13,232 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-20 21:11:13,232 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-20 21:11:13,232 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-20 21:11:13,232 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-20 21:11:13,550 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-20 21:11:13,551 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-20 21:11:13,552 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-20 21:11:13,552 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-20 21:11:13,552 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-20 21:11:13,552 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 21:11:13,812 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-20 21:11:13,812 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-20 21:11:13,814 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:11:13,814 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 21:11:13,957 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-20 21:11:13,957 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-20 21:11:13,958 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:11:13,958 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-20 21:11:13,997 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-20 21:11:13,997 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-20 21:11:13,997 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-20 21:11:13,997 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-20 21:11:14,255 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-20 21:11:14,256 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-20 21:11:14,257 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-20 21:11:14,257 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-20 21:11:14,406 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-20 21:11:14,406 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-20 21:11:14,406 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-20 21:11:14,406 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-20 21:11:14,432 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-20 21:11:14,433 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-20 21:11:14,433 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-20 21:11:14,433 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-20 21:11:14,691 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-20 21:11:14,691 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-20 21:11:14,691 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-20 21:11:14,691 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-20 21:11:14,833 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-20 21:11:14,833 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-20 21:11:14,834 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-20 21:11:14,834 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-20 21:11:14,860 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-20 21:11:14,860 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-20 21:11:14,860 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-20 21:11:14,860 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 21:11:15,119 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-20 21:11:15,119 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 21:11:15,120 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 21:11:15,120 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-20 21:11:15,363 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-20 21:11:15,363 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-20 21:11:15,364 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 21:11:15,364 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-20 21:11:15,388 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-20 21:11:15,389 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-20 21:11:15,389 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-20 21:11:15,390 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-20 21:11:15,415 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-20 21:11:15,416 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-20 21:11:15,416 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-20 21:11:15,416 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-20 21:11:15,438 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-20 21:11:15,438 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-20 21:11:15,438 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-20 21:11:15,438 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-20 21:11:15,459 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-20 21:11:15,459 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-20 21:11:15,459 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-20 21:11:15,459 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-20 21:11:15,480 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-20 21:11:15,481 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-20 21:11:15,481 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-20 21:11:15,481 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-20 21:11:15,481 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 21:11:15,482 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-20 21:11:15,512 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-20 21:11:15,513 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-20 21:11:15,655 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-20 21:11:15,656 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-20 21:11:15,656 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-20 21:11:15,683 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-20 21:11:15,684 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-20 21:11:15,684 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-20 21:11:15,684 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-20 21:11:15,721 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-20 21:11:15,721 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-20 21:11:15,892 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-20 21:11:15,893 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-20 21:11:15,893 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-20 21:11:15,893 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-20 21:11:15,893 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 21:11:16,146 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-20 21:11:16,146 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-20 21:11:16,256 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-20 21:11:16,257 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:11:16,258 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 21:11:16,418 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-20 21:11:16,418 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-20 21:11:16,418 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:11:16,418 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-20 21:11:16,442 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-20 21:11:16,442 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-20 21:11:16,443 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-20 21:11:16,443 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 21:11:16,698 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-20 21:11:16,698 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 21:11:16,698 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 21:11:16,698 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-20 21:11:16,842 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-20 21:11:16,842 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-20 21:11:16,842 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 21:11:16,842 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-20 21:11:16,864 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-20 21:11:16,864 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-20 21:11:16,864 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-20 21:11:16,864 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-20 21:11:17,119 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-20 21:11:17,119 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-20 21:11:17,120 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:11:17,120 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-20 21:11:17,274 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-20 21:11:17,274 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-20 21:11:17,275 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:11:17,275 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-20 21:11:17,300 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-20 21:11:17,300 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-20 21:11:17,300 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-20 21:11:17,300 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-20 21:11:17,348 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-20 21:11:17,348 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-20 21:11:17,348 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-20 21:11:17,348 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-20 21:11:17,348 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-20 21:11:17,348 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-20 21:11:17,608 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-20 21:11:17,609 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-20 21:11:17,609 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-20 21:11:17,610 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-20 21:11:17,756 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-20 21:11:17,757 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-20 21:11:17,757 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-20 21:11:17,757 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-20 21:11:17,780 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-20 21:11:17,780 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-20 21:11:17,780 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-20 21:11:17,780 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 21:11:18,033 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-20 21:11:18,034 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 21:11:18,159 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-20 21:11:18,159 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 21:11:18,159 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-20 21:11:18,308 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-20 21:11:18,308 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-20 21:11:18,308 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-20 21:11:18,308 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-20 21:11:18,330 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-20 21:11:18,331 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-20 21:11:18,331 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-20 21:11:18,331 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-20 21:11:18,331 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-20 21:11:18,623 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 21:11:18,623 [test_recharge.py-->line:33]:注册用户15880534499成功
INFO 2021-04-20 21:11:18,784 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 21:11:18,784 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-20 21:11:18,809 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-20 21:11:18,809 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-20 21:11:18,833 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-20 21:11:18,834 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-20 21:11:18,834 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-20 21:11:18,858 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-20 21:11:18,858 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-20 21:11:18,882 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-20 21:11:18,882 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-20 21:11:18,883 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-20 21:11:18,908 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-20 21:11:18,908 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-20 21:11:18,932 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-20 21:11:18,932 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-20 21:11:18,932 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-20 21:11:18,957 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-20 21:11:18,958 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-20 21:11:18,982 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-20 21:11:18,982 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-20 21:11:18,982 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-20 21:11:19,003 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-20 21:11:19,003 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-20 21:11:19,003 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-20 21:11:19,003 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-20 21:11:19,023 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-20 21:11:19,024 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-20 21:11:19,024 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-20 21:11:19,024 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-20 21:11:19,048 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-20 21:11:19,049 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-20 21:11:19,049 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-20 21:11:19,049 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 21:11:19,049 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000376247, 'leave_amount': 503553.68, 'mobile_phone': '15880534499', 'reg_name': '小柠檬', 'reg_time': '2021-04-20 21:11:18.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 21:11:19,050 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-20 21:11:19,071 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-20 21:11:19,071 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-20 21:11:19,071 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-20 21:11:19,071 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-20 21:11:19,094 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-20 21:11:19,094 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 21:11:19,095 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-20 21:11:19,095 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 21:11:19,095 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000376247, 'leave_amount': 503553.68, 'mobile_phone': '15880534499', 'reg_name': '小柠檬', 'reg_time': '2021-04-20 21:11:18.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 21:11:19,095 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-20 21:11:19,116 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-20 21:11:19,116 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-20 21:11:19,116 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-20 21:11:19,116 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-20 21:11:19,136 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-20 21:11:19,136 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-20 21:11:19,136 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-20 21:11:19,136 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-20 21:11:19,156 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-20 21:11:19,156 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-20 21:11:19,157 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-20 21:11:19,157 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-20 21:11:19,177 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-20 21:11:19,177 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-20 21:11:19,177 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-20 21:11:19,177 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-20 21:11:19,197 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-20 21:11:19,198 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-20 21:11:19,198 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-20 21:11:19,198 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-20 21:11:19,198 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-20 21:11:19,198 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-20 21:11:19,453 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-20 21:11:19,453 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-20 21:11:19,565 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-20 21:11:19,565 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-20 21:11:19,565 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-20 21:11:19,817 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-20 21:11:19,817 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-20 21:11:19,931 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-20 21:11:19,932 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-20 21:11:19,932 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-20 21:11:20,187 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-20 21:11:20,187 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-20 21:11:20,300 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-20 21:11:20,300 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-20 21:11:20,301 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-20 21:11:20,326 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-20 21:11:20,326 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-20 21:11:20,327 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-20 21:11:20,327 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-20 21:11:20,348 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-20 21:11:20,348 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-20 21:11:20,348 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-20 21:11:20,348 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-20 21:11:20,368 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-20 21:11:20,368 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-20 21:11:20,368 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-20 21:11:20,368 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-20 21:11:20,388 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-20 21:11:20,388 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-20 21:11:20,389 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-20 21:11:20,389 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-20 21:11:20,531 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-20 21:11:20,532 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-20 21:11:20,532 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-20 21:11:20,532 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-20 21:11:20,551 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-20 21:11:20,551 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-20 21:11:20,552 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-20 21:11:20,552 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-20 21:11:20,571 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-20 21:11:20,571 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-20 21:11:20,571 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-20 21:11:20,571 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-20 21:11:20,591 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-20 21:11:20,591 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-20 21:11:20,591 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-20 21:11:20,591 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-20 21:11:20,611 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-20 21:11:20,611 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-20 21:11:20,611 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-20 21:11:20,611 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-20 21:11:20,632 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-20 21:11:20,632 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-20 21:11:20,632 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-20 21:11:20,632 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-20 21:37:19,949 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-20 21:37:20,398 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 21:37:20,398 [test_audit.py-->line:31]:注册普通用户15865318512成功
INFO 2021-04-20 21:37:20,576 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 21:37:20,921 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 21:37:20,921 [test_audit.py-->line:47]:注册用户15807843511成功
INFO 2021-04-20 21:37:21,186 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 21:37:21,242 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:37:21,243 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:37:21,243 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-20 21:37:21,285 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-20 21:37:21,285 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-20 21:37:21,300 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-20 21:37:21,301 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-20 21:37:21,345 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:37:21,345 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:37:21,345 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-20 21:37:21,368 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-20 21:37:21,368 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-20 21:37:21,386 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-20 21:37:21,386 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-20 21:37:21,440 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:37:21,440 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:37:21,441 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-20 21:37:21,460 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-20 21:37:21,460 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-20 21:37:21,461 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-20 21:37:21,515 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:37:21,515 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:37:21,515 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-20 21:37:21,538 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-20 21:37:21,538 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-20 21:37:21,543 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-20 21:37:21,543 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 21:37:21,543 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 21:37:21,599 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:37:21,599 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:37:21,599 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-20 21:37:21,621 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-20 21:37:21,621 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-20 21:37:21,621 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-20 21:37:21,662 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:37:21,662 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:37:21,662 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-20 21:37:21,683 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-20 21:37:21,683 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-20 21:37:21,683 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-20 21:37:21,739 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-20 21:37:21,739 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-20 21:37:21,739 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-20 21:37:21,760 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-20 21:37:21,760 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-20 21:37:21,760 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-20 21:37:21,760 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-20 21:37:21,760 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-20 21:37:21,760 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-20 21:37:22,101 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-20 21:37:22,101 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-20 21:37:22,101 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-20 21:37:22,101 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-20 21:37:22,438 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-20 21:37:22,439 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-20 21:37:22,440 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-20 21:37:22,440 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-20 21:37:22,440 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-20 21:37:22,440 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 21:37:22,686 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-20 21:37:22,686 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-20 21:37:22,687 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:37:22,687 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 21:37:22,828 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-20 21:37:22,828 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-20 21:37:22,828 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:37:22,828 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-20 21:37:22,884 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-20 21:37:22,884 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-20 21:37:22,885 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-20 21:37:22,885 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-20 21:37:23,134 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-20 21:37:23,134 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-20 21:37:23,134 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-20 21:37:23,134 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-20 21:37:23,286 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-20 21:37:23,286 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-20 21:37:23,287 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-20 21:37:23,287 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-20 21:37:23,312 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-20 21:37:23,312 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-20 21:37:23,312 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-20 21:37:23,313 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-20 21:37:23,559 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-20 21:37:23,559 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-20 21:37:23,559 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-20 21:37:23,559 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-20 21:37:23,700 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-20 21:37:23,701 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-20 21:37:23,701 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-20 21:37:23,701 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-20 21:37:23,731 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-20 21:37:23,732 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-20 21:37:23,733 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-20 21:37:23,733 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 21:37:23,978 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-20 21:37:23,979 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 21:37:23,979 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 21:37:23,979 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-20 21:37:24,120 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-20 21:37:24,120 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-20 21:37:24,120 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 21:37:24,120 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-20 21:37:24,144 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-20 21:37:24,144 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-20 21:37:24,144 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-20 21:37:24,144 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-20 21:37:24,167 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-20 21:37:24,167 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-20 21:37:24,168 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-20 21:37:24,168 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-20 21:37:24,188 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-20 21:37:24,188 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-20 21:37:24,188 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-20 21:37:24,188 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-20 21:37:24,209 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-20 21:37:24,209 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-20 21:37:24,209 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-20 21:37:24,209 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-20 21:37:24,231 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-20 21:37:24,232 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-20 21:37:24,233 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-20 21:37:24,233 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-20 21:37:24,233 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 21:37:24,237 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-20 21:37:24,266 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-20 21:37:24,266 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-20 21:37:24,391 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-20 21:37:24,391 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-20 21:37:24,392 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-20 21:37:24,417 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-20 21:37:24,417 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-20 21:37:24,417 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-20 21:37:24,417 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-20 21:37:24,456 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-20 21:37:24,457 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-20 21:37:24,602 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-20 21:37:24,602 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-20 21:37:24,602 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-20 21:37:24,602 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-20 21:37:24,602 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 21:37:24,856 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-20 21:37:24,856 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-20 21:37:24,957 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-20 21:37:24,957 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:37:24,958 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-20 21:37:25,099 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-20 21:37:25,099 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-20 21:37:25,100 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:37:25,100 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-20 21:37:25,124 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-20 21:37:25,125 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-20 21:37:25,126 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-20 21:37:25,127 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 21:37:25,374 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-20 21:37:25,375 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 21:37:25,375 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 21:37:25,375 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-20 21:37:25,516 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-20 21:37:25,517 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-20 21:37:25,517 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 21:37:25,517 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-20 21:37:25,541 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-20 21:37:25,541 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-20 21:37:25,541 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-20 21:37:25,542 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-20 21:37:25,786 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-20 21:37:25,786 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-20 21:37:25,786 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:37:25,786 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-20 21:37:25,927 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-20 21:37:25,927 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-20 21:37:25,927 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-20 21:37:25,927 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-20 21:37:25,952 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-20 21:37:25,953 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-20 21:37:25,953 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-20 21:37:25,953 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-20 21:37:25,981 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-20 21:37:25,981 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-20 21:37:25,982 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-20 21:37:25,982 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-20 21:37:25,982 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-20 21:37:25,982 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-20 21:37:26,225 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-20 21:37:26,225 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-20 21:37:26,225 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-20 21:37:26,226 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-20 21:37:26,368 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-20 21:37:26,368 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-20 21:37:26,368 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-20 21:37:26,368 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-20 21:37:26,392 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-20 21:37:26,393 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-20 21:37:26,394 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-20 21:37:26,395 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-20 21:37:26,642 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-20 21:37:26,642 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-20 21:37:26,746 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-20 21:37:26,746 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-20 21:37:26,746 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-20 21:37:26,896 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-20 21:37:26,896 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-20 21:37:26,896 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-20 21:37:26,896 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-20 21:37:26,919 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-20 21:37:26,919 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-20 21:37:26,919 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-20 21:37:26,920 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-20 21:37:26,920 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-20 21:37:27,206 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-20 21:37:27,206 [test_recharge.py-->line:33]:注册用户15851039050成功
INFO 2021-04-20 21:37:27,369 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-20 21:37:27,369 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-20 21:37:27,397 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-20 21:37:27,397 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-20 21:37:27,413 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-20 21:37:27,413 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-20 21:37:27,413 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-20 21:37:27,440 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-20 21:37:27,440 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-20 21:37:27,457 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-20 21:37:27,457 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-20 21:37:27,458 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-20 21:37:27,483 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-20 21:37:27,483 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-20 21:37:27,500 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-20 21:37:27,500 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-20 21:37:27,500 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-20 21:37:27,527 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-20 21:37:27,527 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-20 21:37:27,544 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-20 21:37:27,544 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-20 21:37:27,544 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-20 21:37:27,564 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-20 21:37:27,565 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-20 21:37:27,565 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-20 21:37:27,565 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-20 21:37:27,585 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-20 21:37:27,586 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-20 21:37:27,586 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-20 21:37:27,586 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-20 21:37:27,611 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-20 21:37:27,611 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-20 21:37:27,612 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-20 21:37:27,612 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 21:37:27,612 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000376352, 'leave_amount': 503553.68, 'mobile_phone': '15851039050', 'reg_name': '小柠檬', 'reg_time': '2021-04-20 21:37:26.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 21:37:27,613 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-20 21:37:27,633 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-20 21:37:27,633 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-20 21:37:27,633 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-20 21:37:27,633 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-20 21:37:27,657 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-20 21:37:27,657 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day28\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 21:37:27,658 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-20 21:37:27,658 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-20 21:37:27,658 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000376352, 'leave_amount': 503553.68, 'mobile_phone': '15851039050', 'reg_name': '小柠檬', 'reg_time': '2021-04-20 21:37:26.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-20 21:37:27,658 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-20 21:37:27,679 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-20 21:37:27,679 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-20 21:37:27,679 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-20 21:37:27,679 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-20 21:37:27,700 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-20 21:37:27,700 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-20 21:37:27,700 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-20 21:37:27,700 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-20 21:37:27,721 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-20 21:37:27,721 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-20 21:37:27,721 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-20 21:37:27,721 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-20 21:37:27,742 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-20 21:37:27,742 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-20 21:37:27,742 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-20 21:37:27,742 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-20 21:37:27,764 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-20 21:37:27,764 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-20 21:37:27,764 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-20 21:37:27,765 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-20 21:37:27,765 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-20 21:37:27,765 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-20 21:37:28,010 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-20 21:37:28,010 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-20 21:37:28,113 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-20 21:37:28,113 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-20 21:37:28,113 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-20 21:37:28,362 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-20 21:37:28,362 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-20 21:37:28,466 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-20 21:37:28,467 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-20 21:37:28,467 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-20 21:37:28,815 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-20 21:37:28,815 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-20 21:37:28,922 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-20 21:37:28,922 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-20 21:37:28,922 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-20 21:37:28,942 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-20 21:37:28,942 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-20 21:37:28,942 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-20 21:37:28,942 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-20 21:37:28,963 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-20 21:37:28,963 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-20 21:37:28,964 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-20 21:37:28,964 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-20 21:37:28,989 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-20 21:37:28,989 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-20 21:37:28,989 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-20 21:37:28,989 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-20 21:37:29,009 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-20 21:37:29,009 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-20 21:37:29,010 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-20 21:37:29,010 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-20 21:37:29,152 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-20 21:37:29,152 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-20 21:37:29,152 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-20 21:37:29,153 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-20 21:37:29,172 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-20 21:37:29,173 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-20 21:37:29,173 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-20 21:37:29,173 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-20 21:37:29,194 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-20 21:37:29,195 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-20 21:37:29,195 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-20 21:37:29,195 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-20 21:37:29,214 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-20 21:37:29,215 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-20 21:37:29,215 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-20 21:37:29,215 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-20 21:37:29,235 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-20 21:37:29,235 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-20 21:37:29,235 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-20 21:37:29,235 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-20 21:37:29,255 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-20 21:37:29,256 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-20 21:37:29,256 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-20 21:37:29,256 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-21 20:20:16,101 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-21 20:20:16,409 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-21 20:20:16,409 [test_recharge.py-->line:33]:注册用户15862000851成功
INFO 2021-04-21 20:20:16,575 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-21 20:20:16,583 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-21 20:20:16,648 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-21 20:20:16,648 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-21 20:20:16,680 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-21 20:20:16,681 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-21 20:20:16,682 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-21 20:20:16,716 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-21 20:20:16,717 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-21 20:20:16,746 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-21 20:20:16,747 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-21 20:20:16,747 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-21 20:20:16,780 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-21 20:20:16,780 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-21 20:20:16,810 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-21 20:20:16,810 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-21 20:20:16,811 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-21 20:20:16,843 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-21 20:20:16,844 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-21 20:20:16,874 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-21 20:20:16,874 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-21 20:20:16,874 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-21 20:20:16,903 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-21 20:20:16,903 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-21 20:20:16,903 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-21 20:20:16,904 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-21 20:20:16,938 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-21 20:20:16,938 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-21 20:20:16,939 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-21 20:20:16,939 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-21 20:20:16,977 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-21 20:20:16,979 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 20:20:16,981 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-21 20:20:16,981 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 20:20:16,981 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000379151, 'leave_amount': 503553.68, 'mobile_phone': '15862000851', 'reg_name': '小柠檬', 'reg_time': '2021-04-21 20:20:17.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-21 20:20:16,984 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-21 20:20:17,014 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-21 20:20:17,015 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-21 20:20:17,015 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-21 20:20:17,016 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-21 20:20:17,048 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-21 20:20:17,049 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 20:20:17,049 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-21 20:20:17,050 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 20:20:17,050 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000379151, 'leave_amount': 503553.68, 'mobile_phone': '15862000851', 'reg_name': '小柠檬', 'reg_time': '2021-04-21 20:20:17.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-21 20:20:17,052 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-21 20:20:17,083 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-21 20:20:17,084 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-21 20:20:17,084 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-21 20:20:17,084 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-21 20:20:17,119 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-21 20:20:17,120 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-21 20:20:17,120 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-21 20:20:17,120 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-21 20:20:17,149 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-21 20:20:17,150 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-21 20:20:17,150 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-21 20:20:17,150 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-21 20:20:17,179 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-21 20:20:17,179 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-21 20:20:17,179 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-21 20:20:17,180 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-21 20:20:17,216 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-21 20:20:17,219 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-21 20:20:17,220 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-21 20:20:17,220 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-21 20:20:56,104 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-21 20:20:56,423 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-21 20:20:56,423 [test_recharge.py-->line:33]:注册用户15885272290成功
INFO 2021-04-21 20:20:56,595 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-21 20:20:56,597 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-21 20:20:56,655 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-21 20:20:56,655 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-21 20:20:56,684 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-21 20:20:56,684 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-21 20:20:56,685 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-21 20:20:56,719 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-21 20:20:56,719 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-21 20:20:56,749 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-21 20:20:56,749 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-21 20:20:56,749 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-21 20:20:56,783 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-21 20:20:56,783 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-21 20:20:56,812 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-21 20:20:56,813 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-21 20:20:56,816 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-21 20:20:56,859 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-21 20:20:56,860 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-21 20:20:56,890 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-21 20:20:56,891 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-21 20:20:56,891 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-21 20:20:56,920 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-21 20:20:56,920 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-21 20:20:56,920 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-21 20:20:56,920 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-21 20:20:56,948 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-21 20:20:56,949 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-21 20:20:56,949 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-21 20:20:56,950 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-21 20:20:56,985 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-21 20:20:56,986 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 20:20:56,988 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-21 20:20:56,988 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 20:20:56,988 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000379152, 'leave_amount': 503553.68, 'mobile_phone': '15885272290', 'reg_name': '小柠檬', 'reg_time': '2021-04-21 20:20:57.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-21 20:20:56,993 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-21 20:20:57,025 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-21 20:20:57,026 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-21 20:20:57,026 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-21 20:20:57,027 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-21 20:20:57,060 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-21 20:20:57,060 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 20:20:57,061 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-21 20:20:57,061 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 20:20:57,061 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000379152, 'leave_amount': 503553.68, 'mobile_phone': '15885272290', 'reg_name': '小柠檬', 'reg_time': '2021-04-21 20:20:57.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-21 20:20:57,062 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-21 20:20:57,091 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-21 20:20:57,091 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-21 20:20:57,092 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-21 20:20:57,094 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-21 20:20:57,125 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-21 20:20:57,125 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-21 20:20:57,125 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-21 20:20:57,126 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-21 20:20:57,155 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-21 20:20:57,156 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-21 20:20:57,156 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-21 20:20:57,156 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-21 20:20:57,190 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-21 20:20:57,190 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-21 20:20:57,190 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-21 20:20:57,191 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-21 20:20:57,219 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-21 20:20:57,220 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-21 20:20:57,220 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-21 20:20:57,220 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-21 20:26:41,688 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-21 20:26:42,135 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-21 20:26:42,136 [test_recharge.py-->line:33]:注册用户15856239573成功
INFO 2021-04-21 20:26:42,415 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-21 20:26:42,417 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-21 20:26:44,424 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-21 20:26:46,427 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-21 20:26:48,431 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-21 20:26:50,435 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-21 20:26:52,440 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-21 20:26:54,444 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-21 20:26:56,448 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-21 20:26:58,453 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-21 20:27:00,457 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-21 20:27:02,462 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-21 20:27:04,466 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-21 20:27:06,470 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-21 20:27:08,474 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-21 20:27:10,478 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-21 20:28:03,285 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-21 20:28:03,616 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-21 20:28:03,617 [test_recharge.py-->line:33]:注册用户15800741937成功
INFO 2021-04-21 20:28:03,813 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-21 20:28:03,816 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-21 20:28:05,821 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-21 20:28:07,824 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-21 20:28:09,829 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-21 20:28:22,679 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-21 20:28:22,976 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-21 20:28:22,976 [test_recharge.py-->line:33]:注册用户15827693989成功
INFO 2021-04-21 20:28:23,158 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-21 20:28:23,162 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-21 20:28:53,738 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-21 20:28:54,028 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-21 20:28:54,029 [test_recharge.py-->line:33]:注册用户15801957107成功
INFO 2021-04-21 20:28:54,285 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-21 20:28:54,288 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-21 20:28:56,339 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-21 20:28:56,339 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-21 20:28:56,370 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-21 20:28:56,371 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-21 20:28:56,371 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-21 20:28:58,399 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-21 20:28:58,399 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-21 20:28:58,431 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-21 20:28:58,431 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-21 20:28:58,432 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-21 20:29:00,460 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-21 20:29:00,460 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-21 20:29:00,491 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-21 20:29:00,492 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-21 20:29:00,493 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-21 20:29:02,526 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-21 20:29:02,526 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-21 20:29:02,557 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-21 20:29:02,557 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-21 20:29:02,558 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-21 20:29:04,587 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-21 20:29:04,588 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-21 20:29:04,588 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-21 20:29:04,588 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-21 20:29:06,611 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-21 20:29:06,612 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-21 20:29:06,612 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-21 20:29:06,612 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-21 20:29:08,640 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-21 20:29:08,640 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 20:29:08,642 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-21 20:29:08,642 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 20:29:08,642 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000379180, 'leave_amount': 503553.68, 'mobile_phone': '15801957107', 'reg_name': '小柠檬', 'reg_time': '2021-04-21 20:28:54.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-21 20:29:08,644 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-21 20:29:10,667 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-21 20:29:10,667 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-21 20:29:10,667 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-21 20:29:10,668 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-21 20:29:12,695 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-21 20:29:12,695 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\JetBrains\PyCharm Community Edition 2020.2.3\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 20:29:12,696 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-21 20:29:12,696 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 20:29:12,696 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000379180, 'leave_amount': 503553.68, 'mobile_phone': '15801957107', 'reg_name': '小柠檬', 'reg_time': '2021-04-21 20:28:54.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-21 20:29:12,698 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-21 20:29:14,725 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-21 20:29:14,725 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-21 20:29:14,725 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-21 20:29:14,726 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-21 20:29:16,750 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-21 20:29:16,750 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-21 20:29:16,750 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-21 20:29:16,751 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-21 20:29:18,775 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-21 20:29:18,776 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-21 20:29:18,776 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-21 20:29:18,776 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-21 20:29:20,802 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-21 20:29:20,802 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-21 20:29:20,802 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-21 20:29:20,803 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-21 20:29:22,829 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-21 20:29:22,830 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-21 20:29:22,830 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-21 20:29:22,830 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-21 21:45:18,996 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-21 21:45:19,419 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-21 21:45:19,420 [test_audit.py-->line:31]:注册普通用户15892209987成功
INFO 2021-04-21 21:45:19,691 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-21 21:45:20,107 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-21 21:45:20,107 [test_audit.py-->line:47]:注册用户15866075677成功
INFO 2021-04-21 21:45:20,302 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-21 21:45:20,359 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:45:20,359 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:45:20,359 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-21 21:45:20,412 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-21 21:45:20,413 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-21 21:45:20,429 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-21 21:45:20,429 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-21 21:45:20,473 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:45:20,474 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:45:20,474 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-21 21:45:20,504 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-21 21:45:20,505 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-21 21:45:20,521 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-21 21:45:20,521 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-21 21:45:20,577 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:45:20,577 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:45:20,577 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-21 21:45:20,604 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-21 21:45:20,605 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-21 21:45:20,605 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-21 21:45:20,663 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:45:20,663 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:45:20,663 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-21 21:45:20,692 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-21 21:45:20,692 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-21 21:45:20,694 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-21 21:45:20,694 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 21:45:20,694 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-21 21:45:20,740 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:45:20,741 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:45:20,741 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-21 21:45:20,768 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-21 21:45:20,769 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-21 21:45:20,769 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-21 21:45:20,815 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:45:20,815 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:45:20,815 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-21 21:45:20,841 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-21 21:45:20,842 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-21 21:45:20,842 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-21 21:45:20,901 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:45:20,901 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:45:20,901 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-21 21:45:20,927 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-21 21:45:20,928 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-21 21:45:20,928 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-21 21:45:20,928 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-21 21:45:20,928 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-21 21:45:20,928 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-21 21:45:21,195 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-21 21:45:21,195 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-21 21:45:21,195 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-21 21:45:21,195 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-21 21:45:21,496 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-21 21:45:21,497 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-21 21:45:21,497 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-21 21:45:21,497 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-21 21:45:21,497 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-21 21:45:21,497 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-21 21:45:21,751 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-21 21:45:21,752 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-21 21:45:21,753 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-21 21:45:21,753 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-21 21:45:21,913 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-21 21:45:21,914 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-21 21:45:21,914 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-21 21:45:21,915 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-21 21:45:21,991 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-21 21:45:21,991 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-21 21:45:21,992 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-21 21:45:21,992 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-21 21:45:22,254 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-21 21:45:22,255 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-21 21:45:22,255 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-21 21:45:22,255 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-21 21:45:22,422 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-21 21:45:22,423 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-21 21:45:22,423 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-21 21:45:22,423 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-21 21:45:22,454 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-21 21:45:22,454 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-21 21:45:22,454 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-21 21:45:22,454 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-21 21:45:22,719 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-21 21:45:22,719 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-21 21:45:22,719 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-21 21:45:22,720 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-21 21:45:22,876 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-21 21:45:22,876 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-21 21:45:22,877 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-21 21:45:22,877 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-21 21:45:22,910 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-21 21:45:22,910 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-21 21:45:22,910 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-21 21:45:22,910 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-21 21:45:23,177 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-21 21:45:23,177 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-21 21:45:23,178 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-21 21:45:23,178 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-21 21:45:23,408 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-21 21:45:23,409 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-21 21:45:23,409 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-21 21:45:23,409 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-21 21:45:23,441 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-21 21:45:23,441 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-21 21:45:23,441 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-21 21:45:23,441 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-21 21:45:23,470 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-21 21:45:23,470 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-21 21:45:23,470 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-21 21:45:23,470 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-21 21:45:23,497 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-21 21:45:23,497 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-21 21:45:23,497 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-21 21:45:23,497 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-21 21:45:23,525 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-21 21:45:23,526 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-21 21:45:23,526 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-21 21:45:23,526 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-21 21:45:23,553 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-21 21:45:23,553 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-21 21:45:23,554 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-21 21:45:23,554 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-21 21:45:23,554 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-21 21:45:23,554 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-21 21:45:23,590 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-21 21:45:23,590 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-21 21:45:23,754 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-21 21:45:23,754 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-21 21:45:23,754 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-21 21:45:23,788 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-21 21:45:23,788 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-21 21:45:23,788 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-21 21:45:23,789 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-21 21:45:23,839 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-21 21:45:23,840 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-21 21:45:23,982 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-21 21:45:23,982 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-21 21:45:23,983 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-21 21:45:23,983 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-21 21:45:23,983 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-21 21:45:24,397 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-21 21:45:24,397 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-21 21:45:24,503 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-21 21:45:24,504 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-21 21:45:24,504 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-21 21:45:24,674 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-21 21:45:24,675 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-21 21:45:24,675 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-21 21:45:24,675 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-21 21:45:24,706 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-21 21:45:24,706 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-21 21:45:24,706 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-21 21:45:24,706 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-21 21:45:24,972 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-21 21:45:24,972 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-21 21:45:24,972 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-21 21:45:24,972 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-21 21:45:25,132 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-21 21:45:25,132 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-21 21:45:25,132 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-21 21:45:25,133 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-21 21:45:25,162 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-21 21:45:25,162 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-21 21:45:25,162 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-21 21:45:25,163 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-21 21:45:25,432 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-21 21:45:25,433 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-21 21:45:25,433 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-21 21:45:25,433 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-21 21:45:25,591 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-21 21:45:25,591 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-21 21:45:25,592 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-21 21:45:25,592 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-21 21:45:25,623 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-21 21:45:25,624 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-21 21:45:25,625 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-21 21:45:25,625 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-21 21:45:25,664 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-21 21:45:25,665 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-21 21:45:25,665 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-21 21:45:25,665 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-21 21:45:25,665 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-21 21:45:25,665 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-21 21:45:25,923 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-21 21:45:25,923 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-21 21:45:25,923 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-21 21:45:25,924 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-21 21:45:26,089 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-21 21:45:26,090 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-21 21:45:26,090 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-21 21:45:26,090 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-21 21:45:26,120 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-21 21:45:26,120 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-21 21:45:26,121 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-21 21:45:26,121 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-21 21:45:26,380 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-21 21:45:26,380 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-21 21:45:26,491 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-21 21:45:26,491 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-21 21:45:26,491 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-21 21:45:26,648 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-21 21:45:26,648 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-21 21:45:26,648 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-21 21:45:26,648 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-21 21:45:26,678 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-21 21:45:26,678 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-21 21:45:26,678 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-21 21:45:26,678 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-21 21:45:26,678 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-21 21:45:26,961 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-21 21:45:26,961 [test_recharge.py-->line:33]:注册用户15830005958成功
INFO 2021-04-21 21:45:27,125 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-21 21:45:27,126 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-21 21:45:29,313 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-21 21:45:29,313 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-21 21:45:29,329 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-21 21:45:29,329 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-21 21:45:29,329 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-21 21:45:31,407 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-21 21:45:31,408 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-21 21:45:31,425 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-21 21:45:31,425 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-21 21:45:31,426 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-21 21:45:33,491 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-21 21:45:33,491 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-21 21:45:33,507 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-21 21:45:33,508 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-21 21:45:33,508 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-21 21:45:35,573 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-21 21:45:35,573 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-21 21:45:35,589 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-21 21:45:35,590 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-21 21:45:35,590 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-21 21:45:37,651 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-21 21:45:37,651 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-21 21:45:37,651 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-21 21:45:37,651 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-21 21:45:39,710 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-21 21:45:39,710 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-21 21:45:39,710 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-21 21:45:39,710 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-21 21:45:41,781 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-21 21:45:41,781 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-21 21:45:41,782 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-21 21:45:41,782 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 21:45:41,782 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000379350, 'leave_amount': 503553.68, 'mobile_phone': '15830005958', 'reg_name': '小柠檬', 'reg_time': '2021-04-21 21:45:27.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-21 21:45:41,782 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-21 21:45:43,843 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-21 21:45:43,844 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-21 21:45:43,844 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-21 21:45:43,844 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-21 21:45:45,911 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-21 21:45:45,912 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 21:45:45,912 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-21 21:45:45,912 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 21:45:45,912 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000379350, 'leave_amount': 503553.68, 'mobile_phone': '15830005958', 'reg_name': '小柠檬', 'reg_time': '2021-04-21 21:45:27.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-21 21:45:45,912 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-21 21:45:47,972 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-21 21:45:47,972 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-21 21:45:47,972 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-21 21:45:47,972 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-21 21:45:50,037 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-21 21:45:50,037 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-21 21:45:50,037 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-21 21:45:50,037 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-21 21:45:52,104 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-21 21:45:52,104 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-21 21:45:52,106 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-21 21:45:52,106 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-21 21:45:54,167 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-21 21:45:54,167 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-21 21:45:54,167 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-21 21:45:54,168 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-21 21:45:56,234 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-21 21:45:56,234 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-21 21:45:56,235 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-21 21:45:56,235 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-21 21:45:56,235 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-21 21:45:56,235 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-21 21:45:56,542 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-21 21:45:56,542 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-21 21:45:56,651 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-21 21:45:56,652 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-21 21:45:56,652 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-21 21:45:56,914 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-21 21:45:56,914 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-21 21:45:57,078 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-21 21:45:57,078 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-21 21:45:57,078 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-21 21:45:57,380 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-21 21:45:57,380 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-21 21:45:57,513 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-21 21:45:57,513 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-21 21:45:57,514 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-21 21:45:57,543 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-21 21:45:57,543 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-21 21:45:57,543 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-21 21:45:57,543 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-21 21:45:57,569 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-21 21:45:57,569 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-21 21:45:57,570 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-21 21:45:57,570 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-21 21:45:57,597 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-21 21:45:57,597 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-21 21:45:57,598 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-21 21:45:57,598 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-21 21:45:57,625 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-21 21:45:57,625 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-21 21:45:57,625 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-21 21:45:57,625 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-21 21:45:57,775 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-21 21:45:57,777 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-21 21:45:57,777 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-21 21:45:57,777 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-21 21:45:57,809 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-21 21:45:57,810 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-21 21:45:57,810 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-21 21:45:57,810 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-21 21:45:57,838 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-21 21:45:57,838 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-21 21:45:57,838 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-21 21:45:57,838 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-21 21:45:57,867 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-21 21:45:57,867 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-21 21:45:57,867 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-21 21:45:57,867 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-21 21:45:57,894 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-21 21:45:57,894 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-21 21:45:57,894 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-21 21:45:57,895 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-21 21:45:57,923 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-21 21:45:57,924 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-21 21:45:57,924 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-21 21:45:57,924 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-21 21:47:43,262 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-21 21:47:43,557 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-21 21:47:43,557 [test_audit.py-->line:31]:注册普通用户15801514814成功
INFO 2021-04-21 21:47:43,718 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-21 21:47:43,993 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-21 21:47:43,993 [test_audit.py-->line:47]:注册用户15847083513成功
INFO 2021-04-21 21:47:44,171 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-21 21:47:44,224 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:47:44,225 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:47:44,225 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-21 21:47:44,267 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-21 21:47:44,267 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-21 21:47:44,290 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-21 21:47:44,291 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-21 21:47:44,330 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:47:44,331 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:47:44,331 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-21 21:47:44,354 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-21 21:47:44,354 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-21 21:47:44,376 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-21 21:47:44,376 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-21 21:47:44,421 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:47:44,422 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:47:44,422 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-21 21:47:44,443 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-21 21:47:44,443 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-21 21:47:44,443 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-21 21:47:44,499 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:47:44,499 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:47:44,499 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-21 21:47:44,523 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-21 21:47:44,523 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-21 21:47:44,524 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-21 21:47:44,524 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 21:47:44,524 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-21 21:47:44,579 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:47:44,579 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:47:44,579 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-21 21:47:44,601 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-21 21:47:44,601 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-21 21:47:44,601 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-21 21:47:44,660 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:47:44,660 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:47:44,660 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-21 21:47:44,681 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-21 21:47:44,682 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-21 21:47:44,682 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-21 21:47:44,738 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:47:44,739 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:47:44,739 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-21 21:47:44,763 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-21 21:47:44,763 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-21 21:47:44,763 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-21 21:47:44,763 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-21 21:47:44,764 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-21 21:47:44,764 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-21 21:47:45,008 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-21 21:47:45,008 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-21 21:47:45,009 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-21 21:47:45,009 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-21 21:47:45,319 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-21 21:47:45,321 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-21 21:47:45,321 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-21 21:47:45,321 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-21 21:47:45,321 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-21 21:47:45,321 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-21 21:47:45,581 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-21 21:47:45,581 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-21 21:47:45,582 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-21 21:47:45,582 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-21 21:47:45,728 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-21 21:47:45,728 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-21 21:47:45,729 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-21 21:47:45,729 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-21 21:47:45,777 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-21 21:47:45,778 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-21 21:47:45,778 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-21 21:47:45,778 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-21 21:47:46,033 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-21 21:47:46,033 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-21 21:47:46,033 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-21 21:47:46,034 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-21 21:47:46,181 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-21 21:47:46,181 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-21 21:47:46,181 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-21 21:47:46,182 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-21 21:47:46,208 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-21 21:47:46,209 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-21 21:47:46,209 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-21 21:47:46,209 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-21 21:47:46,463 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-21 21:47:46,463 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-21 21:47:46,464 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-21 21:47:46,464 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-21 21:47:46,626 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-21 21:47:46,626 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-21 21:47:46,626 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-21 21:47:46,626 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-21 21:47:46,653 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-21 21:47:46,653 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-21 21:47:46,654 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-21 21:47:46,654 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-21 21:47:46,909 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-21 21:47:46,909 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-21 21:47:46,910 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-21 21:47:46,910 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-21 21:47:47,060 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-21 21:47:47,060 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-21 21:47:47,060 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-21 21:47:47,061 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-21 21:47:47,085 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-21 21:47:47,085 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-21 21:47:47,085 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-21 21:47:47,085 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-21 21:47:47,110 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-21 21:47:47,110 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-21 21:47:47,110 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-21 21:47:47,111 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-21 21:47:47,133 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-21 21:47:47,134 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-21 21:47:47,134 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-21 21:47:47,134 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-21 21:47:47,157 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-21 21:47:47,158 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-21 21:47:47,158 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-21 21:47:47,158 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-21 21:47:47,180 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-21 21:47:47,180 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-21 21:47:47,181 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-21 21:47:47,181 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-21 21:47:47,181 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-21 21:47:47,182 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-21 21:47:47,214 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-21 21:47:47,215 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-21 21:47:47,357 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-21 21:47:47,357 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-21 21:47:47,357 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-21 21:47:47,385 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-21 21:47:47,387 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-21 21:47:47,388 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-21 21:47:47,389 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-21 21:47:47,435 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-21 21:47:47,436 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-21 21:47:47,595 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-21 21:47:47,595 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-21 21:47:47,596 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-21 21:47:47,596 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-21 21:47:47,596 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-21 21:47:47,870 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-21 21:47:47,870 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-21 21:47:47,979 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-21 21:47:47,979 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-21 21:47:47,979 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-21 21:47:48,123 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-21 21:47:48,124 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-21 21:47:48,124 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-21 21:47:48,124 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-21 21:47:48,148 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-21 21:47:48,149 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-21 21:47:48,149 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-21 21:47:48,150 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-21 21:47:48,405 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-21 21:47:48,405 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-21 21:47:48,405 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-21 21:47:48,405 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-21 21:47:48,549 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-21 21:47:48,550 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-21 21:47:48,551 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-21 21:47:48,552 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-21 21:47:48,580 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-21 21:47:48,581 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-21 21:47:48,582 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-21 21:47:48,582 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-21 21:47:48,834 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-21 21:47:48,834 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-21 21:47:48,834 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-21 21:47:48,835 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-21 21:47:48,980 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-21 21:47:48,981 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-21 21:47:48,985 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-21 21:47:48,986 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-21 21:47:49,018 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-21 21:47:49,018 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-21 21:47:49,018 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-21 21:47:49,019 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-21 21:47:49,050 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-21 21:47:49,051 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-21 21:47:49,051 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-21 21:47:49,051 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-21 21:47:49,051 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-21 21:47:49,051 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-21 21:47:49,304 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-21 21:47:49,304 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-21 21:47:49,304 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-21 21:47:49,304 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-21 21:47:49,448 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-21 21:47:49,448 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-21 21:47:49,448 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-21 21:47:49,449 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-21 21:47:49,475 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-21 21:47:49,475 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-21 21:47:49,475 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-21 21:47:49,475 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-21 21:47:49,729 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-21 21:47:49,730 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-21 21:47:49,839 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-21 21:47:49,839 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-21 21:47:49,840 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-21 21:47:49,984 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-21 21:47:49,984 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-21 21:47:49,984 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-21 21:47:49,985 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-21 21:47:50,012 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-21 21:47:50,012 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-21 21:47:50,012 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-21 21:47:50,012 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-21 21:47:50,013 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-21 21:47:50,304 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-21 21:47:50,304 [test_recharge.py-->line:33]:注册用户15831648395成功
INFO 2021-04-21 21:47:50,484 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-21 21:47:50,485 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-21 21:47:52,620 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-21 21:47:52,621 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-21 21:47:52,642 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-21 21:47:52,642 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-21 21:47:52,642 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-21 21:47:54,697 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-21 21:47:54,697 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-21 21:47:54,718 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-21 21:47:54,718 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-21 21:47:54,719 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-21 21:47:56,770 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-21 21:47:56,771 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-21 21:47:56,792 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-21 21:47:56,792 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-21 21:47:56,792 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-21 21:47:58,850 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-21 21:47:58,851 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-21 21:47:58,872 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-21 21:47:58,872 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-21 21:47:58,873 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-21 21:48:00,922 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-21 21:48:00,923 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-21 21:48:00,923 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-21 21:48:00,923 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-21 21:48:02,972 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-21 21:48:02,973 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-21 21:48:02,973 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-21 21:48:02,973 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-21 21:48:05,031 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-21 21:48:05,032 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-21 21:48:05,032 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-21 21:48:05,032 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 21:48:05,032 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000379366, 'leave_amount': 503553.68, 'mobile_phone': '15831648395', 'reg_name': '小柠檬', 'reg_time': '2021-04-21 21:47:50.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-21 21:48:05,033 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-21 21:48:07,080 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-21 21:48:07,081 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-21 21:48:07,081 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-21 21:48:07,081 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-21 21:48:09,134 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-21 21:48:09,135 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 21:48:09,135 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-21 21:48:09,136 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 21:48:09,136 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000379366, 'leave_amount': 503553.68, 'mobile_phone': '15831648395', 'reg_name': '小柠檬', 'reg_time': '2021-04-21 21:47:50.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-21 21:48:09,136 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-21 21:48:11,183 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-21 21:48:11,183 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-21 21:48:11,183 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-21 21:48:11,183 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-21 21:48:13,237 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-21 21:48:13,237 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-21 21:48:13,237 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-21 21:48:13,237 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-21 21:48:15,289 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-21 21:48:15,289 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-21 21:48:15,290 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-21 21:48:15,290 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-21 21:48:17,344 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-21 21:48:17,344 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-21 21:48:17,344 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-21 21:48:17,344 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-21 21:48:19,422 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-21 21:48:19,423 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-21 21:48:19,423 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-21 21:48:19,423 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-21 21:48:19,423 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-21 21:48:19,424 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-21 21:48:19,706 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-21 21:48:19,707 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-21 21:48:19,818 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-21 21:48:19,819 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-21 21:48:19,819 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-21 21:48:20,075 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-21 21:48:20,075 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-21 21:48:20,203 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-21 21:48:20,203 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-21 21:48:20,203 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-21 21:48:20,482 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-21 21:48:20,482 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-21 21:48:20,608 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-21 21:48:20,608 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-21 21:48:20,608 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-21 21:48:20,630 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-21 21:48:20,631 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-21 21:48:20,631 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-21 21:48:20,632 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-21 21:48:20,655 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-21 21:48:20,655 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-21 21:48:20,655 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-21 21:48:20,655 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-21 21:48:20,677 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-21 21:48:20,677 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-21 21:48:20,677 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-21 21:48:20,678 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-21 21:48:20,699 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-21 21:48:20,700 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-21 21:48:20,700 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-21 21:48:20,701 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-21 21:48:20,941 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-21 21:48:20,941 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-21 21:48:20,941 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-21 21:48:20,942 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-21 21:48:20,962 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-21 21:48:20,962 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-21 21:48:20,962 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-21 21:48:20,962 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-21 21:48:20,984 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-21 21:48:20,984 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-21 21:48:20,984 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-21 21:48:20,985 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-21 21:48:21,008 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-21 21:48:21,008 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-21 21:48:21,009 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-21 21:48:21,009 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-21 21:48:21,031 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-21 21:48:21,031 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-21 21:48:21,031 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-21 21:48:21,032 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-21 21:48:21,053 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-21 21:48:21,053 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-21 21:48:21,053 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-21 21:48:21,054 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-21 21:51:32,009 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-21 21:51:32,316 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-21 21:51:32,316 [test_audit.py-->line:31]:注册普通用户15809500063成功
INFO 2021-04-21 21:51:32,518 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-21 21:51:32,828 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-21 21:51:32,828 [test_audit.py-->line:47]:注册用户15837679765成功
INFO 2021-04-21 21:51:33,037 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-21 21:51:33,080 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:51:33,081 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:51:33,081 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-21 21:51:33,129 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-21 21:51:33,130 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-21 21:51:33,153 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-21 21:51:33,153 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-21 21:51:33,196 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:51:33,196 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:51:33,196 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-21 21:51:33,223 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-21 21:51:33,223 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-21 21:51:33,248 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-21 21:51:33,248 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-21 21:51:33,306 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:51:33,307 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:51:33,307 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-21 21:51:33,331 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-21 21:51:33,331 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-21 21:51:33,331 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-21 21:51:33,387 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:51:33,388 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:51:33,388 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-21 21:51:33,423 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-21 21:51:33,424 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-21 21:51:33,425 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-21 21:51:33,425 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 21:51:33,425 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-21 21:51:33,470 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:51:33,471 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:51:33,471 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-21 21:51:33,495 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-21 21:51:33,495 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-21 21:51:33,495 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-21 21:51:33,537 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:51:33,537 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:51:33,537 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-21 21:51:33,562 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-21 21:51:33,562 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-21 21:51:33,562 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-21 21:51:33,617 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:51:33,618 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:51:33,618 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-21 21:51:33,643 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-21 21:51:33,644 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-21 21:51:33,644 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-21 21:51:33,644 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-21 21:51:33,644 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-21 21:51:33,644 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-21 21:51:33,911 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-21 21:51:33,911 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-21 21:51:33,912 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-21 21:51:33,912 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-21 21:51:34,233 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-21 21:51:34,235 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-21 21:51:34,235 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-21 21:51:34,236 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-21 21:51:34,236 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-21 21:51:34,236 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-21 21:51:34,501 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-21 21:51:34,502 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-21 21:51:34,502 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-21 21:51:34,502 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-21 21:51:34,686 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-21 21:51:34,686 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-21 21:51:34,687 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-21 21:51:34,687 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-21 21:51:34,735 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-21 21:51:34,735 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-21 21:51:34,735 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-21 21:51:34,735 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-21 21:51:35,002 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-21 21:51:35,002 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-21 21:51:35,003 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-21 21:51:35,003 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-21 21:51:35,156 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-21 21:51:35,157 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-21 21:51:35,157 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-21 21:51:35,157 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-21 21:51:35,186 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-21 21:51:35,187 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-21 21:51:35,187 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-21 21:51:35,187 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-21 21:51:35,526 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-21 21:51:35,527 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-21 21:51:35,527 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-21 21:51:35,527 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-21 21:51:35,689 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-21 21:51:35,690 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-21 21:51:35,690 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-21 21:51:35,691 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-21 21:51:35,720 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-21 21:51:35,720 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-21 21:51:35,720 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-21 21:51:35,720 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-21 21:51:36,045 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-21 21:51:36,046 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-21 21:51:36,046 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-21 21:51:36,046 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-21 21:51:36,274 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-21 21:51:36,274 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-21 21:51:36,275 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-21 21:51:36,275 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-21 21:51:36,304 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-21 21:51:36,304 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-21 21:51:36,304 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-21 21:51:36,305 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-21 21:51:36,337 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-21 21:51:36,337 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-21 21:51:36,337 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-21 21:51:36,337 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-21 21:51:36,362 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-21 21:51:36,362 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-21 21:51:36,362 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-21 21:51:36,362 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-21 21:51:36,389 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-21 21:51:36,389 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-21 21:51:36,389 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-21 21:51:36,390 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-21 21:51:36,417 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-21 21:51:36,417 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-21 21:51:36,418 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-21 21:51:36,418 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-21 21:51:36,418 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-21 21:51:36,419 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-21 21:51:36,453 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-21 21:51:36,453 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-21 21:51:36,596 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-21 21:51:36,597 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-21 21:51:36,597 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-21 21:51:36,627 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-21 21:51:36,627 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-21 21:51:36,627 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-21 21:51:36,627 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-21 21:51:36,669 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-21 21:51:36,670 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-21 21:51:36,841 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-21 21:51:36,841 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-21 21:51:36,841 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-21 21:51:36,841 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-21 21:51:36,841 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-21 21:51:37,181 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-21 21:51:37,182 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-21 21:51:37,353 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-21 21:51:37,353 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-21 21:51:37,353 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-21 21:51:37,579 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-21 21:51:37,580 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-21 21:51:37,580 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-21 21:51:37,581 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-21 21:51:37,610 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-21 21:51:37,610 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-21 21:51:37,611 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-21 21:51:37,611 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-21 21:51:37,887 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-21 21:51:37,888 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-21 21:51:37,888 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-21 21:51:37,888 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-21 21:51:38,113 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-21 21:51:38,113 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-21 21:51:38,114 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-21 21:51:38,114 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-21 21:51:38,141 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-21 21:51:38,141 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-21 21:51:38,141 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-21 21:51:38,142 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-21 21:51:38,433 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-21 21:51:38,433 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-21 21:51:38,433 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-21 21:51:38,433 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-21 21:51:38,586 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-21 21:51:38,586 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-21 21:51:38,586 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-21 21:51:38,587 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-21 21:51:38,615 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-21 21:51:38,616 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-21 21:51:38,616 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-21 21:51:38,616 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-21 21:51:38,648 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-21 21:51:38,648 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-21 21:51:38,648 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-21 21:51:38,648 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-21 21:51:38,648 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-21 21:51:38,649 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-21 21:51:38,973 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-21 21:51:38,973 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-21 21:51:38,973 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-21 21:51:38,973 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-21 21:51:39,123 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-21 21:51:39,123 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-21 21:51:39,123 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-21 21:51:39,124 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-21 21:51:39,151 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-21 21:51:39,152 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-21 21:51:39,152 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-21 21:51:39,152 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-21 21:51:39,416 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-21 21:51:39,416 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-21 21:51:39,530 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-21 21:51:39,530 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-21 21:51:39,530 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-21 21:51:39,688 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-21 21:51:39,689 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-21 21:51:39,689 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-21 21:51:39,689 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-21 21:51:39,718 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-21 21:51:39,718 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-21 21:51:39,718 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-21 21:51:39,718 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-21 21:51:39,718 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-21 21:51:40,070 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-21 21:51:40,070 [test_recharge.py-->line:33]:注册用户15800249970成功
INFO 2021-04-21 21:51:40,317 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-21 21:51:40,318 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-21 21:51:42,446 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-21 21:51:42,446 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-21 21:51:42,471 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-21 21:51:42,471 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-21 21:51:42,471 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-21 21:51:44,529 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-21 21:51:44,529 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-21 21:51:44,553 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-21 21:51:44,553 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-21 21:51:44,553 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-21 21:51:46,625 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-21 21:51:46,625 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-21 21:51:46,649 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-21 21:51:46,649 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-21 21:51:46,649 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-21 21:51:48,709 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-21 21:51:48,710 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-21 21:51:48,734 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-21 21:51:48,734 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-21 21:51:48,734 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-21 21:51:50,800 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-21 21:51:50,801 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-21 21:51:50,801 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-21 21:51:50,801 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-21 21:51:52,861 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-21 21:51:52,861 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-21 21:51:52,861 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-21 21:51:52,862 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-21 21:51:54,918 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-21 21:51:54,919 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-21 21:51:54,919 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-21 21:51:54,919 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 21:51:54,919 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000379393, 'leave_amount': 503553.68, 'mobile_phone': '15800249970', 'reg_name': '小柠檬', 'reg_time': '2021-04-21 21:51:40.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-21 21:51:54,920 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-21 21:51:56,967 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-21 21:51:56,967 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-21 21:51:56,967 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-21 21:51:56,968 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-21 21:51:59,021 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-21 21:51:59,022 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 21:51:59,022 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-21 21:51:59,022 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 21:51:59,022 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000379393, 'leave_amount': 503553.68, 'mobile_phone': '15800249970', 'reg_name': '小柠檬', 'reg_time': '2021-04-21 21:51:40.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-21 21:51:59,023 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-21 21:52:01,074 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-21 21:52:01,074 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-21 21:52:01,074 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-21 21:52:01,074 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-21 21:52:03,126 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-21 21:52:03,126 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-21 21:52:03,127 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-21 21:52:03,127 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-21 21:52:05,180 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-21 21:52:05,180 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-21 21:52:05,180 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-21 21:52:05,180 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-21 21:52:07,263 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-21 21:52:07,263 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-21 21:52:07,263 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-21 21:52:07,264 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-21 21:52:09,316 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-21 21:52:09,317 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-21 21:52:09,317 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-21 21:52:09,317 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-21 21:52:09,317 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-21 21:52:09,318 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-21 21:52:09,598 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-21 21:52:09,598 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-21 21:52:09,727 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-21 21:52:09,727 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-21 21:52:09,727 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-21 21:52:10,018 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-21 21:52:10,018 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-21 21:52:10,158 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-21 21:52:10,158 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-21 21:52:10,158 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-21 21:52:10,467 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-21 21:52:10,467 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-21 21:52:10,591 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-21 21:52:10,591 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-21 21:52:10,592 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-21 21:52:10,615 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-21 21:52:10,617 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-21 21:52:10,617 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-21 21:52:10,618 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-21 21:52:10,645 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-21 21:52:10,646 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-21 21:52:10,646 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-21 21:52:10,646 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-21 21:52:10,670 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-21 21:52:10,670 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-21 21:52:10,670 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-21 21:52:10,670 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-21 21:52:10,694 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-21 21:52:10,694 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-21 21:52:10,694 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-21 21:52:10,694 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-21 21:52:10,840 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-21 21:52:10,840 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-21 21:52:10,840 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-21 21:52:10,841 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-21 21:52:10,864 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-21 21:52:10,865 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-21 21:52:10,865 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-21 21:52:10,865 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-21 21:52:10,892 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-21 21:52:10,892 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-21 21:52:10,892 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-21 21:52:10,893 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-21 21:52:10,919 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-21 21:52:10,920 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-21 21:52:10,920 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-21 21:52:10,920 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-21 21:52:10,945 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-21 21:52:10,946 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-21 21:52:10,946 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-21 21:52:10,946 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-21 21:52:10,973 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-21 21:52:10,973 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-21 21:52:10,974 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-21 21:52:10,974 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-21 21:52:14,862 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-21 21:52:15,138 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-21 21:52:15,139 [test_audit.py-->line:31]:注册普通用户15824851143成功
INFO 2021-04-21 21:52:15,304 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-21 21:52:15,583 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-21 21:52:15,584 [test_audit.py-->line:47]:注册用户15824322149成功
INFO 2021-04-21 21:52:15,781 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-21 21:52:15,829 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:52:15,830 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:52:15,830 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-21 21:52:15,888 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-21 21:52:15,889 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-21 21:52:15,911 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-21 21:52:15,912 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-21 21:52:15,961 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:52:15,962 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:52:15,962 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-21 21:52:15,995 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-21 21:52:15,995 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-21 21:52:16,020 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-21 21:52:16,021 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-21 21:52:16,088 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:52:16,089 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:52:16,089 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-21 21:52:16,121 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-21 21:52:16,121 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-21 21:52:16,121 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-21 21:52:16,162 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:52:16,162 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:52:16,162 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-21 21:52:16,196 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-21 21:52:16,197 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-21 21:52:16,200 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-21 21:52:16,200 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 21:52:16,200 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-21 21:52:16,251 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:52:16,252 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:52:16,252 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-21 21:52:16,281 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-21 21:52:16,281 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-21 21:52:16,281 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-21 21:52:16,342 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:52:16,343 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:52:16,343 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-21 21:52:16,370 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-21 21:52:16,370 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-21 21:52:16,371 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-21 21:52:16,416 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:52:16,416 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:52:16,416 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-21 21:52:16,446 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-21 21:52:16,447 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-21 21:52:16,447 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-21 21:52:16,447 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-21 21:52:16,448 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-21 21:52:16,448 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-21 21:52:16,735 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-21 21:52:16,735 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-21 21:52:16,735 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-21 21:52:16,736 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-21 21:52:17,059 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-21 21:52:17,061 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-21 21:52:17,061 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-21 21:52:17,061 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-21 21:52:17,061 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-21 21:52:17,061 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-21 21:52:17,337 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-21 21:52:17,337 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-21 21:52:17,338 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-21 21:52:17,338 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-21 21:52:17,504 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-21 21:52:17,504 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-21 21:52:17,505 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-21 21:52:17,505 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-21 21:52:17,558 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-21 21:52:17,558 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-21 21:52:17,558 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-21 21:52:17,559 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-21 21:52:17,831 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-21 21:52:17,831 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-21 21:52:17,831 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-21 21:52:17,831 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-21 21:52:17,994 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-21 21:52:17,995 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-21 21:52:17,995 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-21 21:52:17,995 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-21 21:52:18,035 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-21 21:52:18,035 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-21 21:52:18,035 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-21 21:52:18,035 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-21 21:52:18,311 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-21 21:52:18,311 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-21 21:52:18,311 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-21 21:52:18,311 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-21 21:52:18,470 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-21 21:52:18,470 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-21 21:52:18,470 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-21 21:52:18,471 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-21 21:52:18,504 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-21 21:52:18,504 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-21 21:52:18,504 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-21 21:52:18,504 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-21 21:52:18,768 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-21 21:52:18,769 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-21 21:52:18,770 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-21 21:52:18,770 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-21 21:52:18,974 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-21 21:52:18,974 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-21 21:52:18,974 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-21 21:52:18,974 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-21 21:52:19,007 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-21 21:52:19,008 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-21 21:52:19,008 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-21 21:52:19,008 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-21 21:52:19,038 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-21 21:52:19,039 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-21 21:52:19,039 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-21 21:52:19,039 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-21 21:52:19,067 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-21 21:52:19,068 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-21 21:52:19,068 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-21 21:52:19,068 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-21 21:52:19,098 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-21 21:52:19,099 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-21 21:52:19,099 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-21 21:52:19,099 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-21 21:52:19,129 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-21 21:52:19,129 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-21 21:52:19,130 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-21 21:52:19,130 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-21 21:52:19,130 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-21 21:52:19,131 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-21 21:52:19,167 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-21 21:52:19,167 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-21 21:52:19,307 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-21 21:52:19,307 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-21 21:52:19,307 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-21 21:52:19,338 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-21 21:52:19,338 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-21 21:52:19,338 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-21 21:52:19,339 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-21 21:52:19,385 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-21 21:52:19,385 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-21 21:52:19,554 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-21 21:52:19,554 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-21 21:52:19,555 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-21 21:52:19,555 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-21 21:52:19,555 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-21 21:52:19,826 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-21 21:52:19,827 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-21 21:52:19,938 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-21 21:52:19,938 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-21 21:52:19,938 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-21 21:52:20,102 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-21 21:52:20,102 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-21 21:52:20,103 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-21 21:52:20,103 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-21 21:52:20,133 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-21 21:52:20,133 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-21 21:52:20,133 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-21 21:52:20,133 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-21 21:52:20,418 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-21 21:52:20,418 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-21 21:52:20,418 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-21 21:52:20,419 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-21 21:52:20,572 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-21 21:52:20,572 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-21 21:52:20,573 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-21 21:52:20,573 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-21 21:52:20,603 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-21 21:52:20,603 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-21 21:52:20,603 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-21 21:52:20,603 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-21 21:52:20,895 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-21 21:52:20,895 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-21 21:52:20,896 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-21 21:52:20,896 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-21 21:52:21,092 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-21 21:52:21,092 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-21 21:52:21,093 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-21 21:52:21,093 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-21 21:52:21,129 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-21 21:52:21,130 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-21 21:52:21,130 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-21 21:52:21,130 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-21 21:52:21,168 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-21 21:52:21,168 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-21 21:52:21,168 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-21 21:52:21,169 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-21 21:52:21,169 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-21 21:52:21,169 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-21 21:52:21,484 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-21 21:52:21,485 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-21 21:52:21,485 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-21 21:52:21,485 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-21 21:52:21,648 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-21 21:52:21,648 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-21 21:52:21,648 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-21 21:52:21,649 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-21 21:52:21,680 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-21 21:52:21,680 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-21 21:52:21,680 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-21 21:52:21,680 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-21 21:52:21,961 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-21 21:52:21,962 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-21 21:52:22,075 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-21 21:52:22,075 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-21 21:52:22,075 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-21 21:52:22,229 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-21 21:52:22,230 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-21 21:52:22,230 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-21 21:52:22,230 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-21 21:52:22,260 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-21 21:52:22,261 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-21 21:52:22,261 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-21 21:52:22,262 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-21 21:52:22,262 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-21 21:52:22,537 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-21 21:52:22,537 [test_recharge.py-->line:33]:注册用户15829413452成功
INFO 2021-04-21 21:52:22,753 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-21 21:52:22,753 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-21 21:52:24,855 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-21 21:52:24,855 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-21 21:52:24,878 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-21 21:52:24,878 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-21 21:52:24,878 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-21 21:52:26,931 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-21 21:52:26,931 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-21 21:52:26,954 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-21 21:52:26,954 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-21 21:52:26,955 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-21 21:52:29,006 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-21 21:52:29,006 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-21 21:52:29,029 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-21 21:52:29,029 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-21 21:52:29,030 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-21 21:52:31,082 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-21 21:52:31,082 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-21 21:52:31,105 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-21 21:52:31,106 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-21 21:52:31,106 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-21 21:52:33,160 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-21 21:52:33,160 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-21 21:52:33,160 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-21 21:52:33,161 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-21 21:52:35,205 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-21 21:52:35,206 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-21 21:52:35,206 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-21 21:52:35,206 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-21 21:52:37,261 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-21 21:52:37,262 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-21 21:52:37,262 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-21 21:52:37,262 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 21:52:37,262 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000379408, 'leave_amount': 503553.68, 'mobile_phone': '15829413452', 'reg_name': '小柠檬', 'reg_time': '2021-04-21 21:52:23.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-21 21:52:37,263 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-21 21:52:39,317 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-21 21:52:39,317 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-21 21:52:39,317 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-21 21:52:39,318 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-21 21:52:41,369 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-21 21:52:41,369 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 21:52:41,370 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-21 21:52:41,370 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 21:52:41,370 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000379408, 'leave_amount': 503553.68, 'mobile_phone': '15829413452', 'reg_name': '小柠檬', 'reg_time': '2021-04-21 21:52:23.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-21 21:52:41,371 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-21 21:52:43,417 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-21 21:52:43,418 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-21 21:52:43,418 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-21 21:52:43,418 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-21 21:52:45,472 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-21 21:52:45,472 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-21 21:52:45,472 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-21 21:52:45,472 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-21 21:52:47,519 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-21 21:52:47,519 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-21 21:52:47,519 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-21 21:52:47,519 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-21 21:52:49,568 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-21 21:52:49,569 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-21 21:52:49,569 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-21 21:52:49,569 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-21 21:52:51,615 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-21 21:52:51,616 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-21 21:52:51,616 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-21 21:52:51,616 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-21 21:52:51,616 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-21 21:52:51,616 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-21 21:52:51,886 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-21 21:52:51,886 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-21 21:52:51,998 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-21 21:52:51,999 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-21 21:52:51,999 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-21 21:52:52,269 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-21 21:52:52,270 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-21 21:52:52,387 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-21 21:52:52,387 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-21 21:52:52,388 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-21 21:52:52,662 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-21 21:52:52,662 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-21 21:52:52,777 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-21 21:52:52,777 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-21 21:52:52,777 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-21 21:52:52,805 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-21 21:52:52,805 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-21 21:52:52,805 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-21 21:52:52,805 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-21 21:52:52,833 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-21 21:52:52,833 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-21 21:52:52,833 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-21 21:52:52,833 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-21 21:52:52,861 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-21 21:52:52,861 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-21 21:52:52,861 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-21 21:52:52,862 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-21 21:52:52,889 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-21 21:52:52,889 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-21 21:52:52,889 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-21 21:52:52,889 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-21 21:52:53,041 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-21 21:52:53,042 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-21 21:52:53,042 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-21 21:52:53,042 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-21 21:52:53,069 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-21 21:52:53,070 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-21 21:52:53,070 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-21 21:52:53,070 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-21 21:52:53,098 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-21 21:52:53,098 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-21 21:52:53,098 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-21 21:52:53,098 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-21 21:52:53,125 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-21 21:52:53,125 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-21 21:52:53,125 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-21 21:52:53,126 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-21 21:52:53,153 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-21 21:52:53,153 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-21 21:52:53,153 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-21 21:52:53,153 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-21 21:52:53,181 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-21 21:52:53,182 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-21 21:52:53,182 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-21 21:52:53,182 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-21 21:58:02,769 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-21 21:58:03,055 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-21 21:58:03,055 [test_audit.py-->line:31]:注册普通用户15880419685成功
INFO 2021-04-21 21:58:03,219 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-21 21:58:03,516 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-21 21:58:03,516 [test_audit.py-->line:47]:注册用户15841538019成功
INFO 2021-04-21 21:58:03,682 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-21 21:58:03,725 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:58:03,725 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:58:03,725 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-21 21:58:03,769 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-21 21:58:03,769 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-21 21:58:03,800 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-21 21:58:03,800 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-21 21:58:03,852 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:58:03,852 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:58:03,852 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-21 21:58:03,875 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-21 21:58:03,875 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-21 21:58:03,904 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-21 21:58:03,905 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-21 21:58:03,960 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:58:03,960 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:58:03,961 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-21 21:58:03,982 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-21 21:58:03,982 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-21 21:58:03,982 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-21 21:58:04,032 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:58:04,032 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:58:04,032 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-21 21:58:04,055 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-21 21:58:04,056 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-21 21:58:04,057 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-21 21:58:04,057 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 21:58:04,057 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-21 21:58:04,114 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:58:04,115 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:58:04,115 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-21 21:58:04,136 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-21 21:58:04,136 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-21 21:58:04,136 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-21 21:58:04,185 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:58:04,185 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:58:04,185 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-21 21:58:04,206 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-21 21:58:04,206 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-21 21:58:04,206 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-21 21:58:04,260 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-21 21:58:04,260 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-21 21:58:04,260 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-21 21:58:04,280 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-21 21:58:04,280 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-21 21:58:04,280 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-21 21:58:04,281 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-21 21:58:04,281 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-21 21:58:04,281 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-21 21:58:04,557 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-21 21:58:04,557 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-21 21:58:04,557 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-21 21:58:04,557 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-21 21:58:04,847 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-21 21:58:04,849 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-21 21:58:04,853 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-21 21:58:04,853 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-21 21:58:04,853 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-21 21:58:04,853 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-21 21:58:05,178 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-21 21:58:05,178 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-21 21:58:05,179 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-21 21:58:05,179 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-21 21:58:05,343 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-21 21:58:05,343 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-21 21:58:05,344 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-21 21:58:05,344 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-21 21:58:05,387 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-21 21:58:05,388 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-21 21:58:05,388 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-21 21:58:05,388 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-21 21:58:05,704 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-21 21:58:05,704 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-21 21:58:05,704 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-21 21:58:05,704 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-21 21:58:05,850 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-21 21:58:05,851 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-21 21:58:05,852 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-21 21:58:05,853 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-21 21:58:05,881 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-21 21:58:05,882 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-21 21:58:05,882 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-21 21:58:05,882 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-21 21:58:06,158 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-21 21:58:06,158 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-21 21:58:06,158 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-21 21:58:06,158 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-21 21:58:06,330 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-21 21:58:06,331 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-21 21:58:06,331 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-21 21:58:06,332 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-21 21:58:06,360 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-21 21:58:06,360 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-21 21:58:06,360 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-21 21:58:06,361 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-21 21:58:06,657 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-21 21:58:06,657 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-21 21:58:06,657 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-21 21:58:06,657 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-21 21:58:06,802 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-21 21:58:06,803 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-21 21:58:06,803 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-21 21:58:06,803 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-21 21:58:06,827 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-21 21:58:06,828 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-21 21:58:06,828 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-21 21:58:06,828 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-21 21:58:06,851 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-21 21:58:06,852 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-21 21:58:06,852 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-21 21:58:06,852 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-21 21:58:06,879 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-21 21:58:06,879 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-21 21:58:06,879 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-21 21:58:06,879 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-21 21:58:06,902 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-21 21:58:06,902 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-21 21:58:06,902 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-21 21:58:06,902 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-21 21:58:06,923 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-21 21:58:06,924 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-21 21:58:06,924 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-21 21:58:06,924 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-21 21:58:06,924 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-21 21:58:06,925 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-21 21:58:06,955 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-21 21:58:06,955 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-21 21:58:07,113 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-21 21:58:07,113 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-21 21:58:07,113 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-21 21:58:07,141 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-21 21:58:07,141 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-21 21:58:07,141 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-21 21:58:07,142 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-21 21:58:07,179 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-21 21:58:07,180 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-21 21:58:07,375 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-21 21:58:07,375 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-21 21:58:07,376 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-21 21:58:07,376 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-21 21:58:07,376 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-21 21:58:07,638 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-21 21:58:07,638 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-21 21:58:07,760 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-21 21:58:07,760 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-21 21:58:07,760 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-21 21:58:07,910 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-21 21:58:07,910 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-21 21:58:07,911 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-21 21:58:07,911 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-21 21:58:07,937 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-21 21:58:07,937 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-21 21:58:07,937 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-21 21:58:07,937 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-21 21:58:08,201 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-21 21:58:08,202 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-21 21:58:08,202 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-21 21:58:08,202 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-21 21:58:08,348 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-21 21:58:08,348 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-21 21:58:08,348 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-21 21:58:08,348 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-21 21:58:08,372 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-21 21:58:08,372 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-21 21:58:08,372 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-21 21:58:08,372 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-21 21:58:08,802 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-21 21:58:08,803 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-21 21:58:08,803 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-21 21:58:08,803 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-21 21:58:09,045 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-21 21:58:09,045 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-21 21:58:09,045 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-21 21:58:09,045 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-21 21:58:09,071 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-21 21:58:09,071 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-21 21:58:09,071 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-21 21:58:09,071 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-21 21:58:09,099 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-21 21:58:09,100 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-21 21:58:09,100 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-21 21:58:09,100 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-21 21:58:09,100 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-21 21:58:09,100 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-21 21:58:09,396 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-21 21:58:09,396 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-21 21:58:09,396 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-21 21:58:09,397 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-21 21:58:09,544 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-21 21:58:09,544 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-21 21:58:09,544 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-21 21:58:09,545 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-21 21:58:09,568 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-21 21:58:09,568 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-21 21:58:09,568 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-21 21:58:09,569 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-21 21:58:09,859 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-21 21:58:09,860 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-21 21:58:09,980 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-21 21:58:09,980 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-21 21:58:09,980 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-21 21:58:10,124 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-21 21:58:10,124 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-21 21:58:10,124 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-21 21:58:10,125 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-21 21:58:10,148 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-21 21:58:10,148 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-21 21:58:10,148 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-21 21:58:10,148 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-21 21:58:10,148 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-21 21:58:10,432 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-21 21:58:10,432 [test_recharge.py-->line:33]:注册用户15853742994成功
INFO 2021-04-21 21:58:10,604 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-21 21:58:10,604 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-21 21:58:12,772 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-21 21:58:12,773 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-21 21:58:12,802 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-21 21:58:12,802 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-21 21:58:12,803 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-21 21:58:14,859 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-21 21:58:14,859 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-21 21:58:14,890 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-21 21:58:14,890 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-21 21:58:14,890 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-21 21:58:16,951 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-21 21:58:16,951 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-21 21:58:16,981 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-21 21:58:16,981 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-21 21:58:16,981 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-21 21:58:19,037 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-21 21:58:19,037 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-21 21:58:19,067 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-21 21:58:19,067 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-21 21:58:19,067 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-21 21:58:21,126 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-21 21:58:21,126 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-21 21:58:21,126 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-21 21:58:21,127 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-21 21:58:23,177 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-21 21:58:23,177 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-21 21:58:23,178 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-21 21:58:23,178 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-21 21:58:25,233 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-21 21:58:25,234 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-21 21:58:25,234 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-21 21:58:25,234 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 21:58:25,234 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000379430, 'leave_amount': 503553.68, 'mobile_phone': '15853742994', 'reg_name': '小柠檬', 'reg_time': '2021-04-21 21:58:11.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-21 21:58:25,235 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-21 21:58:27,291 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-21 21:58:27,292 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-21 21:58:27,292 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-21 21:58:27,292 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-21 21:58:29,344 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-21 21:58:29,344 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 21:58:29,345 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-21 21:58:29,345 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-21 21:58:29,345 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000379430, 'leave_amount': 503553.68, 'mobile_phone': '15853742994', 'reg_name': '小柠檬', 'reg_time': '2021-04-21 21:58:11.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-21 21:58:29,345 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-21 21:58:31,396 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-21 21:58:31,396 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-21 21:58:31,396 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-21 21:58:31,396 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-21 21:58:33,449 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-21 21:58:33,450 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-21 21:58:33,450 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-21 21:58:33,450 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-21 21:58:35,502 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-21 21:58:35,502 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-21 21:58:35,502 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-21 21:58:35,502 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-21 21:58:37,553 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-21 21:58:37,553 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-21 21:58:37,553 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-21 21:58:37,553 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-21 21:58:39,604 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-21 21:58:39,604 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-21 21:58:39,605 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-21 21:58:39,605 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-21 21:58:39,605 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-21 21:58:39,605 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-21 21:58:39,870 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-21 21:58:39,870 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-21 21:58:39,989 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-21 21:58:39,989 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-21 21:58:39,990 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-21 21:58:40,258 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-21 21:58:40,258 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-21 21:58:40,382 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-21 21:58:40,383 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-21 21:58:40,383 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-21 21:58:40,680 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-21 21:58:40,680 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-21 21:58:40,800 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-21 21:58:40,800 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-21 21:58:40,800 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-21 21:58:40,822 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-21 21:58:40,822 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-21 21:58:40,822 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-21 21:58:40,822 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-21 21:58:40,843 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-21 21:58:40,843 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-21 21:58:40,843 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-21 21:58:40,843 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-21 21:58:40,863 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-21 21:58:40,863 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-21 21:58:40,863 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-21 21:58:40,864 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-21 21:58:40,883 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-21 21:58:40,883 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-21 21:58:40,883 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-21 21:58:40,884 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-21 21:58:41,025 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-21 21:58:41,025 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-21 21:58:41,025 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-21 21:58:41,025 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-21 21:58:41,046 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-21 21:58:41,046 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-21 21:58:41,046 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-21 21:58:41,047 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-21 21:58:41,067 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-21 21:58:41,067 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-21 21:58:41,067 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-21 21:58:41,067 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-21 21:58:41,088 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-21 21:58:41,089 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-21 21:58:41,089 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-21 21:58:41,089 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-21 21:58:41,109 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-21 21:58:41,110 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-21 21:58:41,110 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-21 21:58:41,110 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-21 21:58:41,132 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-21 21:58:41,132 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-21 21:58:41,132 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-21 21:58:41,132 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-23 20:17:28,815 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-23 20:17:29,336 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 20:17:29,336 [test_audit.py-->line:31]:注册普通用户15815658976成功
INFO 2021-04-23 20:17:29,642 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 20:17:30,159 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 20:17:30,159 [test_audit.py-->line:47]:注册用户15896118252成功
INFO 2021-04-23 20:17:30,455 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 20:17:30,499 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:17:30,499 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:17:30,499 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-23 20:17:30,558 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-23 20:17:30,558 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-23 20:17:30,589 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-23 20:17:30,589 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-23 20:17:30,663 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:17:30,663 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:17:30,663 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-23 20:17:30,697 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-23 20:17:30,698 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-23 20:17:30,728 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-23 20:17:30,728 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-23 20:17:30,784 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:17:30,784 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:17:30,785 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-23 20:17:30,815 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-23 20:17:30,816 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-23 20:17:30,816 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-23 20:17:30,874 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:17:30,875 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:17:30,875 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-23 20:17:30,907 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-23 20:17:30,908 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-23 20:17:30,913 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-23 20:17:30,913 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 20:17:30,913 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 20:17:30,962 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:17:30,962 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:17:30,963 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-23 20:17:30,992 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-23 20:17:30,992 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-23 20:17:30,992 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-23 20:17:31,049 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:17:31,049 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:17:31,050 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-23 20:17:31,078 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-23 20:17:31,078 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-23 20:17:31,078 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-23 20:17:31,122 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:17:31,122 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:17:31,122 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-23 20:17:31,155 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-23 20:17:31,155 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-23 20:17:31,156 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-23 20:17:31,156 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-23 20:17:31,156 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-23 20:17:31,156 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-23 20:17:31,493 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-23 20:17:31,493 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-23 20:17:31,493 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-23 20:17:31,494 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-23 20:17:31,839 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-23 20:17:31,841 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-23 20:17:31,842 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-23 20:17:31,843 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-23 20:17:31,843 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-23 20:17:31,843 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 20:17:32,348 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-23 20:17:32,348 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-23 20:17:32,349 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:17:32,349 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 20:17:32,633 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-23 20:17:32,633 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-23 20:17:32,633 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:17:32,633 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-23 20:17:32,709 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-23 20:17:32,710 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-23 20:17:32,710 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-23 20:17:32,710 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-23 20:17:33,206 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-23 20:17:33,207 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-23 20:17:33,208 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-23 20:17:33,208 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-23 20:17:33,491 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-23 20:17:33,492 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-23 20:17:33,492 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-23 20:17:33,493 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-23 20:17:33,532 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-23 20:17:33,532 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-23 20:17:33,532 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-23 20:17:33,532 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-23 20:17:34,041 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-23 20:17:34,041 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-23 20:17:34,042 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-23 20:17:34,042 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-23 20:17:34,314 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-23 20:17:34,314 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-23 20:17:34,314 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-23 20:17:34,314 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-23 20:17:34,349 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-23 20:17:34,349 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-23 20:17:34,349 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-23 20:17:34,349 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 20:17:34,851 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-23 20:17:34,851 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 20:17:34,851 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 20:17:34,852 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-23 20:17:35,142 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-23 20:17:35,142 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-23 20:17:35,143 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 20:17:35,143 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-23 20:17:35,176 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-23 20:17:35,176 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-23 20:17:35,177 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-23 20:17:35,177 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-23 20:17:35,209 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-23 20:17:35,209 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-23 20:17:35,209 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-23 20:17:35,209 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-23 20:17:35,239 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-23 20:17:35,239 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-23 20:17:35,239 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-23 20:17:35,239 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-23 20:17:35,268 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-23 20:17:35,268 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-23 20:17:35,268 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-23 20:17:35,269 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-23 20:17:35,297 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-23 20:17:35,301 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-23 20:17:35,302 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-23 20:17:35,302 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-23 20:17:35,302 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 20:17:35,303 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-23 20:17:35,340 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-23 20:17:35,340 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-23 20:17:35,586 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-23 20:17:35,586 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-23 20:17:35,587 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-23 20:17:35,625 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-23 20:17:35,626 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-23 20:17:35,626 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-23 20:17:35,626 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-23 20:17:35,678 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-23 20:17:35,683 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-23 20:17:35,964 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-23 20:17:35,964 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-23 20:17:35,964 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-23 20:17:35,964 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-23 20:17:35,965 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 20:17:36,459 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-23 20:17:36,460 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-23 20:17:36,677 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-23 20:17:36,678 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:17:36,678 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 20:17:36,969 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-23 20:17:36,970 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-23 20:17:36,970 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:17:36,971 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-23 20:17:37,004 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-23 20:17:37,004 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-23 20:17:37,004 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-23 20:17:37,004 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 20:17:37,500 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-23 20:17:37,500 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 20:17:37,500 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 20:17:37,500 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-23 20:17:37,665 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-23 20:17:37,665 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-23 20:17:37,665 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 20:17:37,666 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-23 20:17:37,700 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-23 20:17:37,700 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-23 20:17:37,700 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-23 20:17:37,700 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-23 20:17:38,195 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-23 20:17:38,195 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-23 20:17:38,195 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:17:38,196 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-23 20:17:38,478 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-23 20:17:38,478 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-23 20:17:38,478 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:17:38,479 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-23 20:17:38,513 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-23 20:17:38,513 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-23 20:17:38,514 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-23 20:17:38,514 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-23 20:17:38,555 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-23 20:17:38,555 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-23 20:17:38,555 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-23 20:17:38,555 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-23 20:17:38,555 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-23 20:17:38,555 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-23 20:17:39,057 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-23 20:17:39,057 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-23 20:17:39,057 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-23 20:17:39,057 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-23 20:17:39,338 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-23 20:17:39,338 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-23 20:17:39,338 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-23 20:17:39,339 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-23 20:17:39,370 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-23 20:17:39,370 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-23 20:17:39,371 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-23 20:17:39,371 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 20:17:39,874 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-23 20:17:39,874 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 20:17:40,096 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-23 20:17:40,096 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 20:17:40,097 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-23 20:17:40,383 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-23 20:17:40,384 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-23 20:17:40,384 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-23 20:17:40,385 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-23 20:17:40,421 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-23 20:17:40,422 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-23 20:17:40,422 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-23 20:17:40,422 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-23 20:17:40,422 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-23 20:17:40,927 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 20:17:40,928 [test_recharge.py-->line:33]:注册用户15837378882成功
INFO 2021-04-23 20:17:41,234 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 20:17:41,235 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-23 20:17:43,359 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-23 20:17:43,359 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-23 20:17:43,390 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-23 20:17:43,390 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-23 20:17:43,390 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-23 20:17:45,450 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-23 20:17:45,450 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-23 20:17:45,481 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-23 20:17:45,481 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-23 20:17:45,482 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-23 20:17:47,547 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-23 20:17:47,548 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-23 20:17:47,579 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-23 20:17:47,579 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-23 20:17:47,579 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-23 20:17:49,634 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-23 20:17:49,635 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-23 20:17:49,665 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-23 20:17:49,665 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-23 20:17:49,665 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-23 20:17:51,713 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-23 20:17:51,713 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-23 20:17:51,713 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-23 20:17:51,714 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-23 20:17:53,761 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-23 20:17:53,761 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-23 20:17:53,761 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-23 20:17:53,761 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-23 20:17:55,812 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-23 20:17:55,813 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-23 20:17:55,813 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-23 20:17:55,813 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 20:17:55,813 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000384808, 'leave_amount': 503553.68, 'mobile_phone': '15837378882', 'reg_name': '小柠檬', 'reg_time': '2021-04-23 20:17:41.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 20:17:55,816 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-23 20:17:57,866 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-23 20:17:57,866 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-23 20:17:57,866 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-23 20:17:57,866 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-23 20:17:59,924 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-23 20:17:59,925 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 20:17:59,925 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-23 20:17:59,925 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 20:17:59,926 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000384808, 'leave_amount': 503553.68, 'mobile_phone': '15837378882', 'reg_name': '小柠檬', 'reg_time': '2021-04-23 20:17:41.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 20:17:59,926 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-23 20:18:01,974 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-23 20:18:01,974 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-23 20:18:01,974 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-23 20:18:01,975 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-23 20:18:04,024 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-23 20:18:04,024 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-23 20:18:04,024 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-23 20:18:04,024 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-23 20:18:06,180 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-23 20:18:06,180 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-23 20:18:06,181 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-23 20:18:06,181 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-23 20:18:08,228 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-23 20:18:08,228 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-23 20:18:08,228 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-23 20:18:08,228 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-23 20:18:09,163 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-23 20:18:09,556 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 20:18:09,556 [test_audit.py-->line:31]:注册普通用户15832228360成功
INFO 2021-04-23 20:18:09,843 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 20:18:10,163 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 20:18:10,164 [test_audit.py-->line:47]:注册用户15897768951成功
INFO 2021-04-23 20:18:10,286 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-23 20:18:10,286 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-23 20:18:10,287 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-23 20:18:10,287 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-23 20:18:10,287 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-23 20:18:10,287 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-23 20:18:10,479 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 20:18:10,523 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:18:10,524 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:18:10,524 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-23 20:18:10,579 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-23 20:18:10,579 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-23 20:18:10,602 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-23 20:18:10,602 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-23 20:18:10,614 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-23 20:18:10,614 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-23 20:18:10,661 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:18:10,662 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:18:10,662 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-23 20:18:10,694 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-23 20:18:10,694 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-23 20:18:10,716 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-23 20:18:10,717 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-23 20:18:10,768 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-23 20:18:10,768 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-23 20:18:10,768 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-23 20:18:10,775 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:18:10,775 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:18:10,775 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-23 20:18:10,802 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-23 20:18:10,803 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-23 20:18:10,803 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-23 20:18:10,848 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:18:10,848 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:18:10,849 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-23 20:18:10,878 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-23 20:18:10,879 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-23 20:18:10,880 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-23 20:18:10,880 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 20:18:10,880 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 20:18:10,923 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:18:10,924 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:18:10,924 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-23 20:18:10,953 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-23 20:18:10,953 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-23 20:18:10,953 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-23 20:18:10,996 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:18:10,997 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:18:10,997 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-23 20:18:11,027 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-23 20:18:11,027 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-23 20:18:11,027 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-23 20:18:11,069 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:18:11,069 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:18:11,070 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-23 20:18:11,099 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-23 20:18:11,100 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-23 20:18:11,100 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-23 20:18:11,100 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-23 20:18:11,100 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-23 20:18:11,100 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-23 20:18:11,213 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-23 20:18:11,213 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-23 20:18:11,348 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-23 20:18:11,349 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-23 20:18:11,349 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-23 20:18:11,357 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-23 20:18:11,357 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-23 20:18:11,357 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-23 20:18:11,358 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-23 20:18:11,657 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-23 20:18:11,658 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-23 20:18:11,697 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-23 20:18:11,699 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-23 20:18:11,699 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-23 20:18:11,699 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-23 20:18:11,699 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-23 20:18:11,699 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 20:18:11,795 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-23 20:18:11,795 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-23 20:18:11,795 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-23 20:18:11,829 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-23 20:18:11,829 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-23 20:18:11,829 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-23 20:18:11,830 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-23 20:18:11,859 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-23 20:18:11,859 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-23 20:18:11,859 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-23 20:18:11,859 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-23 20:18:11,887 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-23 20:18:11,887 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-23 20:18:11,887 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-23 20:18:11,887 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-23 20:18:11,915 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-23 20:18:11,916 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-23 20:18:11,916 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-23 20:18:11,916 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-23 20:18:12,009 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-23 20:18:12,009 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-23 20:18:12,010 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:18:12,011 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 20:18:12,092 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-23 20:18:12,093 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-23 20:18:12,093 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-23 20:18:12,093 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-23 20:18:12,122 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-23 20:18:12,122 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-23 20:18:12,122 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-23 20:18:12,122 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-23 20:18:12,152 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-23 20:18:12,152 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-23 20:18:12,152 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-23 20:18:12,154 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-23 20:18:12,184 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-23 20:18:12,184 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-23 20:18:12,184 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-23 20:18:12,184 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-23 20:18:12,213 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-23 20:18:12,215 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-23 20:18:12,215 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-23 20:18:12,215 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-23 20:18:12,244 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-23 20:18:12,244 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-23 20:18:12,244 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-23 20:18:12,244 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-23 20:18:12,295 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-23 20:18:12,295 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-23 20:18:12,297 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:18:12,297 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-23 20:18:12,385 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-23 20:18:12,385 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-23 20:18:12,386 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-23 20:18:12,387 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-23 20:18:12,684 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-23 20:18:12,685 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-23 20:18:12,685 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-23 20:18:12,685 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-23 20:18:12,853 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-23 20:18:12,854 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-23 20:18:12,855 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-23 20:18:12,855 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-23 20:18:12,891 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-23 20:18:12,892 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-23 20:18:12,892 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-23 20:18:12,892 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-23 20:18:13,210 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-23 20:18:13,211 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-23 20:18:13,212 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-23 20:18:13,212 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-23 20:18:13,421 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-23 20:18:13,421 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-23 20:18:13,422 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-23 20:18:13,422 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-23 20:18:13,461 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-23 20:18:13,463 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-23 20:18:13,465 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-23 20:18:13,467 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 20:18:13,952 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-23 20:18:13,953 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 20:18:13,953 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 20:18:13,953 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-23 20:18:14,216 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-23 20:18:14,217 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-23 20:18:14,218 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 20:18:14,218 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-23 20:18:14,254 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-23 20:18:14,254 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-23 20:18:14,255 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-23 20:18:14,255 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-23 20:18:14,294 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-23 20:18:14,295 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-23 20:18:14,295 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-23 20:18:14,295 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-23 20:18:14,328 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-23 20:18:14,328 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-23 20:18:14,329 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-23 20:18:14,329 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-23 20:18:14,362 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-23 20:18:14,362 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-23 20:18:14,363 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-23 20:18:14,363 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-23 20:18:14,403 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-23 20:18:14,405 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-23 20:18:14,405 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-23 20:18:14,405 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-23 20:18:14,405 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 20:18:14,407 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-23 20:18:14,454 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-23 20:18:14,455 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-23 20:18:14,603 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-23 20:18:14,603 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-23 20:18:14,604 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-23 20:18:14,640 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-23 20:18:14,642 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-23 20:18:14,642 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-23 20:18:14,642 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-23 20:18:14,697 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-23 20:18:14,699 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-23 20:18:14,895 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-23 20:18:14,895 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-23 20:18:14,895 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-23 20:18:14,896 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-23 20:18:14,896 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 20:18:15,189 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-23 20:18:15,190 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-23 20:18:15,312 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-23 20:18:15,313 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:18:15,314 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 20:18:15,509 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-23 20:18:15,509 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-23 20:18:15,509 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:18:15,510 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-23 20:18:15,543 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-23 20:18:15,544 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-23 20:18:15,546 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-23 20:18:15,547 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 20:18:15,861 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-23 20:18:15,861 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 20:18:15,861 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 20:18:15,861 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-23 20:18:16,031 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-23 20:18:16,032 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-23 20:18:16,032 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 20:18:16,033 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-23 20:18:16,064 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-23 20:18:16,064 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-23 20:18:16,065 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-23 20:18:16,065 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-23 20:18:16,375 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-23 20:18:16,378 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-23 20:18:16,379 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:18:16,379 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-23 20:18:16,549 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-23 20:18:16,550 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-23 20:18:16,550 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:18:16,551 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-23 20:18:16,584 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-23 20:18:16,585 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-23 20:18:16,585 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-23 20:18:16,585 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-23 20:18:16,623 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-23 20:18:16,623 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-23 20:18:16,623 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-23 20:18:16,623 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-23 20:18:16,623 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-23 20:18:16,624 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-23 20:18:16,931 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-23 20:18:16,932 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-23 20:18:16,932 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-23 20:18:16,932 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-23 20:18:17,100 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-23 20:18:17,100 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-23 20:18:17,100 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-23 20:18:17,100 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-23 20:18:17,132 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-23 20:18:17,133 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-23 20:18:17,133 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-23 20:18:17,133 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 20:18:17,428 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-23 20:18:17,428 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 20:18:17,552 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-23 20:18:17,552 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 20:18:17,553 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-23 20:18:17,724 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-23 20:18:17,725 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-23 20:18:17,725 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-23 20:18:17,725 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-23 20:18:17,755 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-23 20:18:17,755 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-23 20:18:17,756 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-23 20:18:17,756 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-23 20:18:17,756 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-23 20:18:18,080 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 20:18:18,080 [test_recharge.py-->line:33]:注册用户15851057338成功
INFO 2021-04-23 20:18:18,354 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 20:18:18,355 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-23 20:18:20,521 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-23 20:18:20,521 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-23 20:18:20,543 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-23 20:18:20,544 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-23 20:18:20,544 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-23 20:18:22,613 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-23 20:18:22,613 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-23 20:18:22,635 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-23 20:18:22,635 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-23 20:18:22,635 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-23 20:18:24,703 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-23 20:18:24,703 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-23 20:18:24,726 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-23 20:18:24,726 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-23 20:18:24,726 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-23 20:18:26,796 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-23 20:18:26,796 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-23 20:18:26,820 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-23 20:18:26,820 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-23 20:18:26,821 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-23 20:18:28,885 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-23 20:18:28,886 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-23 20:18:28,886 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-23 20:18:28,886 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-23 20:18:30,943 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-23 20:18:30,943 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-23 20:18:30,943 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-23 20:18:30,943 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-23 20:18:33,006 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-23 20:18:33,007 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-23 20:18:33,007 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-23 20:18:33,008 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 20:18:33,008 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000384823, 'leave_amount': 503553.68, 'mobile_phone': '15851057338', 'reg_name': '小柠檬', 'reg_time': '2021-04-23 20:18:19.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 20:18:33,008 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-23 20:18:35,069 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-23 20:18:35,069 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-23 20:18:35,069 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-23 20:18:35,069 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-23 20:18:37,136 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-23 20:18:37,136 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 20:18:37,137 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-23 20:18:37,137 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 20:18:37,137 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000384823, 'leave_amount': 503553.68, 'mobile_phone': '15851057338', 'reg_name': '小柠檬', 'reg_time': '2021-04-23 20:18:19.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 20:18:37,137 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-23 20:18:39,198 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-23 20:18:39,198 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-23 20:18:39,198 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-23 20:18:39,198 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-23 20:18:41,271 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-23 20:18:41,271 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-23 20:18:41,271 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-23 20:18:41,272 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-23 20:18:43,331 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-23 20:18:43,331 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-23 20:18:43,331 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-23 20:18:43,331 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-23 20:18:45,388 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-23 20:18:45,388 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-23 20:18:45,388 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-23 20:18:45,389 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-23 20:18:47,450 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-23 20:18:47,450 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-23 20:18:47,450 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-23 20:18:47,450 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-23 20:18:47,451 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-23 20:18:47,451 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-23 20:18:47,763 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-23 20:18:47,763 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-23 20:18:47,897 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-23 20:18:47,897 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-23 20:18:47,898 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-23 20:18:48,188 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-23 20:18:48,189 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-23 20:18:48,395 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-23 20:18:48,395 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-23 20:18:48,395 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-23 20:18:48,689 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-23 20:18:48,689 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-23 20:18:48,822 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-23 20:18:48,823 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-23 20:18:48,823 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-23 20:18:48,850 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-23 20:18:48,850 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-23 20:18:48,850 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-23 20:18:48,851 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-23 20:18:48,878 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-23 20:18:48,878 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-23 20:18:48,878 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-23 20:18:48,879 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-23 20:18:48,909 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-23 20:18:48,909 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-23 20:18:48,910 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-23 20:18:48,910 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-23 20:18:48,937 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-23 20:18:48,937 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-23 20:18:48,937 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-23 20:18:48,938 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-23 20:18:49,207 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-23 20:18:49,207 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-23 20:18:49,207 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-23 20:18:49,207 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-23 20:18:49,235 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-23 20:18:49,235 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-23 20:18:49,235 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-23 20:18:49,236 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-23 20:18:49,264 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-23 20:18:49,264 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-23 20:18:49,264 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-23 20:18:49,264 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-23 20:18:49,292 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-23 20:18:49,292 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-23 20:18:49,292 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-23 20:18:49,292 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-23 20:18:49,319 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-23 20:18:49,320 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-23 20:18:49,320 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-23 20:18:49,320 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-23 20:18:49,347 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-23 20:18:49,347 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-23 20:18:49,348 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-23 20:18:49,348 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-23 20:20:44,881 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-23 20:20:45,321 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 20:20:45,322 [test_audit.py-->line:31]:注册普通用户15828891038成功
INFO 2021-04-23 20:20:45,633 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 20:20:45,944 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 20:20:45,944 [test_audit.py-->line:47]:注册用户15800692488成功
INFO 2021-04-23 20:20:46,256 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 20:20:46,297 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:20:46,297 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:20:46,297 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-23 20:20:46,353 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-23 20:20:46,354 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-23 20:20:46,376 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-23 20:20:46,376 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-23 20:20:46,433 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:20:46,433 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:20:46,433 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-23 20:20:46,464 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-23 20:20:46,464 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-23 20:20:46,487 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-23 20:20:46,488 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-23 20:20:46,544 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:20:46,544 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:20:46,544 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-23 20:20:46,573 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-23 20:20:46,574 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-23 20:20:46,574 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-23 20:20:46,616 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:20:46,616 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:20:46,616 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-23 20:20:46,648 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-23 20:20:46,649 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-23 20:20:46,650 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-23 20:20:46,650 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 20:20:46,651 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 20:20:46,708 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:20:46,708 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:20:46,708 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-23 20:20:46,737 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-23 20:20:46,737 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-23 20:20:46,737 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-23 20:20:46,778 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:20:46,778 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:20:46,778 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-23 20:20:46,806 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-23 20:20:46,807 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-23 20:20:46,807 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-23 20:20:46,853 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:20:46,853 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:20:46,854 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-23 20:20:46,882 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-23 20:20:46,882 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-23 20:20:46,882 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-23 20:20:46,882 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-23 20:20:46,882 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-23 20:20:46,883 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-23 20:20:47,148 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-23 20:20:47,148 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-23 20:20:47,148 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-23 20:20:47,148 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-23 20:20:47,470 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-23 20:20:47,471 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-23 20:20:47,471 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-23 20:20:47,471 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-23 20:20:47,471 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-23 20:20:47,471 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 20:20:47,764 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-23 20:20:47,764 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-23 20:20:47,765 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:20:47,765 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 20:20:48,027 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-23 20:20:48,027 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-23 20:20:48,028 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:20:48,029 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-23 20:20:48,101 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-23 20:20:48,101 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-23 20:20:48,101 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-23 20:20:48,102 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-23 20:20:48,564 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-23 20:20:48,565 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-23 20:20:48,565 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-23 20:20:48,565 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-23 20:20:48,733 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-23 20:20:48,733 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-23 20:20:48,734 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-23 20:20:48,734 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-23 20:20:48,767 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-23 20:20:48,768 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-23 20:20:48,768 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-23 20:20:48,768 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-23 20:20:49,093 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-23 20:20:49,093 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-23 20:20:49,093 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-23 20:20:49,093 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-23 20:20:49,284 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-23 20:20:49,284 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-23 20:20:49,286 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-23 20:20:49,286 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-23 20:20:49,330 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-23 20:20:49,330 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-23 20:20:49,330 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-23 20:20:49,331 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 20:20:49,623 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-23 20:20:49,623 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 20:20:49,624 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 20:20:49,624 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-23 20:20:49,824 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-23 20:20:49,825 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-23 20:20:49,825 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 20:20:49,825 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-23 20:20:49,857 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-23 20:20:49,857 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-23 20:20:49,857 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-23 20:20:49,857 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-23 20:20:49,888 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-23 20:20:49,888 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-23 20:20:49,888 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-23 20:20:49,888 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-23 20:20:49,917 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-23 20:20:49,917 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-23 20:20:49,917 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-23 20:20:49,917 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-23 20:20:49,947 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-23 20:20:49,947 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-23 20:20:49,948 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-23 20:20:49,948 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-23 20:20:49,978 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-23 20:20:49,978 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-23 20:20:49,979 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-23 20:20:49,979 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-23 20:20:49,979 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 20:20:49,979 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-23 20:20:50,017 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-23 20:20:50,017 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-23 20:20:50,167 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-23 20:20:50,167 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-23 20:20:50,167 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-23 20:20:50,199 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-23 20:20:50,199 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-23 20:20:50,200 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-23 20:20:50,200 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-23 20:20:50,250 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-23 20:20:50,251 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-23 20:20:50,442 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-23 20:20:50,443 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-23 20:20:50,443 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-23 20:20:50,444 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-23 20:20:50,445 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 20:20:50,851 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-23 20:20:50,851 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-23 20:20:51,042 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-23 20:20:51,043 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:20:51,044 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 20:20:51,243 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-23 20:20:51,244 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-23 20:20:51,244 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:20:51,244 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-23 20:20:51,277 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-23 20:20:51,277 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-23 20:20:51,277 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-23 20:20:51,277 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 20:20:51,617 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-23 20:20:51,617 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 20:20:51,617 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 20:20:51,617 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-23 20:20:51,783 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-23 20:20:51,783 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-23 20:20:51,783 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 20:20:51,783 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-23 20:20:51,814 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-23 20:20:51,815 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-23 20:20:51,815 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-23 20:20:51,815 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-23 20:20:52,110 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-23 20:20:52,111 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-23 20:20:52,111 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:20:52,111 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-23 20:20:52,278 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-23 20:20:52,278 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-23 20:20:52,279 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:20:52,279 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-23 20:20:52,312 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-23 20:20:52,312 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-23 20:20:52,312 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-23 20:20:52,312 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-23 20:20:52,351 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-23 20:20:52,352 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-23 20:20:52,352 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-23 20:20:52,352 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-23 20:20:52,352 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-23 20:20:52,352 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-23 20:20:52,644 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-23 20:20:52,644 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-23 20:20:52,645 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-23 20:20:52,645 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-23 20:20:52,811 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-23 20:20:52,811 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-23 20:20:52,811 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-23 20:20:52,811 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-23 20:20:52,846 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-23 20:20:52,847 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-23 20:20:52,847 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-23 20:20:52,847 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 20:20:53,156 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-23 20:20:53,156 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 20:20:53,350 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-23 20:20:53,351 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 20:20:53,351 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-23 20:20:53,611 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-23 20:20:53,611 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-23 20:20:53,611 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-23 20:20:53,611 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-23 20:20:53,644 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-23 20:20:53,644 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-23 20:20:53,644 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-23 20:20:53,644 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-23 20:20:53,645 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-23 20:20:53,971 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 20:20:53,971 [test_recharge.py-->line:33]:注册用户15810270220成功
INFO 2021-04-23 20:20:54,145 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 20:20:54,146 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-23 20:20:56,293 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-23 20:20:56,295 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-23 20:20:56,320 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-23 20:20:56,320 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-23 20:20:56,321 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-23 20:20:58,388 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-23 20:20:58,392 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-23 20:20:58,415 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-23 20:20:58,416 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-23 20:20:58,416 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-23 20:21:00,478 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-23 20:21:00,479 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-23 20:21:00,502 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-23 20:21:00,503 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-23 20:21:00,503 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-23 20:21:02,564 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-23 20:21:02,565 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-23 20:21:02,589 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-23 20:21:02,589 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-23 20:21:02,590 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-23 20:21:04,650 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-23 20:21:04,650 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-23 20:21:04,650 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-23 20:21:04,650 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-23 20:21:06,715 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-23 20:21:06,715 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-23 20:21:06,715 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-23 20:21:06,715 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-23 20:21:08,776 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-23 20:21:08,777 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-23 20:21:08,778 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-23 20:21:08,778 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 20:21:08,778 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000384838, 'leave_amount': 503553.68, 'mobile_phone': '15810270220', 'reg_name': '小柠檬', 'reg_time': '2021-04-23 20:20:54.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 20:21:08,779 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-23 20:21:10,834 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-23 20:21:10,835 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-23 20:21:10,835 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-23 20:21:10,835 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-23 20:21:12,898 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-23 20:21:12,899 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 20:21:12,899 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-23 20:21:12,899 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 20:21:12,899 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000384838, 'leave_amount': 503553.68, 'mobile_phone': '15810270220', 'reg_name': '小柠檬', 'reg_time': '2021-04-23 20:20:54.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 20:21:12,899 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-23 20:21:14,962 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-23 20:21:14,963 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-23 20:21:14,963 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-23 20:21:14,963 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-23 20:21:17,022 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-23 20:21:17,022 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-23 20:21:17,023 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-23 20:21:17,023 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-23 20:21:19,081 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-23 20:21:19,081 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-23 20:21:19,081 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-23 20:21:19,082 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-23 20:21:21,159 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-23 20:21:21,159 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-23 20:21:21,159 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-23 20:21:21,160 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-23 20:21:23,214 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-23 20:21:23,215 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-23 20:21:23,215 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-23 20:21:23,215 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-23 20:21:23,215 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-23 20:21:23,215 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-23 20:21:23,533 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-23 20:21:23,533 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-23 20:21:23,658 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-23 20:21:23,658 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-23 20:21:23,658 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-23 20:21:23,956 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-23 20:21:23,957 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-23 20:21:24,082 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-23 20:21:24,082 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-23 20:21:24,082 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-23 20:21:24,482 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-23 20:21:24,482 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-23 20:21:24,614 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-23 20:21:24,614 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-23 20:21:24,615 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-23 20:21:24,642 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-23 20:21:24,642 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-23 20:21:24,643 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-23 20:21:24,643 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-23 20:21:24,670 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-23 20:21:24,670 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-23 20:21:24,670 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-23 20:21:24,670 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-23 20:21:24,697 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-23 20:21:24,698 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-23 20:21:24,698 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-23 20:21:24,698 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-23 20:21:24,726 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-23 20:21:24,727 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-23 20:21:24,727 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-23 20:21:24,727 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-23 20:21:24,900 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-23 20:21:24,901 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-23 20:21:24,901 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-23 20:21:24,901 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-23 20:21:24,929 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-23 20:21:24,929 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-23 20:21:24,929 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-23 20:21:24,929 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-23 20:21:24,956 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-23 20:21:24,956 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-23 20:21:24,956 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-23 20:21:24,957 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-23 20:21:24,984 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-23 20:21:24,985 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-23 20:21:24,985 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-23 20:21:24,985 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-23 20:21:25,013 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-23 20:21:25,013 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-23 20:21:25,013 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-23 20:21:25,013 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-23 20:21:25,040 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-23 20:21:25,041 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-23 20:21:25,041 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-23 20:21:25,041 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-23 20:27:47,179 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-23 20:27:47,526 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 20:27:47,526 [test_audit.py-->line:31]:注册普通用户15867791918成功
INFO 2021-04-23 20:27:47,707 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 20:27:48,020 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 20:27:48,020 [test_audit.py-->line:47]:注册用户15802957798成功
INFO 2021-04-23 20:27:48,211 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 20:27:48,255 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:27:48,255 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:27:48,255 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-23 20:27:48,311 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-23 20:27:48,311 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-23 20:27:48,336 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-23 20:27:48,337 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-23 20:27:48,393 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:27:48,393 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:27:48,394 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-23 20:27:48,424 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-23 20:27:48,425 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-23 20:27:48,453 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-23 20:27:48,453 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-23 20:27:48,512 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:27:48,513 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:27:48,513 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-23 20:27:48,540 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-23 20:27:48,540 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-23 20:27:48,540 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-23 20:27:48,599 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:27:48,599 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:27:48,599 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-23 20:27:48,629 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-23 20:27:48,630 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-23 20:27:48,631 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-23 20:27:48,631 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 20:27:48,631 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 20:27:48,682 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:27:48,683 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:27:48,683 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-23 20:27:48,712 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-23 20:27:48,712 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-23 20:27:48,712 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-23 20:27:48,768 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:27:48,768 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:27:48,768 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-23 20:27:48,796 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-23 20:27:48,797 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-23 20:27:48,797 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-23 20:27:48,854 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:27:48,854 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:27:48,854 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-23 20:27:48,881 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-23 20:27:48,881 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-23 20:27:48,882 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-23 20:27:48,882 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-23 20:27:48,882 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-23 20:27:48,882 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-23 20:27:49,169 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-23 20:27:49,169 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-23 20:27:49,169 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-23 20:27:49,169 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-23 20:27:49,503 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-23 20:27:49,505 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-23 20:27:49,505 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-23 20:27:49,506 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-23 20:27:49,506 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-23 20:27:49,506 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 20:27:49,999 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-23 20:27:49,999 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-23 20:27:50,000 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:27:50,000 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 20:27:50,163 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-23 20:27:50,163 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-23 20:27:50,163 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:27:50,164 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-23 20:27:50,213 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-23 20:27:50,214 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-23 20:27:50,214 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-23 20:27:50,215 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-23 20:27:50,591 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-23 20:27:50,592 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-23 20:27:50,593 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-23 20:27:50,593 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-23 20:27:50,772 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-23 20:27:50,772 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-23 20:27:50,773 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-23 20:27:50,773 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-23 20:27:50,808 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-23 20:27:50,808 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-23 20:27:50,808 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-23 20:27:50,808 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-23 20:27:51,109 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-23 20:27:51,110 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-23 20:27:51,110 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-23 20:27:51,110 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-23 20:27:51,322 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-23 20:27:51,322 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-23 20:27:51,322 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-23 20:27:51,323 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-23 20:27:51,356 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-23 20:27:51,356 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-23 20:27:51,357 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-23 20:27:51,357 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 20:27:51,671 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-23 20:27:51,671 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 20:27:51,672 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 20:27:51,672 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-23 20:27:51,863 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-23 20:27:51,863 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-23 20:27:51,865 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 20:27:51,865 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-23 20:27:51,896 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-23 20:27:51,896 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-23 20:27:51,896 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-23 20:27:51,897 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-23 20:27:51,927 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-23 20:27:51,927 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-23 20:27:51,927 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-23 20:27:51,927 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-23 20:27:51,957 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-23 20:27:51,957 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-23 20:27:51,957 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-23 20:27:51,957 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-23 20:27:51,985 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-23 20:27:51,985 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-23 20:27:51,985 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-23 20:27:51,985 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-23 20:27:52,013 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-23 20:27:52,013 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-23 20:27:52,014 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-23 20:27:52,014 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-23 20:27:52,014 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 20:27:52,014 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-23 20:27:52,050 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-23 20:27:52,050 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-23 20:27:52,270 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-23 20:27:52,270 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-23 20:27:52,270 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-23 20:27:52,302 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-23 20:27:52,302 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-23 20:27:52,302 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-23 20:27:52,302 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-23 20:27:52,354 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-23 20:27:52,354 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-23 20:27:52,545 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-23 20:27:52,545 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-23 20:27:52,545 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-23 20:27:52,546 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-23 20:27:52,546 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 20:27:52,839 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-23 20:27:52,839 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-23 20:27:52,984 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-23 20:27:52,985 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:27:52,985 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 20:27:53,149 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-23 20:27:53,149 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-23 20:27:53,150 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:27:53,150 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-23 20:27:53,180 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-23 20:27:53,181 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-23 20:27:53,181 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-23 20:27:53,181 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 20:27:53,557 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-23 20:27:53,558 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 20:27:53,558 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 20:27:53,558 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-23 20:27:53,743 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-23 20:27:53,744 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-23 20:27:53,744 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 20:27:53,744 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-23 20:27:53,775 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-23 20:27:53,775 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-23 20:27:53,775 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-23 20:27:53,775 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-23 20:27:54,151 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-23 20:27:54,152 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-23 20:27:54,152 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:27:54,152 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-23 20:27:54,346 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-23 20:27:54,346 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-23 20:27:54,346 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:27:54,346 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-23 20:27:54,379 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-23 20:27:54,379 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-23 20:27:54,379 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-23 20:27:54,380 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-23 20:27:54,417 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-23 20:27:54,418 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-23 20:27:54,418 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-23 20:27:54,418 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-23 20:27:54,418 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-23 20:27:54,418 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-23 20:27:54,897 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-23 20:27:54,898 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-23 20:27:54,898 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-23 20:27:54,898 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-23 20:27:55,063 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-23 20:27:55,063 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-23 20:27:55,063 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-23 20:27:55,063 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-23 20:27:55,095 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-23 20:27:55,095 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-23 20:27:55,095 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-23 20:27:55,095 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 20:27:55,388 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-23 20:27:55,389 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 20:27:55,516 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-23 20:27:55,516 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 20:27:55,516 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-23 20:27:55,690 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-23 20:27:55,691 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-23 20:27:55,691 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-23 20:27:55,691 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-23 20:27:55,722 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-23 20:27:55,722 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-23 20:27:55,723 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-23 20:27:55,723 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-23 20:27:55,723 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-23 20:27:56,037 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 20:27:56,037 [test_recharge.py-->line:33]:注册用户15828350774成功
INFO 2021-04-23 20:27:56,252 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 20:27:56,253 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-23 20:27:58,407 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-23 20:27:58,408 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-23 20:27:58,432 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-23 20:27:58,433 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-23 20:27:58,433 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-23 20:28:00,499 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-23 20:28:00,499 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-23 20:28:00,524 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-23 20:28:00,524 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-23 20:28:00,525 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-23 20:28:02,586 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-23 20:28:02,586 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-23 20:28:02,614 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-23 20:28:02,614 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-23 20:28:02,615 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-23 20:28:04,677 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-23 20:28:04,677 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-23 20:28:04,702 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-23 20:28:04,703 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-23 20:28:04,703 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-23 20:28:06,762 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-23 20:28:06,763 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-23 20:28:06,763 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-23 20:28:06,763 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-23 20:28:08,819 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-23 20:28:08,820 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-23 20:28:08,820 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-23 20:28:08,820 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-23 20:28:10,890 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-23 20:28:10,890 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-23 20:28:10,891 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-23 20:28:10,891 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 20:28:10,891 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000384858, 'leave_amount': 503553.68, 'mobile_phone': '15828350774', 'reg_name': '小柠檬', 'reg_time': '2021-04-23 20:27:57.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 20:28:10,892 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-23 20:28:12,952 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-23 20:28:12,952 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-23 20:28:12,953 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-23 20:28:12,953 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-23 20:28:15,014 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-23 20:28:15,015 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 20:28:15,015 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-23 20:28:15,016 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 20:28:15,016 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000384858, 'leave_amount': 503553.68, 'mobile_phone': '15828350774', 'reg_name': '小柠檬', 'reg_time': '2021-04-23 20:27:57.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 20:28:15,016 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-23 20:28:17,071 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-23 20:28:17,071 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-23 20:28:17,071 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-23 20:28:17,072 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-23 20:28:19,165 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-23 20:28:19,165 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-23 20:28:19,166 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-23 20:28:19,166 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-23 20:28:21,222 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-23 20:28:21,222 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-23 20:28:21,222 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-23 20:28:21,223 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-23 20:28:23,279 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-23 20:28:23,279 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-23 20:28:23,279 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-23 20:28:23,279 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-23 20:28:25,335 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-23 20:28:25,335 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-23 20:28:25,335 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-23 20:28:25,335 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-23 20:28:25,335 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-23 20:28:25,335 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-23 20:28:25,708 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-23 20:28:25,709 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-23 20:28:25,835 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-23 20:28:25,835 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-23 20:28:25,835 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-23 20:28:26,131 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-23 20:28:26,132 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-23 20:28:26,259 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-23 20:28:26,259 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-23 20:28:26,259 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-23 20:28:26,553 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-23 20:28:26,554 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-23 20:28:26,687 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-23 20:28:26,687 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-23 20:28:26,688 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-23 20:28:26,715 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-23 20:28:26,715 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-23 20:28:26,715 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-23 20:28:26,715 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-23 20:28:26,743 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-23 20:28:26,744 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-23 20:28:26,744 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-23 20:28:26,744 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-23 20:28:26,771 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-23 20:28:26,771 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-23 20:28:26,771 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-23 20:28:26,771 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-23 20:28:26,799 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-23 20:28:26,799 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-23 20:28:26,800 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-23 20:28:26,800 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-23 20:28:26,963 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-23 20:28:26,964 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-23 20:28:26,964 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-23 20:28:26,964 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-23 20:28:26,993 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-23 20:28:26,994 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-23 20:28:26,994 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-23 20:28:26,994 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-23 20:28:27,022 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-23 20:28:27,022 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-23 20:28:27,022 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-23 20:28:27,022 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-23 20:28:27,050 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-23 20:28:27,050 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-23 20:28:27,050 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-23 20:28:27,050 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-23 20:28:27,077 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-23 20:28:27,078 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-23 20:28:27,078 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-23 20:28:27,078 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-23 20:28:27,105 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-23 20:28:27,105 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-23 20:28:27,106 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-23 20:28:27,106 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-23 20:46:36,873 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-23 20:46:37,256 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 20:46:37,256 [test_audit.py-->line:31]:注册普通用户15863803327成功
INFO 2021-04-23 20:46:37,433 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 20:46:37,744 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 20:46:37,745 [test_audit.py-->line:47]:注册用户15874550640成功
INFO 2021-04-23 20:46:37,942 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 20:46:38,003 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:46:38,003 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:46:38,003 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-23 20:46:38,043 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-23 20:46:38,043 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-23 20:46:38,074 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-23 20:46:38,075 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-23 20:46:38,120 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:46:38,121 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:46:38,121 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-23 20:46:38,145 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-23 20:46:38,146 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-23 20:46:38,177 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-23 20:46:38,177 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-23 20:46:38,252 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:46:38,253 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:46:38,253 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-23 20:46:38,272 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-23 20:46:38,272 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-23 20:46:38,272 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-23 20:46:38,315 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:46:38,316 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:46:38,316 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-23 20:46:38,339 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-23 20:46:38,340 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-23 20:46:38,341 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-23 20:46:38,341 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 20:46:38,341 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 20:46:38,398 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:46:38,398 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:46:38,398 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-23 20:46:38,420 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-23 20:46:38,420 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-23 20:46:38,420 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-23 20:46:38,481 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:46:38,481 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:46:38,481 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-23 20:46:38,501 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-23 20:46:38,502 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-23 20:46:38,502 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-23 20:46:38,547 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:46:38,548 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:46:38,548 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-23 20:46:38,570 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-23 20:46:38,570 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-23 20:46:38,570 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-23 20:46:38,570 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-23 20:46:38,570 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-23 20:46:38,570 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-23 20:46:38,797 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-23 20:46:38,797 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-23 20:46:38,797 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-23 20:46:38,798 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-23 20:46:39,079 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-23 20:46:39,082 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-23 20:46:39,082 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-23 20:46:39,082 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-23 20:46:39,082 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-23 20:46:39,082 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 20:46:39,406 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-23 20:46:39,406 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-23 20:46:39,407 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:46:39,407 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 20:46:39,574 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-23 20:46:39,575 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-23 20:46:39,575 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:46:39,575 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-23 20:46:39,629 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-23 20:46:39,630 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-23 20:46:39,630 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-23 20:46:39,630 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-23 20:46:39,941 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-23 20:46:39,941 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-23 20:46:39,941 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-23 20:46:39,941 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-23 20:46:40,132 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-23 20:46:40,132 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-23 20:46:40,133 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-23 20:46:40,133 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-23 20:46:40,162 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-23 20:46:40,162 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-23 20:46:40,162 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-23 20:46:40,163 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-23 20:46:40,469 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-23 20:46:40,470 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-23 20:46:40,470 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-23 20:46:40,470 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-23 20:46:40,743 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-23 20:46:40,743 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-23 20:46:40,743 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-23 20:46:40,744 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-23 20:46:40,772 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-23 20:46:40,772 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-23 20:46:40,772 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-23 20:46:40,773 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 20:46:41,177 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-23 20:46:41,177 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 20:46:41,177 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 20:46:41,178 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-23 20:46:41,355 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-23 20:46:41,356 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-23 20:46:41,356 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 20:46:41,357 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-23 20:46:41,389 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-23 20:46:41,389 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-23 20:46:41,389 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-23 20:46:41,390 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-23 20:46:41,413 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-23 20:46:41,413 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-23 20:46:41,414 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-23 20:46:41,414 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-23 20:46:41,436 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-23 20:46:41,436 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-23 20:46:41,436 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-23 20:46:41,436 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-23 20:46:41,457 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-23 20:46:41,458 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-23 20:46:41,458 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-23 20:46:41,458 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-23 20:46:41,479 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-23 20:46:41,479 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-23 20:46:41,480 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-23 20:46:41,481 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-23 20:46:41,481 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 20:46:41,481 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-23 20:46:41,510 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-23 20:46:41,511 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-23 20:46:41,682 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-23 20:46:41,683 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-23 20:46:41,683 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-23 20:46:41,708 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-23 20:46:41,708 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-23 20:46:41,708 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-23 20:46:41,708 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-23 20:46:41,750 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-23 20:46:41,750 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-23 20:46:41,958 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-23 20:46:41,959 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-23 20:46:41,959 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-23 20:46:41,960 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-23 20:46:41,960 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 20:46:42,374 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-23 20:46:42,374 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-23 20:46:42,592 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-23 20:46:42,593 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:46:42,593 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 20:46:42,869 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-23 20:46:42,869 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-23 20:46:42,869 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:46:42,869 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-23 20:46:42,894 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-23 20:46:42,895 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-23 20:46:42,895 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-23 20:46:42,895 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 20:46:43,250 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-23 20:46:43,254 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 20:46:43,254 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 20:46:43,254 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-23 20:46:43,463 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-23 20:46:43,463 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-23 20:46:43,464 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 20:46:43,464 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-23 20:46:43,488 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-23 20:46:43,488 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-23 20:46:43,488 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-23 20:46:43,489 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-23 20:46:43,801 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-23 20:46:43,801 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-23 20:46:43,801 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:46:43,801 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-23 20:46:43,990 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-23 20:46:43,990 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-23 20:46:43,991 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:46:43,991 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-23 20:46:44,020 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-23 20:46:44,020 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-23 20:46:44,020 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-23 20:46:44,020 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-23 20:46:44,052 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-23 20:46:44,052 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-23 20:46:44,052 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-23 20:46:44,052 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-23 20:46:44,053 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-23 20:46:44,053 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-23 20:46:44,372 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-23 20:46:44,372 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-23 20:46:44,372 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-23 20:46:44,373 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-23 20:46:44,534 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-23 20:46:44,535 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-23 20:46:44,535 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-23 20:46:44,535 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-23 20:46:44,561 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-23 20:46:44,561 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-23 20:46:44,562 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-23 20:46:44,562 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 20:46:44,994 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-23 20:46:44,995 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 20:46:45,131 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-23 20:46:45,132 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 20:46:45,132 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-23 20:46:45,290 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-23 20:46:45,290 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-23 20:46:45,290 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-23 20:46:45,290 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-23 20:46:45,314 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-23 20:46:45,314 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-23 20:46:45,314 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-23 20:46:45,314 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-23 20:46:45,314 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-23 20:46:45,626 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 20:46:45,626 [test_recharge.py-->line:33]:注册用户15804425578成功
INFO 2021-04-23 20:46:45,809 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 20:46:45,809 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-23 20:46:47,950 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-23 20:46:47,950 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-23 20:46:47,986 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-23 20:46:47,986 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-23 20:46:47,987 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-23 20:46:50,036 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-23 20:46:50,037 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-23 20:46:50,066 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-23 20:46:50,067 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-23 20:46:50,067 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-23 20:46:52,118 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-23 20:46:52,119 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-23 20:46:52,149 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-23 20:46:52,149 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-23 20:46:52,150 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-23 20:46:54,200 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-23 20:46:54,200 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-23 20:46:54,230 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-23 20:46:54,231 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-23 20:46:54,231 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-23 20:46:56,278 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-23 20:46:56,278 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-23 20:46:56,278 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-23 20:46:56,279 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-23 20:46:58,321 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-23 20:46:58,321 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-23 20:46:58,321 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-23 20:46:58,322 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-23 20:47:00,377 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-23 20:47:00,378 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-23 20:47:00,379 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-23 20:47:00,379 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 20:47:00,379 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000384918, 'leave_amount': 503553.68, 'mobile_phone': '15804425578', 'reg_name': '小柠檬', 'reg_time': '2021-04-23 20:46:46.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 20:47:00,385 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-23 20:47:02,431 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-23 20:47:02,431 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-23 20:47:02,431 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-23 20:47:02,431 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-23 20:47:04,479 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-23 20:47:04,479 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 20:47:04,480 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-23 20:47:04,480 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 20:47:04,480 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000384918, 'leave_amount': 503553.68, 'mobile_phone': '15804425578', 'reg_name': '小柠檬', 'reg_time': '2021-04-23 20:46:46.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 20:47:04,480 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-23 20:47:06,523 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-23 20:47:06,523 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-23 20:47:06,523 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-23 20:47:06,523 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-23 20:47:08,575 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-23 20:47:08,575 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-23 20:47:08,575 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-23 20:47:08,576 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-23 20:47:10,621 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-23 20:47:10,622 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-23 20:47:10,622 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-23 20:47:10,622 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-23 20:47:12,663 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-23 20:47:12,664 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-23 20:47:12,664 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-23 20:47:12,664 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-23 20:47:14,713 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-23 20:47:14,714 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-23 20:47:14,714 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-23 20:47:14,714 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-23 20:47:14,714 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-23 20:47:14,714 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-23 20:47:15,047 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-23 20:47:15,048 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-23 20:47:15,181 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-23 20:47:15,181 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-23 20:47:15,181 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-23 20:47:15,554 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-23 20:47:15,554 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-23 20:47:15,687 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-23 20:47:15,688 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-23 20:47:15,688 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-23 20:47:15,987 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-23 20:47:15,987 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-23 20:47:16,124 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-23 20:47:16,124 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-23 20:47:16,124 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-23 20:47:16,146 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-23 20:47:16,146 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-23 20:47:16,146 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-23 20:47:16,146 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-23 20:47:16,166 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-23 20:47:16,167 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-23 20:47:16,167 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-23 20:47:16,167 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-23 20:47:16,187 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-23 20:47:16,188 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-23 20:47:16,188 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-23 20:47:16,188 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-23 20:47:16,208 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-23 20:47:16,208 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-23 20:47:16,208 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-23 20:47:16,208 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-23 20:47:16,473 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-23 20:47:16,474 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-23 20:47:16,474 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-23 20:47:16,474 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-23 20:47:16,497 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-23 20:47:16,497 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-23 20:47:16,497 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-23 20:47:16,497 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-23 20:47:16,518 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-23 20:47:16,519 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-23 20:47:16,519 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-23 20:47:16,519 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-23 20:47:16,539 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-23 20:47:16,539 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-23 20:47:16,539 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-23 20:47:16,539 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-23 20:47:16,559 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-23 20:47:16,559 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-23 20:47:16,559 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-23 20:47:16,559 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-23 20:47:16,580 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-23 20:47:16,581 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-23 20:47:16,581 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-23 20:47:16,581 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-23 20:54:09,154 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-23 20:54:09,513 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 20:54:09,513 [test_audit.py-->line:31]:注册普通用户15800951931成功
INFO 2021-04-23 20:54:09,689 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 20:54:10,069 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 20:54:10,070 [test_audit.py-->line:47]:注册用户15875547753成功
INFO 2021-04-23 20:54:10,261 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 20:54:10,306 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:54:10,307 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:54:10,307 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-23 20:54:10,357 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-23 20:54:10,357 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-23 20:54:10,388 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-23 20:54:10,388 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-23 20:54:10,438 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:54:10,439 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:54:10,439 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-23 20:54:10,465 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-23 20:54:10,466 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-23 20:54:10,497 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-23 20:54:10,497 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-23 20:54:10,542 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:54:10,542 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:54:10,543 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-23 20:54:10,568 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-23 20:54:10,569 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-23 20:54:10,569 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-23 20:54:10,625 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:54:10,625 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:54:10,626 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-23 20:54:10,652 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-23 20:54:10,653 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-23 20:54:10,655 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-23 20:54:10,655 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 20:54:10,656 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 20:54:10,713 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:54:10,714 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:54:10,714 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-23 20:54:10,742 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-23 20:54:10,742 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-23 20:54:10,742 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-23 20:54:10,791 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:54:10,792 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:54:10,793 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-23 20:54:10,819 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-23 20:54:10,819 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-23 20:54:10,819 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-23 20:54:10,878 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 20:54:10,879 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 20:54:10,879 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-23 20:54:10,902 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-23 20:54:10,903 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-23 20:54:10,903 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-23 20:54:10,903 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-23 20:54:10,903 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-23 20:54:10,904 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-23 20:54:11,211 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-23 20:54:11,211 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-23 20:54:11,211 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-23 20:54:11,211 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-23 20:54:11,545 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-23 20:54:11,547 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-23 20:54:11,547 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-23 20:54:11,548 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-23 20:54:11,548 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-23 20:54:11,548 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 20:54:11,862 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-23 20:54:11,863 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-23 20:54:11,863 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:54:11,864 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 20:54:12,024 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-23 20:54:12,025 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-23 20:54:12,025 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:54:12,025 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-23 20:54:12,084 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-23 20:54:12,084 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-23 20:54:12,084 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-23 20:54:12,084 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-23 20:54:12,490 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-23 20:54:12,490 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-23 20:54:12,490 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-23 20:54:12,490 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-23 20:54:12,714 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-23 20:54:12,715 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-23 20:54:12,715 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-23 20:54:12,716 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-23 20:54:12,748 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-23 20:54:12,748 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-23 20:54:12,749 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-23 20:54:12,749 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-23 20:54:13,198 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-23 20:54:13,198 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-23 20:54:13,199 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-23 20:54:13,199 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-23 20:54:13,368 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-23 20:54:13,368 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-23 20:54:13,369 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-23 20:54:13,369 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-23 20:54:13,401 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-23 20:54:13,402 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-23 20:54:13,402 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-23 20:54:13,402 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 20:54:13,789 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-23 20:54:13,790 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 20:54:13,790 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 20:54:13,791 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-23 20:54:13,975 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-23 20:54:13,976 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-23 20:54:13,977 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 20:54:13,977 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-23 20:54:14,007 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-23 20:54:14,008 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-23 20:54:14,008 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-23 20:54:14,009 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-23 20:54:14,060 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-23 20:54:14,060 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-23 20:54:14,061 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-23 20:54:14,062 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-23 20:54:14,093 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-23 20:54:14,094 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-23 20:54:14,094 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-23 20:54:14,094 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-23 20:54:14,123 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-23 20:54:14,123 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-23 20:54:14,123 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-23 20:54:14,123 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-23 20:54:14,151 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-23 20:54:14,152 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-23 20:54:14,153 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-23 20:54:14,154 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-23 20:54:14,154 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 20:54:14,156 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-23 20:54:14,200 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-23 20:54:14,201 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-23 20:54:14,390 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-23 20:54:14,390 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-23 20:54:14,391 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-23 20:54:14,423 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-23 20:54:14,424 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-23 20:54:14,424 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-23 20:54:14,424 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-23 20:54:14,470 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-23 20:54:14,471 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-23 20:54:14,679 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-23 20:54:14,679 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-23 20:54:14,680 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-23 20:54:14,680 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-23 20:54:14,680 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 20:54:14,991 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-23 20:54:14,992 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-23 20:54:15,123 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-23 20:54:15,124 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:54:15,124 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 20:54:15,283 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-23 20:54:15,283 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-23 20:54:15,284 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:54:15,284 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-23 20:54:15,312 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-23 20:54:15,313 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-23 20:54:15,313 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-23 20:54:15,313 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 20:54:15,609 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-23 20:54:15,609 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 20:54:15,610 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 20:54:15,610 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-23 20:54:15,784 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-23 20:54:15,784 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-23 20:54:15,785 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 20:54:15,786 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-23 20:54:15,813 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-23 20:54:15,814 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-23 20:54:15,814 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-23 20:54:15,814 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-23 20:54:16,125 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-23 20:54:16,125 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-23 20:54:16,126 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:54:16,126 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-23 20:54:16,287 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-23 20:54:16,287 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-23 20:54:16,287 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-23 20:54:16,288 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-23 20:54:16,315 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-23 20:54:16,315 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-23 20:54:16,315 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-23 20:54:16,315 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-23 20:54:16,348 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-23 20:54:16,348 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-23 20:54:16,348 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-23 20:54:16,348 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-23 20:54:16,348 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-23 20:54:16,348 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-23 20:54:16,638 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-23 20:54:16,638 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-23 20:54:16,638 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-23 20:54:16,638 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-23 20:54:16,804 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-23 20:54:16,804 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-23 20:54:16,805 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-23 20:54:16,806 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-23 20:54:16,834 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-23 20:54:16,834 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-23 20:54:16,835 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-23 20:54:16,835 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 20:54:17,336 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-23 20:54:17,336 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 20:54:17,469 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-23 20:54:17,469 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 20:54:17,470 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-23 20:54:17,632 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-23 20:54:17,632 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-23 20:54:17,633 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-23 20:54:17,633 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-23 20:54:17,659 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-23 20:54:17,660 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-23 20:54:17,660 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-23 20:54:17,660 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-23 20:54:17,660 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-23 20:54:17,986 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 20:54:17,986 [test_recharge.py-->line:33]:注册用户15823187004成功
INFO 2021-04-23 20:54:18,180 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 20:54:18,181 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-23 20:54:18,211 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-23 20:54:18,212 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-23 20:54:18,243 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-23 20:54:18,243 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-23 20:54:18,244 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-23 20:54:18,272 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-23 20:54:18,273 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-23 20:54:18,303 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-23 20:54:18,303 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-23 20:54:18,303 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-23 20:54:18,332 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-23 20:54:18,333 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-23 20:54:18,367 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-23 20:54:18,367 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-23 20:54:18,367 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-23 20:54:18,399 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-23 20:54:18,400 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-23 20:54:18,430 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-23 20:54:18,431 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-23 20:54:18,434 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-23 20:54:18,457 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-23 20:54:18,457 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-23 20:54:18,458 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-23 20:54:18,458 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-23 20:54:18,480 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-23 20:54:18,481 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-23 20:54:18,481 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-23 20:54:18,481 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-23 20:54:18,508 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-23 20:54:18,509 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-23 20:54:18,509 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-23 20:54:18,509 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 20:54:18,510 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000384952, 'leave_amount': 503553.68, 'mobile_phone': '15823187004', 'reg_name': '小柠檬', 'reg_time': '2021-04-23 20:54:19.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 20:54:18,511 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-23 20:54:18,536 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-23 20:54:18,536 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-23 20:54:18,536 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-23 20:54:18,536 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-23 20:54:18,562 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-23 20:54:18,562 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 20:54:18,562 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-23 20:54:18,563 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 20:54:18,563 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000384952, 'leave_amount': 503553.68, 'mobile_phone': '15823187004', 'reg_name': '小柠檬', 'reg_time': '2021-04-23 20:54:19.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 20:54:18,563 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-23 20:54:18,586 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-23 20:54:18,587 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-23 20:54:18,587 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-23 20:54:18,587 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-23 20:54:18,609 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-23 20:54:18,609 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-23 20:54:18,609 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-23 20:54:18,609 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-23 20:54:18,637 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-23 20:54:18,638 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-23 20:54:18,638 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-23 20:54:18,638 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-23 20:54:18,662 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-23 20:54:18,662 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-23 20:54:18,662 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-23 20:54:18,662 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-23 20:54:18,684 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-23 20:54:18,684 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-23 20:54:18,685 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-23 20:54:18,685 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-23 20:54:18,685 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-23 20:54:18,685 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-23 20:54:18,984 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-23 20:54:18,985 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-23 20:54:19,124 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-23 20:54:19,124 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-23 20:54:19,124 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-23 20:54:19,416 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-23 20:54:19,417 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-23 20:54:19,548 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-23 20:54:19,548 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-23 20:54:19,548 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-23 20:54:19,838 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-23 20:54:19,838 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-23 20:54:19,971 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-23 20:54:19,972 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-23 20:54:19,972 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-23 20:54:19,995 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-23 20:54:19,995 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-23 20:54:19,995 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-23 20:54:19,995 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-23 20:54:20,017 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-23 20:54:20,018 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-23 20:54:20,018 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-23 20:54:20,018 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-23 20:54:20,039 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-23 20:54:20,039 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-23 20:54:20,039 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-23 20:54:20,040 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-23 20:54:20,063 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-23 20:54:20,063 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-23 20:54:20,063 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-23 20:54:20,063 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-23 20:54:20,218 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-23 20:54:20,218 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-23 20:54:20,218 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-23 20:54:20,218 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-23 20:54:20,242 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-23 20:54:20,244 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-23 20:54:20,245 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-23 20:54:20,245 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-23 20:54:20,269 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-23 20:54:20,269 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-23 20:54:20,269 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-23 20:54:20,270 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-23 20:54:20,292 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-23 20:54:20,292 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-23 20:54:20,292 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-23 20:54:20,293 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-23 20:54:20,316 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-23 20:54:20,316 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-23 20:54:20,316 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-23 20:54:20,317 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-23 20:54:20,338 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-23 20:54:20,339 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-23 20:54:20,339 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-23 20:54:20,339 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-23 21:50:13,599 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-23 21:50:13,900 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 21:50:13,900 [test_audit.py-->line:31]:注册普通用户15842603110成功
INFO 2021-04-23 21:50:14,073 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 21:50:14,378 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 21:50:14,379 [test_audit.py-->line:47]:注册用户15893843499成功
INFO 2021-04-23 21:50:14,566 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 21:50:14,621 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:50:14,622 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:50:14,622 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-23 21:50:14,681 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-23 21:50:14,681 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-23 21:50:14,704 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-23 21:50:14,704 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-23 21:50:14,767 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:50:14,771 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:50:14,772 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-23 21:50:14,805 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-23 21:50:14,805 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-23 21:50:14,829 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-23 21:50:14,829 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-23 21:50:14,881 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:50:14,881 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:50:14,881 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-23 21:50:14,911 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-23 21:50:14,911 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-23 21:50:14,911 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-23 21:50:14,969 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:50:14,970 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:50:14,970 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-23 21:50:15,002 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-23 21:50:15,003 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "d:\program files\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "d:\program files\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "d:\program files\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-23 21:50:15,007 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-23 21:50:15,007 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:50:15,008 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:50:15,282 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:50:15,282 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:50:15,282 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-23 21:50:15,313 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-23 21:50:15,315 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-23 21:50:15,316 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-23 21:50:15,377 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:50:15,377 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:50:15,378 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-23 21:50:15,409 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-23 21:50:15,410 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-23 21:50:15,410 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-23 21:50:15,471 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:50:15,472 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:50:15,472 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-23 21:50:15,514 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-23 21:50:15,514 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-23 21:50:15,514 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-23 21:50:15,515 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-23 21:50:15,519 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-23 21:50:15,520 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-23 21:50:15,823 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-23 21:50:15,823 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-23 21:50:15,823 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-23 21:50:15,825 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-23 21:50:16,170 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-23 21:50:16,172 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-23 21:50:16,172 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-23 21:50:16,173 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-23 21:50:16,175 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-23 21:50:16,176 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:50:16,464 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-23 21:50:16,464 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:50:16,465 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:50:16,467 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:50:16,636 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-23 21:50:16,637 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:50:16,638 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:50:16,642 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-23 21:50:16,713 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-23 21:50:16,713 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-23 21:50:16,714 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-23 21:50:16,715 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-23 21:50:17,006 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-23 21:50:17,006 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-23 21:50:17,006 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-23 21:50:17,009 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-23 21:50:17,174 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-23 21:50:17,175 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-23 21:50:17,175 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-23 21:50:17,177 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-23 21:50:17,215 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-23 21:50:17,216 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-23 21:50:17,216 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-23 21:50:17,220 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-23 21:50:17,514 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-23 21:50:17,515 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-23 21:50:17,515 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-23 21:50:17,517 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-23 21:50:17,687 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-23 21:50:17,688 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-23 21:50:17,689 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-23 21:50:17,694 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-23 21:50:17,730 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-23 21:50:17,730 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-23 21:50:17,731 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-23 21:50:17,734 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:50:18,048 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-23 21:50:18,048 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:50:18,048 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:50:18,051 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:50:18,219 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-23 21:50:18,219 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:50:18,220 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:50:18,223 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-23 21:50:18,259 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-23 21:50:18,259 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-23 21:50:18,259 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-23 21:50:18,262 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-23 21:50:18,296 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-23 21:50:18,297 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-23 21:50:18,297 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-23 21:50:18,299 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-23 21:50:18,329 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-23 21:50:18,329 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-23 21:50:18,329 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-23 21:50:18,332 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-23 21:50:18,363 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-23 21:50:18,363 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-23 21:50:18,363 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-23 21:50:18,365 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-23 21:50:18,395 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-23 21:50:18,400 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "d:\program files\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "d:\program files\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "d:\program files\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-23 21:50:18,401 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-23 21:50:18,401 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-23 21:50:18,401 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:50:18,447 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-23 21:50:18,489 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-23 21:50:18,489 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-23 21:50:18,638 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-23 21:50:18,639 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-23 21:50:18,640 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-23 21:50:18,678 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-23 21:50:18,680 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-23 21:50:18,680 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-23 21:50:18,688 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-23 21:50:18,740 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-23 21:50:18,740 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-23 21:50:18,921 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-23 21:50:18,921 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-23 21:50:18,923 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-23 21:50:18,927 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-23 21:50:18,928 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:50:19,231 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-23 21:50:19,231 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:50:19,356 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-23 21:50:19,357 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:50:19,359 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:50:19,533 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-23 21:50:19,533 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:50:19,534 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:50:19,540 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-23 21:50:19,573 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-23 21:50:19,573 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-23 21:50:19,574 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-23 21:50:19,576 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:50:19,915 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-23 21:50:19,916 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:50:19,916 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:50:19,919 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:50:20,085 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-23 21:50:20,085 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:50:20,085 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:50:20,088 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-23 21:50:20,121 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-23 21:50:20,121 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-23 21:50:20,121 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-23 21:50:20,124 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-23 21:50:20,415 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-23 21:50:20,416 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-23 21:50:20,416 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:50:20,418 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-23 21:50:20,585 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-23 21:50:20,586 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-23 21:50:20,586 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:50:20,590 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-23 21:50:20,625 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-23 21:50:20,626 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-23 21:50:20,626 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-23 21:50:20,627 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-23 21:50:20,667 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-23 21:50:20,668 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-23 21:50:20,668 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-23 21:50:20,669 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-23 21:50:20,671 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-23 21:50:20,672 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-23 21:50:21,011 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-23 21:50:21,011 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-23 21:50:21,011 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-23 21:50:21,013 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-23 21:50:21,268 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-23 21:50:21,268 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-23 21:50:21,268 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-23 21:50:21,273 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-23 21:50:21,307 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-23 21:50:21,307 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-23 21:50:21,307 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-23 21:50:21,310 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:50:21,607 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-23 21:50:21,607 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:50:21,732 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-23 21:50:21,732 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:50:21,735 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-23 21:50:21,922 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-23 21:50:21,923 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-23 21:50:21,923 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-23 21:50:21,925 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-23 21:50:21,959 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-23 21:50:21,960 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-23 21:50:21,960 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-23 21:50:21,961 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-23 21:50:21,965 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-23 21:50:22,278 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 21:50:22,278 [test_recharge.py-->line:33]:注册用户15879394768成功
INFO 2021-04-23 21:50:22,577 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 21:50:22,579 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-23 21:50:22,615 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-23 21:50:22,615 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-23 21:50:22,639 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-23 21:50:22,639 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-23 21:50:22,640 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-23 21:50:22,675 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-23 21:50:22,675 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-23 21:50:22,699 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-23 21:50:22,699 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:50:22,704 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-23 21:50:22,743 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-23 21:50:22,743 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-23 21:50:22,766 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-23 21:50:22,766 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:50:22,768 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-23 21:50:22,804 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-23 21:50:22,804 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-23 21:50:22,827 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-23 21:50:22,827 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-23 21:50:22,829 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-23 21:50:22,859 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-23 21:50:22,859 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-23 21:50:22,859 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-23 21:50:22,861 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-23 21:50:22,893 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-23 21:50:22,893 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-23 21:50:22,893 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-23 21:50:22,896 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-23 21:50:22,932 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-23 21:50:22,933 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "d:\program files\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "d:\program files\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "d:\program files\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-23 21:50:22,933 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-23 21:50:22,933 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:50:22,934 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000385067, 'leave_amount': 503553.68, 'mobile_phone': '15879394768', 'reg_name': '小柠檬', 'reg_time': '2021-04-23 21:50:23.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:50:22,946 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-23 21:50:22,976 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-23 21:50:22,977 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-23 21:50:22,977 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:50:22,980 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-23 21:50:23,017 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-23 21:50:23,018 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "d:\program files\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "d:\program files\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "d:\program files\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:50:23,019 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-23 21:50:23,019 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:50:23,019 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000385067, 'leave_amount': 503553.68, 'mobile_phone': '15879394768', 'reg_name': '小柠檬', 'reg_time': '2021-04-23 21:50:23.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:50:23,031 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-23 21:50:23,061 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-23 21:50:23,061 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-23 21:50:23,061 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-23 21:50:23,064 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-23 21:50:23,094 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-23 21:50:23,094 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-23 21:50:23,094 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-23 21:50:23,098 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-23 21:50:23,128 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-23 21:50:23,128 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-23 21:50:23,128 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:50:23,131 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-23 21:50:23,163 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-23 21:50:23,164 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-23 21:50:23,164 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-23 21:50:23,168 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-23 21:50:23,198 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-23 21:50:23,198 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-23 21:50:23,198 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-23 21:50:23,199 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-23 21:50:23,201 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-23 21:50:23,202 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-23 21:50:23,607 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-23 21:50:23,607 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-23 21:50:23,730 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-23 21:50:23,731 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-23 21:50:23,734 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-23 21:50:24,023 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-23 21:50:24,023 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-23 21:50:24,143 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-23 21:50:24,144 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-23 21:50:24,152 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-23 21:50:24,444 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-23 21:50:24,445 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-23 21:50:24,568 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-23 21:50:24,568 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-23 21:50:24,570 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-23 21:50:24,599 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-23 21:50:24,600 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-23 21:50:24,600 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-23 21:50:24,608 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-23 21:50:24,638 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-23 21:50:24,639 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-23 21:50:24,639 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-23 21:50:24,641 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-23 21:50:24,671 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-23 21:50:24,671 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-23 21:50:24,671 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-23 21:50:24,673 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-23 21:50:24,702 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-23 21:50:24,703 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-23 21:50:24,703 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-23 21:50:24,705 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-23 21:50:24,870 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-23 21:50:24,871 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-23 21:50:24,871 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-23 21:50:24,876 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-23 21:50:24,906 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-23 21:50:24,907 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-23 21:50:24,907 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-23 21:50:24,909 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-23 21:50:24,941 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-23 21:50:24,942 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-23 21:50:24,942 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-23 21:50:24,946 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-23 21:50:24,975 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-23 21:50:24,975 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-23 21:50:24,975 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-23 21:50:24,978 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-23 21:50:25,009 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-23 21:50:25,009 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-23 21:50:25,010 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-23 21:50:25,014 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-23 21:50:25,044 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-23 21:50:25,044 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-23 21:50:25,044 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-23 21:50:25,045 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-23 21:53:39,856 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-23 21:53:40,157 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 21:53:40,157 [test_audit.py-->line:31]:注册普通用户15816087357成功
INFO 2021-04-23 21:53:40,424 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 21:53:40,933 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 21:53:40,934 [test_audit.py-->line:47]:注册用户15865279782成功
INFO 2021-04-23 21:53:41,126 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 21:53:41,178 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:53:41,178 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:53:41,178 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-23 21:53:41,221 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-23 21:53:41,222 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-23 21:53:41,245 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-23 21:53:41,245 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-23 21:53:41,302 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:53:41,304 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:53:41,305 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-23 21:53:41,331 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-23 21:53:41,332 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-23 21:53:41,355 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-23 21:53:41,356 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-23 21:53:41,402 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:53:41,402 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:53:41,403 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-23 21:53:41,425 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-23 21:53:41,426 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-23 21:53:41,426 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-23 21:53:41,480 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:53:41,481 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:53:41,481 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-23 21:53:41,508 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-23 21:53:41,509 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "d:\program files\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "d:\program files\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "d:\program files\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-23 21:53:41,511 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-23 21:53:41,514 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:53:41,518 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:53:41,811 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:53:41,812 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:53:41,813 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-23 21:53:41,834 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-23 21:53:41,835 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-23 21:53:41,839 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-23 21:53:41,885 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:53:41,886 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:53:41,886 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-23 21:53:41,913 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-23 21:53:41,914 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-23 21:53:41,917 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-23 21:53:41,964 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:53:41,964 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:53:41,965 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-23 21:53:41,988 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-23 21:53:41,988 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-23 21:53:41,989 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-23 21:53:41,990 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-23 21:53:41,992 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-23 21:53:41,993 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-23 21:53:42,231 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-23 21:53:42,232 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-23 21:53:42,236 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-23 21:53:42,238 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-23 21:53:42,513 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-23 21:53:42,515 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-23 21:53:42,516 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-23 21:53:42,517 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-23 21:53:42,519 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-23 21:53:42,520 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:53:42,935 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-23 21:53:42,937 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:53:42,940 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:53:42,949 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:53:43,222 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-23 21:53:43,223 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:53:43,223 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:53:43,225 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-23 21:53:43,277 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-23 21:53:43,277 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-23 21:53:43,278 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-23 21:53:43,280 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-23 21:53:43,569 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-23 21:53:43,571 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-23 21:53:43,585 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-23 21:53:43,593 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-23 21:53:43,752 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-23 21:53:43,752 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-23 21:53:43,754 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-23 21:53:43,756 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-23 21:53:43,786 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-23 21:53:43,786 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-23 21:53:43,787 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-23 21:53:43,788 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-23 21:53:44,081 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-23 21:53:44,082 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-23 21:53:44,084 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-23 21:53:44,094 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-23 21:53:44,259 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-23 21:53:44,260 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-23 21:53:44,261 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-23 21:53:44,262 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-23 21:53:44,293 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-23 21:53:44,296 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-23 21:53:44,303 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-23 21:53:44,310 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:53:44,597 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-23 21:53:44,598 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:53:44,599 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:53:44,600 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:53:44,802 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-23 21:53:44,802 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:53:44,803 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:53:44,804 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-23 21:53:44,836 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-23 21:53:44,837 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-23 21:53:44,840 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-23 21:53:44,845 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-23 21:53:44,871 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-23 21:53:44,872 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-23 21:53:44,872 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-23 21:53:44,875 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-23 21:53:44,900 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-23 21:53:44,900 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-23 21:53:44,901 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-23 21:53:44,903 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-23 21:53:44,926 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-23 21:53:44,926 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-23 21:53:44,927 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-23 21:53:44,928 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-23 21:53:44,951 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-23 21:53:44,954 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "d:\program files\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "d:\program files\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "d:\program files\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-23 21:53:44,970 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-23 21:53:44,972 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-23 21:53:44,972 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:53:45,047 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-23 21:53:45,078 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-23 21:53:45,079 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-23 21:53:45,227 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-23 21:53:45,227 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-23 21:53:45,230 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-23 21:53:45,255 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-23 21:53:45,256 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-23 21:53:45,257 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-23 21:53:45,259 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-23 21:53:45,301 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-23 21:53:45,302 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-23 21:53:45,542 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-23 21:53:45,543 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-23 21:53:45,544 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-23 21:53:45,547 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-23 21:53:45,547 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:53:45,996 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-23 21:53:45,997 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:53:46,189 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-23 21:53:46,190 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:53:46,191 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:53:46,353 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-23 21:53:46,354 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:53:46,357 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:53:46,358 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-23 21:53:46,384 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-23 21:53:46,384 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-23 21:53:46,387 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-23 21:53:46,388 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:53:46,675 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-23 21:53:46,676 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:53:46,676 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:53:46,678 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:53:46,951 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-23 21:53:46,951 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:53:46,952 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:53:46,953 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-23 21:53:46,978 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-23 21:53:46,980 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-23 21:53:46,982 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-23 21:53:46,984 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-23 21:53:47,405 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-23 21:53:47,405 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-23 21:53:47,406 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:53:47,408 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-23 21:53:47,665 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-23 21:53:47,666 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-23 21:53:47,668 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:53:47,670 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-23 21:53:47,699 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-23 21:53:47,699 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-23 21:53:47,700 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-23 21:53:47,704 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-23 21:53:47,736 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-23 21:53:47,736 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-23 21:53:47,737 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-23 21:53:47,738 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-23 21:53:47,740 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-23 21:53:47,740 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-23 21:53:48,025 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-23 21:53:48,025 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-23 21:53:48,026 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-23 21:53:48,029 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-23 21:53:48,186 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-23 21:53:48,187 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-23 21:53:48,187 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-23 21:53:48,189 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-23 21:53:48,229 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-23 21:53:48,230 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-23 21:53:48,231 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-23 21:53:48,234 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:53:48,522 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-23 21:53:48,523 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:53:48,648 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-23 21:53:48,648 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:53:48,652 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-23 21:53:48,807 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-23 21:53:48,808 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-23 21:53:48,808 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-23 21:53:48,810 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-23 21:53:48,836 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-23 21:53:48,837 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-23 21:53:48,838 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-23 21:53:48,841 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-23 21:53:48,843 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-23 21:53:49,141 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 21:53:49,142 [test_recharge.py-->line:33]:注册用户15838239110成功
INFO 2021-04-23 21:53:49,329 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 21:53:49,330 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-23 21:53:49,356 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-23 21:53:49,357 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-23 21:53:49,380 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-23 21:53:49,380 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-23 21:53:49,382 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-23 21:53:49,409 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-23 21:53:49,409 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-23 21:53:49,433 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-23 21:53:49,434 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:53:49,439 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-23 21:53:49,465 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-23 21:53:49,465 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-23 21:53:49,489 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-23 21:53:49,489 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:53:49,492 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-23 21:53:49,524 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-23 21:53:49,524 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-23 21:53:49,549 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-23 21:53:49,549 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-23 21:53:49,551 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-23 21:53:49,572 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-23 21:53:49,573 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-23 21:53:49,573 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-23 21:53:49,579 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-23 21:53:49,602 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-23 21:53:49,603 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-23 21:53:49,604 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-23 21:53:49,607 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-23 21:53:49,635 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-23 21:53:49,636 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "d:\program files\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "d:\program files\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "d:\program files\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-23 21:53:49,638 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-23 21:53:49,638 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:53:49,638 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000385085, 'leave_amount': 503553.68, 'mobile_phone': '15838239110', 'reg_name': '小柠檬', 'reg_time': '2021-04-23 21:53:50.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:53:49,651 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-23 21:53:49,674 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-23 21:53:49,674 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-23 21:53:49,675 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:53:49,677 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-23 21:53:49,705 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-23 21:53:49,706 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "d:\program files\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "d:\program files\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "d:\program files\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:53:49,706 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-23 21:53:49,707 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:53:49,707 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000385085, 'leave_amount': 503553.68, 'mobile_phone': '15838239110', 'reg_name': '小柠檬', 'reg_time': '2021-04-23 21:53:50.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:53:49,720 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-23 21:53:49,742 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-23 21:53:49,743 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-23 21:53:49,745 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-23 21:53:49,747 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-23 21:53:49,770 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-23 21:53:49,771 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-23 21:53:49,772 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-23 21:53:49,774 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-23 21:53:49,797 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-23 21:53:49,798 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-23 21:53:49,798 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:53:49,800 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-23 21:53:49,821 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-23 21:53:49,822 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-23 21:53:49,823 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-23 21:53:49,825 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-23 21:53:49,851 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-23 21:53:49,852 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-23 21:53:49,853 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-23 21:53:49,855 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-23 21:53:49,858 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-23 21:53:49,859 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-23 21:53:50,151 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-23 21:53:50,152 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-23 21:53:50,344 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-23 21:53:50,344 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-23 21:53:50,346 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-23 21:53:50,812 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-23 21:53:50,812 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-23 21:53:50,942 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-23 21:53:50,943 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-23 21:53:50,946 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-23 21:53:51,359 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-23 21:53:51,359 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-23 21:53:51,485 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-23 21:53:51,485 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-23 21:53:51,489 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-23 21:53:51,513 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-23 21:53:51,514 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-23 21:53:51,515 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-23 21:53:51,517 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-23 21:53:51,540 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-23 21:53:51,540 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-23 21:53:51,541 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-23 21:53:51,543 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-23 21:53:51,565 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-23 21:53:51,566 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-23 21:53:51,566 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-23 21:53:51,568 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-23 21:53:51,602 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-23 21:53:51,602 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-23 21:53:51,604 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-23 21:53:51,607 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-23 21:53:51,775 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-23 21:53:51,776 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-23 21:53:51,776 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-23 21:53:51,778 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-23 21:53:51,799 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-23 21:53:51,799 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-23 21:53:51,800 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-23 21:53:51,802 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-23 21:53:51,822 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-23 21:53:51,823 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-23 21:53:51,823 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-23 21:53:51,825 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-23 21:53:51,853 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-23 21:53:51,854 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-23 21:53:51,855 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-23 21:53:51,858 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-23 21:53:51,881 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-23 21:53:51,882 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-23 21:53:51,882 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-23 21:53:51,884 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-23 21:53:51,909 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-23 21:53:51,909 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-23 21:53:51,910 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-23 21:53:51,911 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-23 21:53:59,117 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-23 21:53:59,539 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 21:53:59,539 [test_audit.py-->line:31]:注册普通用户15864027531成功
INFO 2021-04-23 21:53:59,734 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 21:54:00,033 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 21:54:00,034 [test_audit.py-->line:47]:注册用户15860339495成功
INFO 2021-04-23 21:54:00,256 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 21:54:00,301 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:54:00,302 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:54:00,302 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-23 21:54:00,353 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-23 21:54:00,354 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-23 21:54:00,376 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-23 21:54:00,376 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-23 21:54:00,427 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:54:00,428 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:54:00,428 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-23 21:54:00,454 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-23 21:54:00,455 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-23 21:54:00,478 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-23 21:54:00,478 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-23 21:54:00,544 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:54:00,545 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:54:00,545 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-23 21:54:00,567 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-23 21:54:00,567 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-23 21:54:00,567 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-23 21:54:00,614 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:54:00,614 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:54:00,614 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-23 21:54:00,640 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-23 21:54:00,641 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "d:\program files\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "d:\program files\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "d:\program files\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-23 21:54:00,642 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-23 21:54:00,642 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:54:00,642 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:54:00,905 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:54:00,905 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:54:00,906 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-23 21:54:00,928 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-23 21:54:00,929 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-23 21:54:00,929 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-23 21:54:00,975 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:54:00,976 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:54:00,976 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-23 21:54:00,998 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-23 21:54:00,999 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-23 21:54:00,999 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-23 21:54:01,044 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:54:01,044 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:54:01,045 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-23 21:54:01,067 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-23 21:54:01,067 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-23 21:54:01,068 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-23 21:54:01,069 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-23 21:54:01,071 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-23 21:54:01,072 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-23 21:54:01,291 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-23 21:54:01,291 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-23 21:54:01,292 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-23 21:54:01,296 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-23 21:54:01,559 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-23 21:54:01,560 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-23 21:54:01,560 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-23 21:54:01,562 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-23 21:54:01,563 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-23 21:54:01,564 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:54:01,846 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-23 21:54:01,846 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:54:01,847 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:54:01,850 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:54:02,011 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-23 21:54:02,011 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:54:02,012 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:54:02,014 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-23 21:54:02,063 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-23 21:54:02,063 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-23 21:54:02,064 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-23 21:54:02,067 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-23 21:54:02,353 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-23 21:54:02,353 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-23 21:54:02,353 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-23 21:54:02,358 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-23 21:54:02,522 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-23 21:54:02,523 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-23 21:54:02,524 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-23 21:54:02,529 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-23 21:54:02,558 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-23 21:54:02,558 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-23 21:54:02,558 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-23 21:54:02,561 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-23 21:54:02,849 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-23 21:54:02,849 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-23 21:54:02,849 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-23 21:54:02,852 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-23 21:54:03,011 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-23 21:54:03,011 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-23 21:54:03,012 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-23 21:54:03,014 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-23 21:54:03,044 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-23 21:54:03,044 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-23 21:54:03,045 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-23 21:54:03,048 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:54:03,352 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-23 21:54:03,352 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:54:03,352 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:54:03,360 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:54:03,523 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-23 21:54:03,523 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:54:03,524 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:54:03,528 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-23 21:54:03,556 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-23 21:54:03,557 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-23 21:54:03,557 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-23 21:54:03,561 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-23 21:54:03,585 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-23 21:54:03,585 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-23 21:54:03,586 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-23 21:54:03,588 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-23 21:54:03,611 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-23 21:54:03,611 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-23 21:54:03,611 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-23 21:54:03,614 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-23 21:54:03,639 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-23 21:54:03,639 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-23 21:54:03,639 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-23 21:54:03,645 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-23 21:54:03,673 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-23 21:54:03,674 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "d:\program files\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "d:\program files\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "d:\program files\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-23 21:54:03,674 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-23 21:54:03,674 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-23 21:54:03,674 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:54:03,719 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-23 21:54:03,750 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-23 21:54:03,750 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-23 21:54:03,897 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-23 21:54:03,897 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-23 21:54:03,901 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-23 21:54:03,930 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-23 21:54:03,930 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-23 21:54:03,930 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-23 21:54:03,935 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-23 21:54:03,979 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-23 21:54:03,980 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-23 21:54:04,165 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-23 21:54:04,166 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-23 21:54:04,174 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-23 21:54:04,176 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-23 21:54:04,178 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:54:04,499 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-23 21:54:04,500 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:54:04,622 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-23 21:54:04,622 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:54:04,625 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:54:04,802 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-23 21:54:04,802 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:54:04,803 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:54:04,805 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-23 21:54:04,830 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-23 21:54:04,831 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-23 21:54:04,831 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-23 21:54:04,835 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:54:05,203 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-23 21:54:05,204 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:54:05,204 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:54:05,208 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:54:05,370 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-23 21:54:05,371 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:54:05,372 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:54:05,375 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-23 21:54:05,400 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-23 21:54:05,400 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-23 21:54:05,400 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-23 21:54:05,404 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-23 21:54:05,693 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-23 21:54:05,694 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-23 21:54:05,695 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:54:05,700 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-23 21:54:05,866 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-23 21:54:05,866 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-23 21:54:05,867 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:54:05,869 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-23 21:54:05,896 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-23 21:54:05,896 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-23 21:54:05,897 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-23 21:54:05,900 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-23 21:54:05,934 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-23 21:54:05,934 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-23 21:54:05,934 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-23 21:54:05,935 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-23 21:54:05,937 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-23 21:54:05,938 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-23 21:54:06,304 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-23 21:54:06,305 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-23 21:54:06,305 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-23 21:54:06,308 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-23 21:54:06,549 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-23 21:54:06,550 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-23 21:54:06,550 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-23 21:54:06,558 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-23 21:54:06,585 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-23 21:54:06,585 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-23 21:54:06,585 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-23 21:54:06,589 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:54:06,959 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-23 21:54:06,959 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:54:07,093 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-23 21:54:07,094 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:54:07,096 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-23 21:54:07,263 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-23 21:54:07,264 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-23 21:54:07,264 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-23 21:54:07,269 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-23 21:54:07,297 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-23 21:54:07,297 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-23 21:54:07,298 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-23 21:54:07,300 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-23 21:54:07,302 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-23 21:54:07,819 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 21:54:07,819 [test_recharge.py-->line:33]:注册用户15827635821成功
INFO 2021-04-23 21:54:08,105 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 21:54:08,106 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-23 21:54:08,134 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-23 21:54:08,135 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-23 21:54:08,158 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-23 21:54:08,160 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-23 21:54:08,163 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-23 21:54:08,192 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-23 21:54:08,192 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-23 21:54:08,216 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-23 21:54:08,216 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:54:08,219 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-23 21:54:08,259 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-23 21:54:08,260 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-23 21:54:08,283 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-23 21:54:08,283 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:54:08,287 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-23 21:54:08,316 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-23 21:54:08,316 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-23 21:54:08,340 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-23 21:54:08,340 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-23 21:54:08,342 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-23 21:54:08,364 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-23 21:54:08,364 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-23 21:54:08,364 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-23 21:54:08,372 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-23 21:54:08,396 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-23 21:54:08,397 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-23 21:54:08,397 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-23 21:54:08,401 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-23 21:54:08,428 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-23 21:54:08,429 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "d:\program files\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "d:\program files\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "d:\program files\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-23 21:54:08,435 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-23 21:54:08,435 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:54:08,436 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000385100, 'leave_amount': 503553.68, 'mobile_phone': '15827635821', 'reg_name': '小柠檬', 'reg_time': '2021-04-23 21:54:08.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:54:08,448 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-23 21:54:08,471 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-23 21:54:08,471 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-23 21:54:08,471 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:54:08,474 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-23 21:54:08,499 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-23 21:54:08,499 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "d:\program files\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "d:\program files\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "d:\program files\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:54:08,499 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-23 21:54:08,499 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:54:08,500 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000385100, 'leave_amount': 503553.68, 'mobile_phone': '15827635821', 'reg_name': '小柠檬', 'reg_time': '2021-04-23 21:54:08.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:54:08,512 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-23 21:54:08,536 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-23 21:54:08,536 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-23 21:54:08,536 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-23 21:54:08,540 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-23 21:54:08,564 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-23 21:54:08,564 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-23 21:54:08,564 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-23 21:54:08,576 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-23 21:54:08,599 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-23 21:54:08,599 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-23 21:54:08,599 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:54:08,603 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-23 21:54:08,630 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-23 21:54:08,631 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-23 21:54:08,631 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-23 21:54:08,634 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-23 21:54:08,657 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-23 21:54:08,658 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-23 21:54:08,658 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-23 21:54:08,659 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-23 21:54:08,661 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-23 21:54:08,661 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-23 21:54:08,943 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-23 21:54:08,943 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-23 21:54:09,066 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-23 21:54:09,066 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-23 21:54:09,069 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-23 21:54:09,350 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-23 21:54:09,350 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-23 21:54:09,475 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-23 21:54:09,475 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-23 21:54:09,479 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-23 21:54:09,762 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-23 21:54:09,762 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-23 21:54:09,884 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-23 21:54:09,885 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-23 21:54:09,891 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-23 21:54:09,914 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-23 21:54:09,914 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-23 21:54:09,914 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-23 21:54:09,920 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-23 21:54:09,944 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-23 21:54:09,944 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-23 21:54:09,945 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-23 21:54:09,950 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-23 21:54:09,982 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-23 21:54:09,982 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-23 21:54:09,982 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-23 21:54:09,986 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-23 21:54:10,009 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-23 21:54:10,009 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-23 21:54:10,010 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-23 21:54:10,014 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-23 21:54:10,288 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-23 21:54:10,288 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-23 21:54:10,288 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-23 21:54:10,295 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-23 21:54:10,317 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-23 21:54:10,317 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-23 21:54:10,317 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-23 21:54:10,320 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-23 21:54:10,351 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-23 21:54:10,352 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-23 21:54:10,352 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-23 21:54:10,359 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-23 21:54:10,381 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-23 21:54:10,382 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-23 21:54:10,382 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-23 21:54:10,386 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-23 21:54:10,408 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-23 21:54:10,408 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-23 21:54:10,408 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-23 21:54:10,411 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-23 21:54:10,435 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-23 21:54:10,436 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-23 21:54:10,437 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-23 21:54:10,439 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-23 21:54:17,865 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-23 21:54:18,193 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 21:54:18,194 [test_audit.py-->line:31]:注册普通用户15813651238成功
INFO 2021-04-23 21:54:18,366 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 21:54:18,676 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 21:54:18,676 [test_audit.py-->line:47]:注册用户15868706055成功
INFO 2021-04-23 21:54:18,872 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 21:54:18,915 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:54:18,915 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:54:18,916 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-23 21:54:18,960 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-23 21:54:18,961 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-23 21:54:18,986 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-23 21:54:18,987 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-23 21:54:19,040 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:54:19,041 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:54:19,044 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-23 21:54:19,071 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-23 21:54:19,073 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-23 21:54:19,099 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-23 21:54:19,100 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-23 21:54:19,143 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:54:19,143 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:54:19,143 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-23 21:54:19,164 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-23 21:54:19,164 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-23 21:54:19,164 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-23 21:54:19,212 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:54:19,213 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:54:19,218 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-23 21:54:19,242 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-23 21:54:19,243 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "d:\program files\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "d:\program files\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "d:\program files\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-23 21:54:19,245 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-23 21:54:19,245 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:54:19,246 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:54:19,519 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:54:19,519 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:54:19,520 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-23 21:54:19,542 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-23 21:54:19,543 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-23 21:54:19,544 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-23 21:54:19,604 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:54:19,605 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:54:19,605 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-23 21:54:19,627 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-23 21:54:19,628 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-23 21:54:19,629 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-23 21:54:19,688 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:54:19,689 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:54:19,691 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-23 21:54:19,718 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-23 21:54:19,719 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-23 21:54:19,719 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-23 21:54:19,721 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-23 21:54:19,741 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-23 21:54:19,742 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-23 21:54:19,976 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-23 21:54:19,976 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-23 21:54:19,976 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-23 21:54:19,980 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-23 21:54:20,288 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-23 21:54:20,289 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-23 21:54:20,290 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-23 21:54:20,290 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-23 21:54:20,292 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-23 21:54:20,293 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:54:20,745 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-23 21:54:20,745 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:54:20,751 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:54:20,754 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:54:21,025 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-23 21:54:21,026 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:54:21,027 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:54:21,029 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-23 21:54:21,076 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-23 21:54:21,076 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-23 21:54:21,077 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-23 21:54:21,080 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-23 21:54:21,417 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-23 21:54:21,417 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-23 21:54:21,418 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-23 21:54:21,419 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-23 21:54:21,576 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-23 21:54:21,576 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-23 21:54:21,577 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-23 21:54:21,579 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-23 21:54:21,606 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-23 21:54:21,606 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-23 21:54:21,607 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-23 21:54:21,609 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-23 21:54:21,902 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-23 21:54:21,903 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-23 21:54:21,904 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-23 21:54:21,907 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-23 21:54:22,161 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-23 21:54:22,161 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-23 21:54:22,162 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-23 21:54:22,168 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-23 21:54:22,196 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-23 21:54:22,197 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-23 21:54:22,200 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-23 21:54:22,202 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:54:22,495 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-23 21:54:22,495 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:54:22,496 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:54:22,498 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:54:22,768 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-23 21:54:22,768 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:54:22,769 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:54:22,771 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-23 21:54:22,795 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-23 21:54:22,796 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-23 21:54:22,797 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-23 21:54:22,798 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-23 21:54:22,824 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-23 21:54:22,825 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-23 21:54:22,826 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-23 21:54:22,829 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-23 21:54:22,851 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-23 21:54:22,852 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-23 21:54:22,853 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-23 21:54:22,855 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-23 21:54:22,877 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-23 21:54:22,877 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-23 21:54:22,878 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-23 21:54:22,880 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-23 21:54:22,904 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-23 21:54:22,906 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "d:\program files\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "d:\program files\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "d:\program files\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-23 21:54:22,908 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-23 21:54:22,908 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-23 21:54:22,909 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:54:22,954 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-23 21:54:22,987 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-23 21:54:22,988 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-23 21:54:23,201 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-23 21:54:23,202 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-23 21:54:23,204 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-23 21:54:23,229 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-23 21:54:23,230 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-23 21:54:23,230 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-23 21:54:23,232 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-23 21:54:23,272 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-23 21:54:23,273 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-23 21:54:23,454 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-23 21:54:23,454 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-23 21:54:23,455 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-23 21:54:23,457 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-23 21:54:23,457 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:54:23,749 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-23 21:54:23,749 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:54:23,896 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-23 21:54:23,896 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:54:23,898 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:54:24,059 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-23 21:54:24,059 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:54:24,060 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:54:24,062 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-23 21:54:24,088 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-23 21:54:24,089 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-23 21:54:24,091 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-23 21:54:24,094 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:54:24,543 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-23 21:54:24,544 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:54:24,545 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:54:24,547 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:54:24,706 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-23 21:54:24,708 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:54:24,710 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:54:24,720 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-23 21:54:24,750 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-23 21:54:24,751 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-23 21:54:24,752 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-23 21:54:24,757 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-23 21:54:25,040 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-23 21:54:25,041 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-23 21:54:25,042 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:54:25,043 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-23 21:54:25,201 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-23 21:54:25,202 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-23 21:54:25,203 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:54:25,206 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-23 21:54:25,233 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-23 21:54:25,233 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-23 21:54:25,234 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-23 21:54:25,235 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-23 21:54:25,264 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-23 21:54:25,265 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-23 21:54:25,265 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-23 21:54:25,266 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-23 21:54:25,268 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-23 21:54:25,269 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-23 21:54:25,571 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-23 21:54:25,572 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-23 21:54:25,575 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-23 21:54:25,577 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-23 21:54:25,750 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-23 21:54:25,751 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-23 21:54:25,751 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-23 21:54:25,754 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-23 21:54:25,777 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-23 21:54:25,778 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-23 21:54:25,778 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-23 21:54:25,780 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:54:26,092 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-23 21:54:26,093 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:54:26,225 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-23 21:54:26,225 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:54:26,227 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-23 21:54:26,385 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-23 21:54:26,386 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-23 21:54:26,392 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-23 21:54:26,395 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-23 21:54:26,419 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-23 21:54:26,419 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-23 21:54:26,420 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-23 21:54:26,421 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-23 21:54:26,422 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-23 21:54:26,742 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 21:54:26,742 [test_recharge.py-->line:33]:注册用户15817404968成功
INFO 2021-04-23 21:54:26,929 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 21:54:26,930 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-23 21:54:26,957 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-23 21:54:26,957 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-23 21:54:26,981 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-23 21:54:26,981 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-23 21:54:26,983 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-23 21:54:27,010 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-23 21:54:27,011 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-23 21:54:27,039 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-23 21:54:27,039 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:54:27,045 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-23 21:54:27,073 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-23 21:54:27,074 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-23 21:54:27,098 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-23 21:54:27,098 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:54:27,100 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-23 21:54:27,126 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-23 21:54:27,127 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-23 21:54:27,150 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-23 21:54:27,151 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-23 21:54:27,155 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-23 21:54:27,179 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-23 21:54:27,180 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-23 21:54:27,181 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-23 21:54:27,187 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-23 21:54:27,210 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-23 21:54:27,211 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-23 21:54:27,214 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-23 21:54:27,219 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-23 21:54:27,245 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-23 21:54:27,246 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "d:\program files\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "d:\program files\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "d:\program files\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-23 21:54:27,246 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-23 21:54:27,247 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:54:27,247 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000385115, 'leave_amount': 503553.68, 'mobile_phone': '15817404968', 'reg_name': '小柠檬', 'reg_time': '2021-04-23 21:54:27.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:54:27,260 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-23 21:54:27,281 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-23 21:54:27,282 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-23 21:54:27,283 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:54:27,286 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-23 21:54:27,313 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-23 21:54:27,313 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "d:\program files\python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "d:\program files\python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "d:\program files\python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:54:27,314 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-23 21:54:27,314 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:54:27,315 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000385115, 'leave_amount': 503553.68, 'mobile_phone': '15817404968', 'reg_name': '小柠檬', 'reg_time': '2021-04-23 21:54:27.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:54:27,328 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-23 21:54:27,348 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-23 21:54:27,349 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-23 21:54:27,349 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-23 21:54:27,350 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-23 21:54:27,370 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-23 21:54:27,371 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-23 21:54:27,371 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-23 21:54:27,373 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-23 21:54:27,394 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-23 21:54:27,394 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-23 21:54:27,399 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:54:27,405 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-23 21:54:27,426 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-23 21:54:27,426 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-23 21:54:27,427 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-23 21:54:27,429 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-23 21:54:27,449 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-23 21:54:27,450 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-23 21:54:27,451 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-23 21:54:27,452 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-23 21:54:27,456 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-23 21:54:27,463 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-23 21:54:27,831 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-23 21:54:27,832 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-23 21:54:27,979 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-23 21:54:27,980 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-23 21:54:27,983 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-23 21:54:28,318 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-23 21:54:28,319 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-23 21:54:28,452 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-23 21:54:28,452 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-23 21:54:28,463 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-23 21:54:28,747 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-23 21:54:28,747 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-23 21:54:28,898 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-23 21:54:28,899 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-23 21:54:28,907 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-23 21:54:28,929 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-23 21:54:28,929 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-23 21:54:28,933 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-23 21:54:28,938 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-23 21:54:28,960 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-23 21:54:28,961 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-23 21:54:28,965 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-23 21:54:28,970 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-23 21:54:28,994 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-23 21:54:28,995 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-23 21:54:28,996 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-23 21:54:29,000 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-23 21:54:29,025 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-23 21:54:29,026 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-23 21:54:29,026 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-23 21:54:29,029 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-23 21:54:29,294 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-23 21:54:29,295 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-23 21:54:29,296 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-23 21:54:29,300 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-23 21:54:29,319 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-23 21:54:29,320 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-23 21:54:29,322 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-23 21:54:29,325 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-23 21:54:29,346 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-23 21:54:29,347 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-23 21:54:29,350 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-23 21:54:29,392 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-23 21:54:29,417 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-23 21:54:29,418 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-23 21:54:29,418 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-23 21:54:29,422 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-23 21:54:29,443 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-23 21:54:29,444 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-23 21:54:29,445 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-23 21:54:29,452 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-23 21:54:29,472 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-23 21:54:29,473 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-23 21:54:29,473 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-23 21:54:29,474 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-23 21:56:21,086 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-23 21:56:21,521 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 21:56:21,521 [test_audit.py-->line:31]:注册普通用户15848549721成功
INFO 2021-04-23 21:56:21,745 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 21:56:22,045 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 21:56:22,045 [test_audit.py-->line:47]:注册用户15856013869成功
INFO 2021-04-23 21:56:22,233 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 21:56:22,278 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:56:22,279 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:56:22,279 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-23 21:56:22,323 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-23 21:56:22,324 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-23 21:56:22,347 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-23 21:56:22,347 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-23 21:56:22,396 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:56:22,396 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:56:22,396 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-23 21:56:22,422 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-23 21:56:22,423 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-23 21:56:22,446 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-23 21:56:22,447 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-23 21:56:22,495 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:56:22,496 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:56:22,496 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-23 21:56:22,518 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-23 21:56:22,518 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-23 21:56:22,518 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-23 21:56:22,581 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:56:22,582 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:56:22,582 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-23 21:56:22,608 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-23 21:56:22,608 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-23 21:56:22,609 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-23 21:56:22,609 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:56:22,609 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:56:22,931 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:56:22,931 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:56:22,931 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-23 21:56:22,956 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-23 21:56:22,956 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-23 21:56:22,956 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-23 21:56:23,015 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:56:23,016 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:56:23,016 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-23 21:56:23,039 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-23 21:56:23,040 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-23 21:56:23,040 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-23 21:56:23,088 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:56:23,089 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:56:23,089 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-23 21:56:23,112 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-23 21:56:23,112 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-23 21:56:23,113 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-23 21:56:23,113 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-23 21:56:23,115 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-23 21:56:23,116 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-23 21:56:23,377 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-23 21:56:23,378 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-23 21:56:23,378 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-23 21:56:23,380 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-23 21:56:23,691 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-23 21:56:23,694 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-23 21:56:23,694 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-23 21:56:23,695 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-23 21:56:23,697 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-23 21:56:23,698 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:56:23,993 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-23 21:56:23,994 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:56:23,994 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:56:23,998 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:56:24,166 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-23 21:56:24,166 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:56:24,167 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:56:24,169 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-23 21:56:24,258 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-23 21:56:24,258 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-23 21:56:24,259 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-23 21:56:24,261 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-23 21:56:24,557 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-23 21:56:24,558 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-23 21:56:24,558 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-23 21:56:24,561 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-23 21:56:24,722 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-23 21:56:24,723 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-23 21:56:24,723 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-23 21:56:24,726 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-23 21:56:24,753 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-23 21:56:24,753 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-23 21:56:24,754 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-23 21:56:24,756 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-23 21:56:25,058 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-23 21:56:25,058 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-23 21:56:25,059 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-23 21:56:25,060 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-23 21:56:25,224 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-23 21:56:25,224 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-23 21:56:25,225 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-23 21:56:25,227 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-23 21:56:25,255 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-23 21:56:25,255 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-23 21:56:25,255 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-23 21:56:25,257 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:56:25,551 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-23 21:56:25,551 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:56:25,551 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:56:25,555 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:56:25,730 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-23 21:56:25,730 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:56:25,731 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:56:25,737 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-23 21:56:25,775 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-23 21:56:25,776 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-23 21:56:25,776 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-23 21:56:25,778 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-23 21:56:25,805 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-23 21:56:25,806 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-23 21:56:25,806 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-23 21:56:25,811 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-23 21:56:25,836 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-23 21:56:25,837 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-23 21:56:25,837 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-23 21:56:25,841 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-23 21:56:25,867 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-23 21:56:25,868 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-23 21:56:25,868 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-23 21:56:25,872 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-23 21:56:25,897 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-23 21:56:25,897 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-23 21:56:25,898 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-23 21:56:25,898 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-23 21:56:25,898 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:56:25,915 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-23 21:56:25,947 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-23 21:56:25,948 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-23 21:56:26,099 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-23 21:56:26,100 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-23 21:56:26,114 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-23 21:56:26,144 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-23 21:56:26,145 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-23 21:56:26,145 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-23 21:56:26,147 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-23 21:56:26,194 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-23 21:56:26,194 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-23 21:56:26,376 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-23 21:56:26,377 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-23 21:56:26,378 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-23 21:56:26,379 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-23 21:56:26,380 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:56:26,665 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-23 21:56:26,665 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:56:26,826 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-23 21:56:26,827 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:56:26,828 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:56:26,996 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-23 21:56:26,996 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:56:26,997 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:56:26,998 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-23 21:56:27,025 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-23 21:56:27,026 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-23 21:56:27,026 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-23 21:56:27,028 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:56:27,330 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-23 21:56:27,330 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:56:27,330 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:56:27,332 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:56:27,493 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-23 21:56:27,494 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:56:27,494 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:56:27,496 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-23 21:56:27,521 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-23 21:56:27,521 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-23 21:56:27,521 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-23 21:56:27,523 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-23 21:56:27,821 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-23 21:56:27,823 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-23 21:56:27,823 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:56:27,824 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-23 21:56:27,989 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-23 21:56:27,990 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-23 21:56:27,990 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:56:27,992 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-23 21:56:28,020 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-23 21:56:28,020 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-23 21:56:28,020 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-23 21:56:28,023 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-23 21:56:28,053 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-23 21:56:28,053 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-23 21:56:28,053 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-23 21:56:28,054 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-23 21:56:28,055 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-23 21:56:28,056 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-23 21:56:28,339 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-23 21:56:28,339 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-23 21:56:28,339 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-23 21:56:28,342 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-23 21:56:28,497 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-23 21:56:28,497 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-23 21:56:28,497 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-23 21:56:28,499 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-23 21:56:28,524 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-23 21:56:28,525 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-23 21:56:28,525 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-23 21:56:28,526 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:56:28,806 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-23 21:56:28,807 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:56:28,936 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-23 21:56:28,936 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:56:28,938 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-23 21:56:29,106 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-23 21:56:29,106 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-23 21:56:29,106 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-23 21:56:29,108 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-23 21:56:29,133 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-23 21:56:29,134 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-23 21:56:29,134 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-23 21:56:29,136 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-23 21:56:29,138 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-23 21:56:29,436 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 21:56:29,437 [test_recharge.py-->line:33]:注册用户15887714705成功
INFO 2021-04-23 21:56:29,620 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 21:56:29,624 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-23 21:56:29,664 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-23 21:56:29,665 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-23 21:56:29,688 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-23 21:56:29,688 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-23 21:56:29,690 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-23 21:56:29,717 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-23 21:56:29,717 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-23 21:56:29,742 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-23 21:56:29,743 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:56:29,746 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-23 21:56:29,774 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-23 21:56:29,775 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-23 21:56:29,798 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-23 21:56:29,798 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:56:29,800 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-23 21:56:29,828 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-23 21:56:29,828 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-23 21:56:29,851 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-23 21:56:29,851 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-23 21:56:29,856 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-23 21:56:29,880 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-23 21:56:29,880 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-23 21:56:29,881 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-23 21:56:29,883 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-23 21:56:29,905 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-23 21:56:29,906 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-23 21:56:29,906 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-23 21:56:29,908 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-23 21:56:29,938 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-23 21:56:29,939 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-23 21:56:29,939 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-23 21:56:29,939 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:56:29,939 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000385143, 'leave_amount': 503553.68, 'mobile_phone': '15887714705', 'reg_name': '小柠檬', 'reg_time': '2021-04-23 21:56:30.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:56:29,953 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-23 21:56:29,977 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-23 21:56:29,977 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-23 21:56:29,977 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:56:29,979 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-23 21:56:30,007 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-23 21:56:30,008 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:56:30,008 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-23 21:56:30,008 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:56:30,009 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000385143, 'leave_amount': 503553.68, 'mobile_phone': '15887714705', 'reg_name': '小柠檬', 'reg_time': '2021-04-23 21:56:30.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:56:30,023 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-23 21:56:30,046 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-23 21:56:30,046 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-23 21:56:30,046 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-23 21:56:30,048 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-23 21:56:30,070 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-23 21:56:30,070 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-23 21:56:30,070 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-23 21:56:30,073 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-23 21:56:30,098 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-23 21:56:30,098 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-23 21:56:30,099 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:56:30,103 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-23 21:56:30,131 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-23 21:56:30,131 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-23 21:56:30,131 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-23 21:56:30,135 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-23 21:56:30,159 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-23 21:56:30,159 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-23 21:56:30,159 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-23 21:56:30,160 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-23 21:56:30,161 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-23 21:56:30,162 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-23 21:56:30,449 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-23 21:56:30,449 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-23 21:56:30,569 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-23 21:56:30,570 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-23 21:56:30,571 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-23 21:56:30,884 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-23 21:56:30,884 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-23 21:56:31,054 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-23 21:56:31,054 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-23 21:56:31,056 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-23 21:56:31,455 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-23 21:56:31,455 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-23 21:56:31,576 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-23 21:56:31,576 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-23 21:56:31,577 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-23 21:56:31,600 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-23 21:56:31,601 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-23 21:56:31,601 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-23 21:56:31,604 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-23 21:56:31,626 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-23 21:56:31,626 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-23 21:56:31,626 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-23 21:56:31,628 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-23 21:56:31,650 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-23 21:56:31,651 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-23 21:56:31,651 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-23 21:56:31,657 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-23 21:56:31,680 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-23 21:56:31,681 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-23 21:56:31,681 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-23 21:56:31,683 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-23 21:56:31,891 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-23 21:56:31,891 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-23 21:56:31,891 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-23 21:56:31,893 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-23 21:56:31,914 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-23 21:56:31,915 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-23 21:56:31,916 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-23 21:56:31,920 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-23 21:56:31,943 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-23 21:56:31,943 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-23 21:56:31,943 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-23 21:56:31,946 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-23 21:56:31,969 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-23 21:56:31,969 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-23 21:56:31,969 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-23 21:56:31,970 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-23 21:56:32,004 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-23 21:56:32,004 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-23 21:56:32,004 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-23 21:56:32,006 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-23 21:56:32,031 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-23 21:56:32,031 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-23 21:56:32,031 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-23 21:56:32,032 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-23 21:57:10,769 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-23 21:57:11,118 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 21:57:11,119 [test_audit.py-->line:31]:注册普通用户15854139098成功
INFO 2021-04-23 21:57:11,308 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 21:57:11,647 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 21:57:11,647 [test_audit.py-->line:47]:注册用户15812780406成功
INFO 2021-04-23 21:57:11,855 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 21:57:11,910 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:57:11,911 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:57:11,911 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-23 21:57:11,954 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-23 21:57:11,955 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-23 21:57:11,987 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-23 21:57:11,988 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-23 21:57:12,034 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:57:12,035 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:57:12,035 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-23 21:57:12,058 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-23 21:57:12,058 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-23 21:57:12,089 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-23 21:57:12,089 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-23 21:57:12,136 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:57:12,136 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:57:12,136 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-23 21:57:12,156 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-23 21:57:12,157 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-23 21:57:12,158 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-23 21:57:12,205 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:57:12,205 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:57:12,205 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-23 21:57:12,229 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-23 21:57:12,230 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-23 21:57:12,231 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-23 21:57:12,231 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:57:12,231 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:57:12,561 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:57:12,562 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:57:12,562 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-23 21:57:12,584 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-23 21:57:12,585 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-23 21:57:12,585 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-23 21:57:12,644 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:57:12,645 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:57:12,645 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-23 21:57:12,666 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-23 21:57:12,666 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-23 21:57:12,666 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-23 21:57:12,723 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:57:12,723 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:57:12,724 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-23 21:57:12,744 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-23 21:57:12,745 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-23 21:57:12,745 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-23 21:57:12,745 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-23 21:57:12,747 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-23 21:57:12,747 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-23 21:57:13,023 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-23 21:57:13,023 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-23 21:57:13,023 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-23 21:57:13,025 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-23 21:57:13,349 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-23 21:57:13,357 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-23 21:57:13,358 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-23 21:57:13,358 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-23 21:57:13,359 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-23 21:57:13,360 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:57:13,860 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-23 21:57:13,860 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:57:13,861 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:57:13,865 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:57:14,086 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-23 21:57:14,087 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:57:14,087 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:57:14,089 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-23 21:57:14,140 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-23 21:57:14,140 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-23 21:57:14,141 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-23 21:57:14,142 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-23 21:57:14,550 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-23 21:57:14,550 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-23 21:57:14,551 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-23 21:57:14,552 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-23 21:57:14,758 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-23 21:57:14,758 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-23 21:57:14,760 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-23 21:57:14,764 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-23 21:57:14,794 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-23 21:57:14,794 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-23 21:57:14,794 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-23 21:57:14,796 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-23 21:57:15,282 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-23 21:57:15,283 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-23 21:57:15,283 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-23 21:57:15,286 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-23 21:57:15,560 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-23 21:57:15,560 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-23 21:57:15,561 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-23 21:57:15,564 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-23 21:57:15,598 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-23 21:57:15,599 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-23 21:57:15,599 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-23 21:57:15,601 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:57:16,054 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-23 21:57:16,054 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:57:16,055 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:57:16,056 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:57:16,324 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-23 21:57:16,324 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:57:16,324 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:57:16,325 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-23 21:57:16,351 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-23 21:57:16,352 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-23 21:57:16,352 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-23 21:57:16,358 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-23 21:57:16,384 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-23 21:57:16,384 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-23 21:57:16,384 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-23 21:57:16,386 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-23 21:57:16,408 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-23 21:57:16,408 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-23 21:57:16,408 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-23 21:57:16,409 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-23 21:57:16,431 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-23 21:57:16,431 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-23 21:57:16,431 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-23 21:57:16,432 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-23 21:57:16,454 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-23 21:57:16,454 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-23 21:57:16,455 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-23 21:57:16,455 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-23 21:57:16,455 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:57:16,501 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-23 21:57:16,531 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-23 21:57:16,532 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-23 21:57:16,763 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-23 21:57:16,763 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-23 21:57:16,765 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-23 21:57:16,790 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-23 21:57:16,791 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-23 21:57:16,791 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-23 21:57:16,792 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-23 21:57:16,836 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-23 21:57:16,836 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-23 21:57:17,108 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-23 21:57:17,108 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-23 21:57:17,109 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-23 21:57:17,110 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-23 21:57:17,110 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:57:17,483 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-23 21:57:17,483 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:57:17,613 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-23 21:57:17,613 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:57:17,614 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:57:17,771 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-23 21:57:17,771 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:57:17,771 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:57:17,772 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-23 21:57:17,795 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-23 21:57:17,796 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-23 21:57:17,796 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-23 21:57:17,797 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:57:18,105 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-23 21:57:18,105 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:57:18,106 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:57:18,108 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:57:18,270 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-23 21:57:18,271 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:57:18,271 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:57:18,273 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-23 21:57:18,297 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-23 21:57:18,297 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-23 21:57:18,298 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-23 21:57:18,299 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-23 21:57:18,587 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-23 21:57:18,588 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-23 21:57:18,588 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:57:18,590 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-23 21:57:18,750 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-23 21:57:18,751 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-23 21:57:18,751 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:57:18,753 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-23 21:57:18,781 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-23 21:57:18,781 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-23 21:57:18,781 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-23 21:57:18,783 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-23 21:57:18,814 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-23 21:57:18,815 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-23 21:57:18,815 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-23 21:57:18,817 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-23 21:57:18,820 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-23 21:57:18,820 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-23 21:57:19,111 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-23 21:57:19,111 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-23 21:57:19,111 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-23 21:57:19,114 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-23 21:57:19,273 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-23 21:57:19,274 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-23 21:57:19,274 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-23 21:57:19,275 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-23 21:57:19,300 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-23 21:57:19,300 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-23 21:57:19,300 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-23 21:57:19,302 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:57:19,605 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-23 21:57:19,605 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:57:19,737 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-23 21:57:19,738 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:57:19,740 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-23 21:57:19,906 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-23 21:57:19,906 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-23 21:57:19,906 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-23 21:57:19,907 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-23 21:57:19,932 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-23 21:57:19,933 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-23 21:57:19,933 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-23 21:57:19,935 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-23 21:57:19,937 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-23 21:57:20,266 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 21:57:20,266 [test_recharge.py-->line:33]:注册用户15834025793成功
INFO 2021-04-23 21:57:20,461 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 21:57:20,463 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-23 21:57:20,491 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-23 21:57:20,491 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-23 21:57:20,522 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-23 21:57:20,523 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-23 21:57:20,525 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-23 21:57:20,553 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-23 21:57:20,553 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-23 21:57:20,584 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-23 21:57:20,584 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:57:20,587 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-23 21:57:20,615 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-23 21:57:20,615 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-23 21:57:20,646 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-23 21:57:20,647 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:57:20,649 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-23 21:57:20,678 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-23 21:57:20,679 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-23 21:57:20,710 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-23 21:57:20,710 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-23 21:57:20,716 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-23 21:57:20,740 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-23 21:57:20,741 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-23 21:57:20,741 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-23 21:57:20,744 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-23 21:57:20,767 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-23 21:57:20,767 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-23 21:57:20,768 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-23 21:57:20,769 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-23 21:57:20,795 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-23 21:57:20,796 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-23 21:57:20,797 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-23 21:57:20,797 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:57:20,797 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000385158, 'leave_amount': 503553.68, 'mobile_phone': '15834025793', 'reg_name': '小柠檬', 'reg_time': '2021-04-23 21:57:21.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:57:20,819 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-23 21:57:20,846 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-23 21:57:20,847 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-23 21:57:20,847 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:57:20,849 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-23 21:57:20,878 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-23 21:57:20,879 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:57:20,879 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-23 21:57:20,879 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:57:20,879 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000385158, 'leave_amount': 503553.68, 'mobile_phone': '15834025793', 'reg_name': '小柠檬', 'reg_time': '2021-04-23 21:57:21.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:57:20,890 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-23 21:57:20,910 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-23 21:57:20,910 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-23 21:57:20,910 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-23 21:57:20,911 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-23 21:57:20,934 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-23 21:57:20,934 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-23 21:57:20,934 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-23 21:57:20,936 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-23 21:57:20,959 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-23 21:57:20,959 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-23 21:57:20,960 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:57:20,961 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-23 21:57:20,983 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-23 21:57:20,983 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-23 21:57:20,983 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-23 21:57:20,985 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-23 21:57:21,007 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-23 21:57:21,008 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-23 21:57:21,008 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-23 21:57:21,008 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-23 21:57:21,010 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-23 21:57:21,010 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-23 21:57:21,428 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-23 21:57:21,429 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-23 21:57:21,588 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-23 21:57:21,588 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-23 21:57:21,590 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-23 21:57:21,905 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-23 21:57:21,906 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-23 21:57:22,038 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-23 21:57:22,038 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-23 21:57:22,039 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-23 21:57:22,346 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-23 21:57:22,346 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-23 21:57:22,480 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-23 21:57:22,480 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-23 21:57:22,483 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-23 21:57:22,504 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-23 21:57:22,504 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-23 21:57:22,504 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-23 21:57:22,506 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-23 21:57:22,526 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-23 21:57:22,526 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-23 21:57:22,526 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-23 21:57:22,527 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-23 21:57:22,548 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-23 21:57:22,548 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-23 21:57:22,549 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-23 21:57:22,550 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-23 21:57:22,571 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-23 21:57:22,571 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-23 21:57:22,572 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-23 21:57:22,574 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-23 21:57:22,732 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-23 21:57:22,732 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-23 21:57:22,732 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-23 21:57:22,735 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-23 21:57:22,757 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-23 21:57:22,758 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-23 21:57:22,758 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-23 21:57:22,762 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-23 21:57:22,784 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-23 21:57:22,784 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-23 21:57:22,784 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-23 21:57:22,785 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-23 21:57:22,805 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-23 21:57:22,806 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-23 21:57:22,806 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-23 21:57:22,808 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-23 21:57:22,829 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-23 21:57:22,830 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-23 21:57:22,830 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-23 21:57:22,831 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-23 21:57:22,852 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-23 21:57:22,853 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-23 21:57:22,853 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-23 21:57:22,854 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-23 21:57:56,231 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-23 21:57:56,580 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 21:57:56,581 [test_audit.py-->line:31]:注册普通用户15849676275成功
INFO 2021-04-23 21:57:56,761 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 21:57:57,097 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 21:57:57,097 [test_audit.py-->line:47]:注册用户15838260824成功
INFO 2021-04-23 21:57:57,311 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 21:57:57,369 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:57:57,369 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:57:57,369 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-23 21:57:57,414 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-23 21:57:57,415 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-23 21:57:57,446 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-23 21:57:57,446 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-23 21:57:57,504 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:57:57,505 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:57:57,505 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-23 21:57:57,529 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-23 21:57:57,529 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-23 21:57:57,560 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-23 21:57:57,560 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-23 21:57:57,619 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:57:57,620 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:57:57,620 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-23 21:57:57,641 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-23 21:57:57,641 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-23 21:57:57,641 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-23 21:57:57,685 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:57:57,685 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:57:57,685 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-23 21:57:57,709 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-23 21:57:57,710 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-23 21:57:57,711 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-23 21:57:57,711 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:57:57,711 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:57:57,994 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:57:57,994 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:57:57,994 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-23 21:57:58,017 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-23 21:57:58,018 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-23 21:57:58,018 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-23 21:57:58,083 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:57:58,084 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:57:58,084 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-23 21:57:58,105 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-23 21:57:58,105 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-23 21:57:58,105 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-23 21:57:58,162 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:57:58,163 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:57:58,163 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-23 21:57:58,187 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-23 21:57:58,188 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-23 21:57:58,188 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-23 21:57:58,189 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-23 21:57:58,190 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-23 21:57:58,191 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-23 21:57:58,426 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-23 21:57:58,426 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-23 21:57:58,426 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-23 21:57:58,427 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-23 21:57:58,699 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-23 21:57:58,701 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-23 21:57:58,701 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-23 21:57:58,702 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-23 21:57:58,703 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-23 21:57:58,703 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:57:59,011 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-23 21:57:59,011 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:57:59,012 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:57:59,013 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:57:59,171 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-23 21:57:59,172 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:57:59,173 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:57:59,174 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-23 21:57:59,220 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-23 21:57:59,220 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-23 21:57:59,221 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-23 21:57:59,222 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-23 21:57:59,518 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-23 21:57:59,519 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-23 21:57:59,519 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-23 21:57:59,521 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-23 21:57:59,679 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-23 21:57:59,680 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-23 21:57:59,680 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-23 21:57:59,681 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-23 21:57:59,711 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-23 21:57:59,711 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-23 21:57:59,711 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-23 21:57:59,714 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-23 21:58:00,004 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-23 21:58:00,005 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-23 21:58:00,005 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-23 21:58:00,006 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-23 21:58:00,166 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-23 21:58:00,166 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-23 21:58:00,167 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-23 21:58:00,169 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-23 21:58:00,198 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-23 21:58:00,198 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-23 21:58:00,199 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-23 21:58:00,200 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:58:00,493 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-23 21:58:00,494 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:58:00,495 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:58:00,499 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:58:00,658 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-23 21:58:00,659 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:58:00,659 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:58:00,660 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-23 21:58:00,687 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-23 21:58:00,687 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-23 21:58:00,687 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-23 21:58:00,689 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-23 21:58:00,719 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-23 21:58:00,719 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-23 21:58:00,719 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-23 21:58:00,720 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-23 21:58:00,744 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-23 21:58:00,744 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-23 21:58:00,744 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-23 21:58:00,745 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-23 21:58:00,767 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-23 21:58:00,767 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-23 21:58:00,767 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-23 21:58:00,768 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-23 21:58:00,792 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-23 21:58:00,793 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-23 21:58:00,793 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-23 21:58:00,794 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-23 21:58:00,794 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:58:00,829 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-23 21:58:00,861 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-23 21:58:00,861 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-23 21:58:01,035 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-23 21:58:01,035 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-23 21:58:01,036 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-23 21:58:01,062 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-23 21:58:01,062 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-23 21:58:01,062 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-23 21:58:01,064 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-23 21:58:01,107 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-23 21:58:01,107 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-23 21:58:01,387 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-23 21:58:01,387 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-23 21:58:01,387 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-23 21:58:01,388 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-23 21:58:01,389 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:58:01,699 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-23 21:58:01,699 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:58:01,841 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-23 21:58:01,842 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:58:01,843 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:58:02,031 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-23 21:58:02,032 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:58:02,032 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:58:02,033 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-23 21:58:02,058 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-23 21:58:02,062 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-23 21:58:02,062 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-23 21:58:02,064 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:58:02,384 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-23 21:58:02,385 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:58:02,385 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:58:02,386 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:58:02,656 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-23 21:58:02,656 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:58:02,657 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:58:02,658 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-23 21:58:02,682 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-23 21:58:02,683 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-23 21:58:02,683 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-23 21:58:02,684 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-23 21:58:02,983 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-23 21:58:02,983 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-23 21:58:02,984 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:58:02,986 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-23 21:58:03,157 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-23 21:58:03,157 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-23 21:58:03,158 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:58:03,159 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-23 21:58:03,201 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-23 21:58:03,202 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-23 21:58:03,202 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-23 21:58:03,203 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-23 21:58:03,234 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-23 21:58:03,234 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-23 21:58:03,234 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-23 21:58:03,235 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-23 21:58:03,236 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-23 21:58:03,238 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-23 21:58:03,576 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-23 21:58:03,576 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-23 21:58:03,576 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-23 21:58:03,578 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-23 21:58:03,744 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-23 21:58:03,744 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-23 21:58:03,744 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-23 21:58:03,745 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-23 21:58:03,769 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-23 21:58:03,770 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-23 21:58:03,770 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-23 21:58:03,771 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:58:04,092 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-23 21:58:04,092 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:58:04,231 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-23 21:58:04,231 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:58:04,232 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-23 21:58:04,391 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-23 21:58:04,391 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-23 21:58:04,391 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-23 21:58:04,393 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-23 21:58:04,419 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-23 21:58:04,419 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-23 21:58:04,419 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-23 21:58:04,420 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-23 21:58:04,421 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-23 21:58:04,748 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 21:58:04,749 [test_recharge.py-->line:33]:注册用户15860202850成功
INFO 2021-04-23 21:58:04,943 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 21:58:04,944 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-23 21:58:04,971 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-23 21:58:04,971 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-23 21:58:05,003 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-23 21:58:05,003 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-23 21:58:05,005 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-23 21:58:05,031 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-23 21:58:05,031 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-23 21:58:05,062 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-23 21:58:05,063 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:58:05,065 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-23 21:58:05,092 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-23 21:58:05,093 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-23 21:58:05,123 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-23 21:58:05,123 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:58:05,125 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-23 21:58:05,153 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-23 21:58:05,154 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-23 21:58:05,190 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-23 21:58:05,190 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-23 21:58:05,192 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-23 21:58:05,213 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-23 21:58:05,213 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-23 21:58:05,213 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-23 21:58:05,214 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-23 21:58:05,234 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-23 21:58:05,234 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-23 21:58:05,235 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-23 21:58:05,236 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-23 21:58:05,262 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-23 21:58:05,264 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-23 21:58:05,265 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-23 21:58:05,265 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:58:05,266 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000385173, 'leave_amount': 503553.68, 'mobile_phone': '15860202850', 'reg_name': '小柠檬', 'reg_time': '2021-04-23 21:58:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:58:05,285 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-23 21:58:05,306 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-23 21:58:05,306 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-23 21:58:05,306 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:58:05,307 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-23 21:58:05,333 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-23 21:58:05,335 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:58:05,335 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-23 21:58:05,336 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:58:05,336 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000385173, 'leave_amount': 503553.68, 'mobile_phone': '15860202850', 'reg_name': '小柠檬', 'reg_time': '2021-04-23 21:58:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:58:05,356 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-23 21:58:05,377 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-23 21:58:05,377 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-23 21:58:05,377 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-23 21:58:05,379 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-23 21:58:05,400 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-23 21:58:05,400 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-23 21:58:05,400 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-23 21:58:05,402 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-23 21:58:05,422 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-23 21:58:05,422 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-23 21:58:05,422 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:58:05,423 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-23 21:58:05,447 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-23 21:58:05,447 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-23 21:58:05,447 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-23 21:58:05,448 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-23 21:58:05,469 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-23 21:58:05,469 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-23 21:58:05,469 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-23 21:58:05,470 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-23 21:58:05,471 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-23 21:58:05,472 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-23 21:58:05,824 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-23 21:58:05,824 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-23 21:58:05,971 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-23 21:58:05,971 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-23 21:58:05,974 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-23 21:58:06,271 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-23 21:58:06,272 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-23 21:58:06,453 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-23 21:58:06,453 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-23 21:58:06,455 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-23 21:58:06,746 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-23 21:58:06,747 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-23 21:58:06,880 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-23 21:58:06,880 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-23 21:58:06,884 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-23 21:58:06,905 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-23 21:58:06,905 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-23 21:58:06,905 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-23 21:58:06,906 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-23 21:58:06,929 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-23 21:58:06,930 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-23 21:58:06,930 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-23 21:58:06,932 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-23 21:58:06,953 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-23 21:58:06,953 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-23 21:58:06,953 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-23 21:58:06,954 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-23 21:58:06,976 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-23 21:58:06,976 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-23 21:58:06,976 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-23 21:58:06,981 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-23 21:58:07,159 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-23 21:58:07,159 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-23 21:58:07,160 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-23 21:58:07,165 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-23 21:58:07,186 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-23 21:58:07,187 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-23 21:58:07,187 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-23 21:58:07,189 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-23 21:58:07,209 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-23 21:58:07,209 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-23 21:58:07,210 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-23 21:58:07,211 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-23 21:58:07,231 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-23 21:58:07,231 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-23 21:58:07,232 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-23 21:58:07,234 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-23 21:58:07,257 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-23 21:58:07,257 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-23 21:58:07,257 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-23 21:58:07,259 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-23 21:58:07,281 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-23 21:58:07,281 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-23 21:58:07,281 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-23 21:58:07,282 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-23 21:58:13,301 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-23 21:58:13,637 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 21:58:13,638 [test_audit.py-->line:31]:注册普通用户15854491451成功
INFO 2021-04-23 21:58:13,822 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 21:58:14,213 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 21:58:14,213 [test_audit.py-->line:47]:注册用户15825771674成功
INFO 2021-04-23 21:58:14,397 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 21:58:14,455 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:58:14,455 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:58:14,455 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-23 21:58:14,512 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-23 21:58:14,512 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-23 21:58:14,535 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-23 21:58:14,535 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-23 21:58:14,598 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:58:14,599 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:58:14,599 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-23 21:58:14,629 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-23 21:58:14,630 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-23 21:58:14,654 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-23 21:58:14,654 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-23 21:58:14,710 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:58:14,711 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:58:14,711 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-23 21:58:14,740 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-23 21:58:14,740 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-23 21:58:14,741 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-23 21:58:14,800 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:58:14,800 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:58:14,800 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-23 21:58:14,830 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-23 21:58:14,831 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-23 21:58:14,832 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-23 21:58:14,832 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:58:14,833 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:58:15,110 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:58:15,110 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:58:15,111 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-23 21:58:15,139 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-23 21:58:15,139 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-23 21:58:15,139 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-23 21:58:15,196 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:58:15,196 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:58:15,196 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-23 21:58:15,224 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-23 21:58:15,225 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-23 21:58:15,225 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-23 21:58:15,282 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:58:15,283 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:58:15,283 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-23 21:58:15,310 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-23 21:58:15,310 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-23 21:58:15,310 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-23 21:58:15,310 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-23 21:58:15,312 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-23 21:58:15,312 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-23 21:58:15,562 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-23 21:58:15,563 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-23 21:58:15,563 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-23 21:58:15,564 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-23 21:58:15,889 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-23 21:58:15,890 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-23 21:58:15,891 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-23 21:58:15,891 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-23 21:58:15,893 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-23 21:58:15,894 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:58:16,187 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-23 21:58:16,187 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:58:16,188 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:58:16,190 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:58:16,356 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-23 21:58:16,357 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:58:16,357 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:58:16,359 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-23 21:58:16,422 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-23 21:58:16,423 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-23 21:58:16,423 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-23 21:58:16,425 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-23 21:58:16,726 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-23 21:58:16,726 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-23 21:58:16,727 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-23 21:58:16,728 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-23 21:58:16,905 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-23 21:58:16,905 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-23 21:58:16,906 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-23 21:58:16,909 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-23 21:58:16,948 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-23 21:58:16,949 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-23 21:58:16,949 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-23 21:58:16,952 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-23 21:58:17,257 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-23 21:58:17,257 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-23 21:58:17,257 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-23 21:58:17,260 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-23 21:58:17,427 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-23 21:58:17,428 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-23 21:58:17,428 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-23 21:58:17,429 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-23 21:58:17,464 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-23 21:58:17,464 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-23 21:58:17,464 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-23 21:58:17,466 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:58:17,787 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-23 21:58:17,788 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:58:17,788 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:58:17,790 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:58:17,962 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-23 21:58:17,962 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:58:17,962 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:58:17,963 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-23 21:58:17,996 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-23 21:58:17,997 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-23 21:58:17,997 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-23 21:58:18,003 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-23 21:58:18,037 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-23 21:58:18,038 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-23 21:58:18,038 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-23 21:58:18,039 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-23 21:58:18,071 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-23 21:58:18,072 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-23 21:58:18,072 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-23 21:58:18,073 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-23 21:58:18,102 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-23 21:58:18,102 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-23 21:58:18,103 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-23 21:58:18,107 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-23 21:58:18,138 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-23 21:58:18,139 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-23 21:58:18,140 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-23 21:58:18,140 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-23 21:58:18,140 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:58:18,196 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-23 21:58:18,234 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-23 21:58:18,234 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-23 21:58:18,388 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-23 21:58:18,389 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-23 21:58:18,391 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-23 21:58:18,424 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-23 21:58:18,425 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-23 21:58:18,425 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-23 21:58:18,427 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-23 21:58:18,475 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-23 21:58:18,475 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-23 21:58:18,654 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-23 21:58:18,654 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-23 21:58:18,655 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-23 21:58:18,657 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-23 21:58:18,658 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:58:18,953 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-23 21:58:18,953 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:58:19,088 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-23 21:58:19,089 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:58:19,096 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:58:19,277 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-23 21:58:19,278 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:58:19,278 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:58:19,279 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-23 21:58:19,310 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-23 21:58:19,311 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-23 21:58:19,311 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-23 21:58:19,312 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:58:19,626 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-23 21:58:19,626 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:58:19,627 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:58:19,629 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:58:19,791 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-23 21:58:19,792 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:58:19,792 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:58:19,794 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-23 21:58:19,826 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-23 21:58:19,826 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-23 21:58:19,827 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-23 21:58:19,828 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-23 21:58:20,125 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-23 21:58:20,125 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-23 21:58:20,126 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:58:20,129 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-23 21:58:20,345 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-23 21:58:20,345 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-23 21:58:20,346 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:58:20,347 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-23 21:58:20,380 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-23 21:58:20,380 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-23 21:58:20,381 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-23 21:58:20,382 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-23 21:58:20,421 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-23 21:58:20,422 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-23 21:58:20,422 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-23 21:58:20,423 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-23 21:58:20,425 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-23 21:58:20,425 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-23 21:58:20,831 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-23 21:58:20,831 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-23 21:58:20,831 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-23 21:58:20,834 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-23 21:58:21,007 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-23 21:58:21,007 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-23 21:58:21,007 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-23 21:58:21,010 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-23 21:58:21,043 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-23 21:58:21,043 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-23 21:58:21,043 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-23 21:58:21,045 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 21:58:21,348 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-23 21:58:21,348 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 21:58:21,473 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-23 21:58:21,473 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 21:58:21,475 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-23 21:58:21,650 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-23 21:58:21,650 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-23 21:58:21,650 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-23 21:58:21,654 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-23 21:58:21,686 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-23 21:58:21,687 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-23 21:58:21,687 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-23 21:58:21,687 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-23 21:58:21,688 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-23 21:58:22,019 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 21:58:22,019 [test_recharge.py-->line:33]:注册用户15884525307成功
INFO 2021-04-23 21:58:22,213 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 21:58:22,214 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-23 21:58:22,246 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-23 21:58:22,246 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-23 21:58:22,270 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-23 21:58:22,270 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-23 21:58:22,272 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-23 21:58:22,306 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-23 21:58:22,307 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-23 21:58:22,330 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-23 21:58:22,330 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:58:22,331 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-23 21:58:22,370 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-23 21:58:22,371 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-23 21:58:22,395 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-23 21:58:22,395 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:58:22,398 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-23 21:58:22,430 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-23 21:58:22,431 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-23 21:58:22,455 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-23 21:58:22,455 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-23 21:58:22,461 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-23 21:58:22,491 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-23 21:58:22,491 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-23 21:58:22,491 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-23 21:58:22,493 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-23 21:58:22,520 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-23 21:58:22,521 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-23 21:58:22,521 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-23 21:58:22,522 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-23 21:58:22,557 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-23 21:58:22,557 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-23 21:58:22,558 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-23 21:58:22,558 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:58:22,558 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000385188, 'leave_amount': 503553.68, 'mobile_phone': '15884525307', 'reg_name': '小柠檬', 'reg_time': '2021-04-23 21:58:23.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:58:22,570 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-23 21:58:22,599 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-23 21:58:22,600 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-23 21:58:22,600 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:58:22,607 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-23 21:58:22,645 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-23 21:58:22,646 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:58:22,647 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-23 21:58:22,652 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:58:22,652 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000385188, 'leave_amount': 503553.68, 'mobile_phone': '15884525307', 'reg_name': '小柠檬', 'reg_time': '2021-04-23 21:58:23.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:58:22,675 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-23 21:58:22,703 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-23 21:58:22,704 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-23 21:58:22,704 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-23 21:58:22,706 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-23 21:58:22,737 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-23 21:58:22,738 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-23 21:58:22,738 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-23 21:58:22,741 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-23 21:58:22,771 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-23 21:58:22,772 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-23 21:58:22,772 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-23 21:58:22,775 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-23 21:58:22,808 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-23 21:58:22,809 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-23 21:58:22,809 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-23 21:58:22,812 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-23 21:58:22,841 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-23 21:58:22,841 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-23 21:58:22,841 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-23 21:58:22,842 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-23 21:58:22,845 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-23 21:58:22,846 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-23 21:58:23,149 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-23 21:58:23,149 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-23 21:58:23,278 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-23 21:58:23,279 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-23 21:58:23,280 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-23 21:58:23,566 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-23 21:58:23,567 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-23 21:58:23,693 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-23 21:58:23,693 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-23 21:58:23,694 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-23 21:58:24,059 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-23 21:58:24,059 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-23 21:58:24,232 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-23 21:58:24,232 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-23 21:58:24,234 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-23 21:58:24,262 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-23 21:58:24,262 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-23 21:58:24,262 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-23 21:58:24,263 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-23 21:58:24,290 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-23 21:58:24,291 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-23 21:58:24,291 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-23 21:58:24,292 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-23 21:58:24,320 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-23 21:58:24,321 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-23 21:58:24,321 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-23 21:58:24,322 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-23 21:58:24,349 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-23 21:58:24,349 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-23 21:58:24,349 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-23 21:58:24,351 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-23 21:58:24,520 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-23 21:58:24,521 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-23 21:58:24,521 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-23 21:58:24,522 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-23 21:58:24,550 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-23 21:58:24,556 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-23 21:58:24,556 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-23 21:58:24,558 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-23 21:58:24,586 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-23 21:58:24,586 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-23 21:58:24,586 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-23 21:58:24,587 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-23 21:58:24,613 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-23 21:58:24,613 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-23 21:58:24,614 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-23 21:58:24,615 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-23 21:58:24,645 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-23 21:58:24,645 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-23 21:58:24,645 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-23 21:58:24,647 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-23 21:58:24,674 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-23 21:58:24,674 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-23 21:58:24,674 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-23 21:58:24,675 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-23 21:59:56,332 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-23 21:59:56,749 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 21:59:56,749 [test_audit.py-->line:31]:注册普通用户15821548454成功
INFO 2021-04-23 21:59:56,936 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 21:59:57,293 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 21:59:57,293 [test_audit.py-->line:47]:注册用户15813362044成功
INFO 2021-04-23 21:59:57,468 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 21:59:57,512 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:59:57,513 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:59:57,513 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-23 21:59:57,558 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-23 21:59:57,558 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-23 21:59:57,590 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-23 21:59:57,590 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-23 21:59:57,653 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:59:57,653 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:59:57,654 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-23 21:59:57,680 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-23 21:59:57,680 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-23 21:59:57,713 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-23 21:59:57,713 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-23 21:59:57,771 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:59:57,772 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:59:57,772 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-23 21:59:57,794 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-23 21:59:57,795 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-23 21:59:57,795 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-23 21:59:57,846 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:59:57,846 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:59:57,846 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-23 21:59:57,871 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-23 21:59:57,872 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-23 21:59:57,873 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-23 21:59:57,873 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 21:59:57,873 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 21:59:58,145 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:59:58,145 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:59:58,145 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-23 21:59:58,168 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-23 21:59:58,169 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-23 21:59:58,169 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-23 21:59:58,213 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:59:58,213 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:59:58,214 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-23 21:59:58,238 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-23 21:59:58,238 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-23 21:59:58,239 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-23 21:59:58,310 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-23 21:59:58,311 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-23 21:59:58,312 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-23 21:59:58,335 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-23 21:59:58,336 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-23 21:59:58,337 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-23 21:59:58,339 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-23 21:59:58,341 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-23 21:59:58,342 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-23 21:59:58,598 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-23 21:59:58,599 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-23 21:59:58,600 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-23 21:59:58,606 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-23 21:59:58,927 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-23 21:59:58,928 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-23 21:59:58,928 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-23 21:59:58,929 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-23 21:59:58,931 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-23 21:59:58,932 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:59:59,271 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-23 21:59:59,271 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:59:59,272 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:59:59,274 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 21:59:59,436 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-23 21:59:59,438 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-23 21:59:59,440 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 21:59:59,443 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-23 21:59:59,492 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-23 21:59:59,493 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-23 21:59:59,493 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-23 21:59:59,495 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-23 21:59:59,807 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-23 21:59:59,808 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-23 21:59:59,808 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-23 21:59:59,810 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-23 21:59:59,971 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-23 21:59:59,973 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-23 21:59:59,977 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-23 21:59:59,986 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-23 22:00:00,021 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-23 22:00:00,022 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-23 22:00:00,022 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-23 22:00:00,026 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-23 22:00:00,514 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-23 22:00:00,514 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-23 22:00:00,514 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-23 22:00:00,516 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-23 22:00:00,683 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-23 22:00:00,683 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-23 22:00:00,684 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-23 22:00:00,685 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-23 22:00:00,715 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-23 22:00:00,716 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-23 22:00:00,716 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-23 22:00:00,718 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 22:00:01,016 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-23 22:00:01,017 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 22:00:01,017 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 22:00:01,020 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-23 22:00:01,205 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-23 22:00:01,205 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-23 22:00:01,207 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 22:00:01,208 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-23 22:00:01,237 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-23 22:00:01,237 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-23 22:00:01,237 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-23 22:00:01,239 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-23 22:00:01,265 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-23 22:00:01,265 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-23 22:00:01,265 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-23 22:00:01,267 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-23 22:00:01,290 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-23 22:00:01,290 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-23 22:00:01,291 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-23 22:00:01,291 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-23 22:00:01,314 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-23 22:00:01,314 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-23 22:00:01,314 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-23 22:00:01,316 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-23 22:00:01,339 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-23 22:00:01,340 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-23 22:00:01,342 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-23 22:00:01,342 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-23 22:00:01,342 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 22:00:01,358 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-23 22:00:01,388 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-23 22:00:01,388 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-23 22:00:01,625 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-23 22:00:01,625 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-23 22:00:01,627 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-23 22:00:01,656 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-23 22:00:01,656 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-23 22:00:01,656 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-23 22:00:01,657 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-23 22:00:01,699 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-23 22:00:01,700 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-23 22:00:01,911 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-23 22:00:01,911 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-23 22:00:01,912 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-23 22:00:01,913 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-23 22:00:01,914 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 22:00:02,371 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-23 22:00:02,371 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-23 22:00:02,500 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-23 22:00:02,501 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 22:00:02,502 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-23 22:00:02,660 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-23 22:00:02,660 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-23 22:00:02,661 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-23 22:00:02,662 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-23 22:00:02,688 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-23 22:00:02,688 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-23 22:00:02,688 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-23 22:00:02,691 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 22:00:03,002 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-23 22:00:03,003 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 22:00:03,003 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 22:00:03,005 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-23 22:00:03,163 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-23 22:00:03,164 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-23 22:00:03,164 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 22:00:03,166 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-23 22:00:03,192 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-23 22:00:03,193 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-23 22:00:03,193 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-23 22:00:03,194 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-23 22:00:03,494 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-23 22:00:03,494 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-23 22:00:03,495 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-23 22:00:03,496 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-23 22:00:03,657 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-23 22:00:03,657 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-23 22:00:03,658 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-23 22:00:03,660 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-23 22:00:03,688 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-23 22:00:03,688 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-23 22:00:03,688 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-23 22:00:03,690 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-23 22:00:03,722 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-23 22:00:03,722 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-23 22:00:03,723 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-23 22:00:03,724 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-23 22:00:03,727 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-23 22:00:03,728 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-23 22:00:04,202 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-23 22:00:04,202 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-23 22:00:04,202 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-23 22:00:04,204 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-23 22:00:04,364 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-23 22:00:04,365 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-23 22:00:04,365 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-23 22:00:04,367 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-23 22:00:04,395 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-23 22:00:04,396 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-23 22:00:04,396 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-23 22:00:04,399 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-23 22:00:04,806 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-23 22:00:04,807 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-23 22:00:05,008 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-23 22:00:05,008 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-23 22:00:05,010 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-23 22:00:05,263 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-23 22:00:05,263 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-23 22:00:05,263 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-23 22:00:05,265 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-23 22:00:05,294 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-23 22:00:05,295 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-23 22:00:05,295 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-23 22:00:05,296 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-23 22:00:05,297 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-23 22:00:05,741 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-23 22:00:05,742 [test_recharge.py-->line:33]:注册用户15831414041成功
INFO 2021-04-23 22:00:05,924 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-23 22:00:05,926 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-23 22:00:05,955 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-23 22:00:05,956 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-23 22:00:05,990 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-23 22:00:05,990 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-23 22:00:05,998 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-23 22:00:06,025 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-23 22:00:06,025 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-23 22:00:06,057 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-23 22:00:06,057 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-23 22:00:06,059 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-23 22:00:06,088 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-23 22:00:06,088 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-23 22:00:06,119 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-23 22:00:06,119 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-23 22:00:06,122 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-23 22:00:06,151 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-23 22:00:06,151 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-23 22:00:06,182 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-23 22:00:06,183 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-23 22:00:06,186 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-23 22:00:06,210 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-23 22:00:06,210 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-23 22:00:06,210 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-23 22:00:06,212 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-23 22:00:06,234 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-23 22:00:06,234 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-23 22:00:06,234 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-23 22:00:06,236 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-23 22:00:06,264 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-23 22:00:06,265 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-23 22:00:06,266 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-23 22:00:06,266 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 22:00:06,266 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000385203, 'leave_amount': 503553.68, 'mobile_phone': '15831414041', 'reg_name': '小柠檬', 'reg_time': '2021-04-23 22:00:06.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 22:00:06,293 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-23 22:00:06,316 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-23 22:00:06,317 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-23 22:00:06,317 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-23 22:00:06,319 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-23 22:00:06,347 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-23 22:00:06,348 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 22:00:06,349 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-23 22:00:06,349 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-23 22:00:06,350 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000385203, 'leave_amount': 503553.68, 'mobile_phone': '15831414041', 'reg_name': '小柠檬', 'reg_time': '2021-04-23 22:00:06.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-23 22:00:06,369 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-23 22:00:06,391 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-23 22:00:06,392 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-23 22:00:06,392 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-23 22:00:06,393 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-23 22:00:06,415 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-23 22:00:06,415 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-23 22:00:06,415 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-23 22:00:06,418 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-23 22:00:06,441 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-23 22:00:06,441 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-23 22:00:06,441 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-23 22:00:06,444 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-23 22:00:06,466 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-23 22:00:06,467 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-23 22:00:06,467 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-23 22:00:06,471 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-23 22:00:06,493 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-23 22:00:06,494 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-23 22:00:06,494 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-23 22:00:06,494 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-23 22:00:06,496 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-23 22:00:06,496 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-23 22:00:06,861 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-23 22:00:06,861 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-23 22:00:06,998 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-23 22:00:06,999 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-23 22:00:07,001 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-23 22:00:07,303 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-23 22:00:07,303 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-23 22:00:07,442 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-23 22:00:07,442 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-23 22:00:07,444 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-23 22:00:07,741 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-23 22:00:07,741 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-23 22:00:07,894 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-23 22:00:07,895 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-23 22:00:07,897 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-23 22:00:07,919 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-23 22:00:07,919 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-23 22:00:07,919 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-23 22:00:07,921 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-23 22:00:07,946 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-23 22:00:07,946 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-23 22:00:07,946 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-23 22:00:07,949 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-23 22:00:07,972 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-23 22:00:07,972 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-23 22:00:07,972 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-23 22:00:07,974 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-23 22:00:07,997 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-23 22:00:07,998 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-23 22:00:07,998 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-23 22:00:07,999 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-23 22:00:08,160 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-23 22:00:08,160 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-23 22:00:08,160 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-23 22:00:08,162 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-23 22:00:08,184 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-23 22:00:08,184 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-23 22:00:08,185 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-23 22:00:08,186 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-23 22:00:08,209 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-23 22:00:08,209 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-23 22:00:08,210 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-23 22:00:08,213 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-23 22:00:08,235 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-23 22:00:08,236 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-23 22:00:08,236 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-23 22:00:08,237 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-23 22:00:08,260 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-23 22:00:08,261 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-23 22:00:08,261 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-23 22:00:08,263 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-23 22:00:08,286 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-23 22:00:08,286 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-23 22:00:08,286 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-23 22:00:08,287 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-27 21:07:23,954 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-27 21:07:24,322 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-27 21:07:24,322 [test_audit.py-->line:31]:注册普通用户15823305182成功
INFO 2021-04-27 21:07:24,514 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-27 21:07:24,825 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-27 21:07:24,825 [test_audit.py-->line:47]:注册用户15855444222成功
INFO 2021-04-27 21:07:25,043 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-27 21:07:25,098 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-27 21:07:25,098 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-27 21:07:25,098 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-27 21:07:25,140 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-27 21:07:25,141 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-27 21:07:25,172 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-27 21:07:25,172 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-27 21:07:25,219 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-27 21:07:25,219 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-27 21:07:25,219 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-27 21:07:25,242 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-27 21:07:25,242 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-27 21:07:25,274 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-27 21:07:25,274 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-27 21:07:25,321 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-27 21:07:25,321 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-27 21:07:25,321 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-27 21:07:25,343 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-27 21:07:25,343 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-27 21:07:25,343 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-27 21:07:25,388 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-27 21:07:25,388 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-27 21:07:25,388 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-27 21:07:25,412 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-27 21:07:25,413 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-27 21:07:25,419 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-27 21:07:25,419 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-27 21:07:25,419 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-27 21:07:25,659 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-27 21:07:25,659 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-27 21:07:25,659 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-27 21:07:25,681 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-27 21:07:25,681 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-27 21:07:25,681 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-27 21:07:25,737 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-27 21:07:25,737 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-27 21:07:25,737 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-27 21:07:25,759 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-27 21:07:25,759 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-27 21:07:25,759 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-27 21:07:25,813 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-27 21:07:25,814 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-27 21:07:25,814 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-27 21:07:25,835 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-27 21:07:25,835 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-27 21:07:25,835 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-27 21:07:25,836 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-27 21:07:25,838 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-27 21:07:25,838 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-27 21:07:26,203 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-27 21:07:26,203 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-27 21:07:26,203 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-27 21:07:26,206 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-27 21:07:26,547 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-27 21:07:26,548 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-27 21:07:26,549 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-27 21:07:26,549 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-27 21:07:26,551 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-27 21:07:26,551 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-27 21:07:26,878 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-27 21:07:26,878 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-27 21:07:26,879 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-27 21:07:26,880 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-27 21:07:27,039 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-27 21:07:27,039 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-27 21:07:27,040 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-27 21:07:27,042 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-27 21:07:27,100 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-27 21:07:27,100 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-27 21:07:27,100 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-27 21:07:27,102 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-27 21:07:27,380 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-27 21:07:27,380 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-27 21:07:27,380 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-27 21:07:27,382 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-27 21:07:27,535 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-27 21:07:27,536 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-27 21:07:27,536 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-27 21:07:27,538 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-27 21:07:27,565 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-27 21:07:27,565 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-27 21:07:27,565 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-27 21:07:27,567 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-27 21:07:27,848 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-27 21:07:27,848 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-27 21:07:27,848 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-27 21:07:27,850 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-27 21:07:28,005 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-27 21:07:28,006 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-27 21:07:28,009 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-27 21:07:28,015 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-27 21:07:28,046 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-27 21:07:28,047 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-27 21:07:28,047 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-27 21:07:28,048 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-27 21:07:28,387 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-27 21:07:28,387 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-27 21:07:28,387 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-27 21:07:28,390 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-27 21:07:28,622 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-27 21:07:28,622 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-27 21:07:28,623 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-27 21:07:28,624 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-27 21:07:28,652 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-27 21:07:28,652 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-27 21:07:28,653 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-27 21:07:28,654 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-27 21:07:28,679 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-27 21:07:28,679 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-27 21:07:28,679 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-27 21:07:28,681 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-27 21:07:28,703 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-27 21:07:28,704 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-27 21:07:28,704 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-27 21:07:28,706 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-27 21:07:28,729 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-27 21:07:28,729 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-27 21:07:28,729 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-27 21:07:28,731 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-27 21:07:28,753 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-27 21:07:28,754 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-27 21:07:28,754 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-27 21:07:28,754 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-27 21:07:28,754 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-27 21:07:28,765 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-27 21:07:28,800 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-27 21:07:28,800 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-27 21:07:29,026 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-27 21:07:29,026 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-27 21:07:29,028 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-27 21:07:29,053 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-27 21:07:29,054 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-27 21:07:29,054 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-27 21:07:29,057 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-27 21:07:29,100 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-27 21:07:29,100 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-27 21:07:29,310 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-27 21:07:29,310 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-27 21:07:29,311 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-27 21:07:29,313 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-27 21:07:29,314 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-27 21:07:29,665 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-27 21:07:29,665 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-27 21:07:29,856 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-27 21:07:29,856 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-27 21:07:29,858 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-27 21:07:30,014 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-27 21:07:30,015 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-27 21:07:30,015 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-27 21:07:30,017 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-27 21:07:30,042 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-27 21:07:30,042 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-27 21:07:30,042 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-27 21:07:30,044 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-27 21:07:30,383 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-27 21:07:30,383 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-27 21:07:30,384 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-27 21:07:30,385 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-27 21:07:30,542 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-27 21:07:30,542 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-27 21:07:30,543 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-27 21:07:30,544 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-27 21:07:30,568 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-27 21:07:30,568 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-27 21:07:30,568 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-27 21:07:30,570 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-27 21:07:30,865 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-27 21:07:30,865 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-27 21:07:30,865 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-27 21:07:30,867 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-27 21:07:31,024 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-27 21:07:31,024 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-27 21:07:31,024 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-27 21:07:31,026 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-27 21:07:31,054 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-27 21:07:31,055 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-27 21:07:31,055 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-27 21:07:31,057 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-27 21:07:31,088 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-27 21:07:31,088 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-27 21:07:31,088 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-27 21:07:31,089 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-27 21:07:31,091 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-27 21:07:31,092 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-27 21:07:31,368 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-27 21:07:31,369 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-27 21:07:31,369 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-27 21:07:31,370 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-27 21:07:31,602 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-27 21:07:31,602 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-27 21:07:31,602 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-27 21:07:31,604 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-27 21:07:31,629 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-27 21:07:31,629 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-27 21:07:31,629 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-27 21:07:31,631 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-27 21:07:32,038 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-27 21:07:32,038 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-27 21:07:32,165 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-27 21:07:32,165 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-27 21:07:32,167 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-27 21:07:32,318 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-27 21:07:32,318 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-27 21:07:32,318 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-27 21:07:32,320 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-27 21:07:32,345 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-27 21:07:32,345 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-27 21:07:32,345 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-27 21:07:32,346 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-27 21:07:32,347 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-27 21:07:32,721 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-27 21:07:32,722 [test_recharge.py-->line:33]:注册用户15869556990成功
INFO 2021-04-27 21:07:32,915 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-27 21:07:32,916 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-27 21:07:32,941 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-27 21:07:32,942 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-27 21:07:32,973 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-27 21:07:32,973 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-27 21:07:32,975 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-27 21:07:33,000 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-27 21:07:33,001 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-27 21:07:33,031 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-27 21:07:33,031 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-27 21:07:33,033 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-27 21:07:33,060 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-27 21:07:33,060 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-27 21:07:33,091 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-27 21:07:33,091 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-27 21:07:33,093 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-27 21:07:33,121 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-27 21:07:33,121 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-27 21:07:33,153 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-27 21:07:33,154 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-27 21:07:33,157 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-27 21:07:33,179 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-27 21:07:33,179 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-27 21:07:33,179 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-27 21:07:33,181 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-27 21:07:33,202 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-27 21:07:33,202 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-27 21:07:33,202 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-27 21:07:33,205 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-27 21:07:33,231 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-27 21:07:33,232 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-27 21:07:33,232 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-27 21:07:33,232 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-27 21:07:33,232 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000401707, 'leave_amount': 503553.68, 'mobile_phone': '15869556990', 'reg_name': '小柠檬', 'reg_time': '2021-04-27 21:07:33.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-27 21:07:33,243 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-27 21:07:33,264 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-27 21:07:33,264 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-27 21:07:33,265 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-27 21:07:33,267 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-27 21:07:33,291 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-27 21:07:33,291 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-27 21:07:33,292 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-27 21:07:33,292 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-27 21:07:33,292 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000401707, 'leave_amount': 503553.68, 'mobile_phone': '15869556990', 'reg_name': '小柠檬', 'reg_time': '2021-04-27 21:07:33.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-27 21:07:33,301 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-27 21:07:33,322 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-27 21:07:33,323 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-27 21:07:33,323 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-27 21:07:33,324 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-27 21:07:33,345 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-27 21:07:33,346 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-27 21:07:33,346 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-27 21:07:33,347 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-27 21:07:33,368 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-27 21:07:33,368 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-27 21:07:33,369 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-27 21:07:33,371 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-27 21:07:33,392 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-27 21:07:33,392 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-27 21:07:33,392 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-27 21:07:33,394 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-27 21:07:33,415 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-27 21:07:33,415 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-27 21:07:33,415 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-27 21:07:33,416 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-27 21:07:33,417 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-27 21:07:33,418 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-27 21:07:33,700 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-27 21:07:33,700 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-27 21:07:33,827 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-27 21:07:33,827 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-27 21:07:33,829 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-27 21:07:34,116 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-27 21:07:34,117 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-27 21:07:34,242 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-27 21:07:34,242 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-27 21:07:34,244 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-27 21:07:34,613 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-27 21:07:34,614 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-27 21:07:34,740 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-27 21:07:34,740 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-27 21:07:34,742 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-27 21:07:34,763 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-27 21:07:34,763 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-27 21:07:34,764 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-27 21:07:34,766 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-27 21:07:34,786 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-27 21:07:34,787 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-27 21:07:34,787 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-27 21:07:34,789 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-27 21:07:34,809 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-27 21:07:34,810 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-27 21:07:34,810 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-27 21:07:34,812 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-27 21:07:34,833 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-27 21:07:34,833 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-27 21:07:34,833 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-27 21:07:34,835 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-27 21:07:35,061 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-27 21:07:35,061 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-27 21:07:35,061 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-27 21:07:35,063 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-27 21:07:35,084 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-27 21:07:35,085 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-27 21:07:35,085 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-27 21:07:35,086 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-27 21:07:35,108 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-27 21:07:35,108 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-27 21:07:35,108 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-27 21:07:35,110 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-27 21:07:35,130 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-27 21:07:35,131 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-27 21:07:35,131 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-27 21:07:35,132 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-27 21:07:35,154 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-27 21:07:35,154 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-27 21:07:35,154 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-27 21:07:35,157 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-27 21:07:35,178 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-27 21:07:35,178 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-27 21:07:35,178 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-27 21:07:35,179 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-27 21:50:14,307 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-27 21:50:14,692 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-27 21:50:14,692 [test_audit.py-->line:31]:注册普通用户15835351362成功
INFO 2021-04-27 21:50:14,886 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-27 21:50:15,183 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-27 21:50:15,183 [test_audit.py-->line:47]:注册用户15868876946成功
INFO 2021-04-27 21:50:15,438 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-27 21:50:15,481 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-27 21:50:15,482 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-27 21:50:15,482 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-27 21:50:15,537 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-27 21:50:15,537 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-27 21:50:15,564 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-27 21:50:15,564 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-27 21:50:15,619 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-27 21:50:15,619 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-27 21:50:15,619 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-27 21:50:15,649 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-27 21:50:15,650 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-27 21:50:15,675 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-27 21:50:15,676 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-27 21:50:15,733 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-27 21:50:15,733 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-27 21:50:15,733 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-27 21:50:15,760 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-27 21:50:15,760 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-27 21:50:15,760 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-27 21:50:15,817 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-27 21:50:15,818 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-27 21:50:15,818 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-27 21:50:15,848 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-27 21:50:15,848 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-27 21:50:15,852 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-27 21:50:15,852 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-27 21:50:15,852 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-27 21:50:16,094 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-27 21:50:16,094 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-27 21:50:16,094 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-27 21:50:16,121 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-27 21:50:16,121 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-27 21:50:16,121 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-27 21:50:16,178 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-27 21:50:16,179 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-27 21:50:16,179 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-27 21:50:16,207 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-27 21:50:16,207 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-27 21:50:16,207 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-27 21:50:16,264 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-27 21:50:16,264 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-27 21:50:16,264 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-27 21:50:16,292 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-27 21:50:16,292 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-27 21:50:16,293 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-27 21:50:16,293 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-27 21:50:16,294 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-27 21:50:16,295 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-27 21:50:16,570 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-27 21:50:16,570 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-27 21:50:16,570 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-27 21:50:16,572 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-27 21:50:16,856 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-27 21:50:16,857 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-27 21:50:16,858 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-27 21:50:16,858 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-27 21:50:16,859 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-27 21:50:16,860 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-27 21:50:17,291 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-27 21:50:17,291 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-27 21:50:17,292 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-27 21:50:17,294 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-27 21:50:17,554 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-27 21:50:17,554 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-27 21:50:17,554 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-27 21:50:17,557 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-27 21:50:17,614 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-27 21:50:17,615 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-27 21:50:17,615 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-27 21:50:17,616 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-27 21:50:18,044 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-27 21:50:18,045 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-27 21:50:18,045 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-27 21:50:18,046 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-27 21:50:18,204 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-27 21:50:18,204 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-27 21:50:18,205 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-27 21:50:18,206 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-27 21:50:18,238 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-27 21:50:18,238 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-27 21:50:18,239 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-27 21:50:18,240 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-27 21:50:18,543 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-27 21:50:18,543 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-27 21:50:18,543 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-27 21:50:18,544 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-27 21:50:18,713 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-27 21:50:18,713 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-27 21:50:18,714 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-27 21:50:18,715 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-27 21:50:18,747 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-27 21:50:18,747 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-27 21:50:18,748 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-27 21:50:18,749 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-27 21:50:19,066 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-27 21:50:19,067 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-27 21:50:19,069 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-27 21:50:19,076 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-27 21:50:19,238 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-27 21:50:19,238 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-27 21:50:19,239 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-27 21:50:19,240 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-27 21:50:19,273 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-27 21:50:19,273 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-27 21:50:19,273 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-27 21:50:19,275 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-27 21:50:19,304 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-27 21:50:19,304 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-27 21:50:19,304 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-27 21:50:19,306 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-27 21:50:19,335 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-27 21:50:19,336 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-27 21:50:19,337 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-27 21:50:19,344 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-27 21:50:19,379 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-27 21:50:19,380 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-27 21:50:19,380 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-27 21:50:19,381 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-27 21:50:19,409 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-27 21:50:19,410 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-27 21:50:19,410 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-27 21:50:19,410 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-27 21:50:19,410 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-27 21:50:19,419 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-27 21:50:19,455 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-27 21:50:19,455 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-27 21:50:19,620 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-27 21:50:19,620 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-27 21:50:19,621 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-27 21:50:19,653 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-27 21:50:19,654 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-27 21:50:19,655 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-27 21:50:19,661 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-27 21:50:19,714 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-27 21:50:19,715 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-27 21:50:19,906 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-27 21:50:19,906 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-27 21:50:19,908 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-27 21:50:19,910 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-27 21:50:19,911 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-27 21:50:20,208 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-27 21:50:20,208 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-27 21:50:20,343 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-27 21:50:20,344 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-27 21:50:20,345 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-27 21:50:20,514 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-27 21:50:20,515 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-27 21:50:20,515 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-27 21:50:20,517 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-27 21:50:20,547 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-27 21:50:20,548 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-27 21:50:20,548 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-27 21:50:20,550 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-27 21:50:20,860 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-27 21:50:20,861 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-27 21:50:20,861 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-27 21:50:20,862 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-27 21:50:21,029 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-27 21:50:21,029 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-27 21:50:21,030 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-27 21:50:21,031 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-27 21:50:21,062 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-27 21:50:21,062 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-27 21:50:21,063 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-27 21:50:21,064 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-27 21:50:21,351 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-27 21:50:21,351 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-27 21:50:21,351 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-27 21:50:21,353 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-27 21:50:21,512 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-27 21:50:21,513 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-27 21:50:21,513 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-27 21:50:21,514 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-27 21:50:21,545 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-27 21:50:21,546 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-27 21:50:21,546 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-27 21:50:21,547 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-27 21:50:21,597 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-27 21:50:21,597 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-27 21:50:21,598 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-27 21:50:21,598 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-27 21:50:21,599 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-27 21:50:21,600 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-27 21:50:21,885 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-27 21:50:21,885 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-27 21:50:21,885 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-27 21:50:21,887 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-27 21:50:22,129 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-27 21:50:22,129 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-27 21:50:22,129 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-27 21:50:22,131 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-27 21:50:22,161 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-27 21:50:22,161 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-27 21:50:22,161 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-27 21:50:22,163 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-27 21:50:22,528 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-27 21:50:22,530 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-27 21:50:22,712 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-27 21:50:22,713 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-27 21:50:22,715 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-27 21:50:22,872 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-27 21:50:22,872 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-27 21:50:22,872 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-27 21:50:22,874 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-27 21:50:22,905 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-27 21:50:22,907 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-27 21:50:22,907 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-27 21:50:22,910 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-27 21:50:22,914 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-27 21:50:23,275 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-27 21:50:23,275 [test_recharge.py-->line:33]:注册用户15894693528成功
INFO 2021-04-27 21:50:23,543 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-27 21:50:23,544 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-27 21:50:23,575 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-27 21:50:23,575 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-27 21:50:23,601 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-27 21:50:23,602 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-27 21:50:23,604 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-27 21:50:23,637 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-27 21:50:23,637 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-27 21:50:23,662 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-27 21:50:23,663 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-27 21:50:23,664 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-27 21:50:23,696 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-27 21:50:23,696 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-27 21:50:23,723 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-27 21:50:23,723 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-27 21:50:23,724 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-27 21:50:23,756 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-27 21:50:23,756 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-27 21:50:23,782 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-27 21:50:23,782 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-27 21:50:23,784 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-27 21:50:23,810 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-27 21:50:23,810 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-27 21:50:23,810 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-27 21:50:23,812 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-27 21:50:23,838 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-27 21:50:23,838 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-27 21:50:23,838 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-27 21:50:23,840 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-27 21:50:23,872 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-27 21:50:23,872 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-27 21:50:23,872 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-27 21:50:23,873 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-27 21:50:23,873 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000401783, 'leave_amount': 503553.68, 'mobile_phone': '15894693528', 'reg_name': '小柠檬', 'reg_time': '2021-04-27 21:50:23.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-27 21:50:23,881 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-27 21:50:23,910 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-27 21:50:23,911 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-27 21:50:23,911 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-27 21:50:23,913 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-27 21:50:23,944 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-27 21:50:23,945 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-27 21:50:23,945 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-27 21:50:23,945 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-27 21:50:23,945 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000401783, 'leave_amount': 503553.68, 'mobile_phone': '15894693528', 'reg_name': '小柠檬', 'reg_time': '2021-04-27 21:50:23.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-27 21:50:23,955 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-27 21:50:23,981 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-27 21:50:23,981 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-27 21:50:23,981 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-27 21:50:23,983 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-27 21:50:24,009 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-27 21:50:24,009 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-27 21:50:24,010 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-27 21:50:24,011 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-27 21:50:24,037 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-27 21:50:24,038 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-27 21:50:24,038 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-27 21:50:24,039 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-27 21:50:24,066 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-27 21:50:24,066 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-27 21:50:24,066 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-27 21:50:24,068 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-27 21:50:24,094 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-27 21:50:24,094 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-27 21:50:24,094 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-27 21:50:24,095 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-27 21:50:24,096 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-27 21:50:24,097 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-27 21:50:24,375 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-27 21:50:24,375 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-27 21:50:24,505 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-27 21:50:24,506 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-27 21:50:24,507 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-27 21:50:24,868 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-27 21:50:24,869 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-27 21:50:25,002 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-27 21:50:25,002 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-27 21:50:25,008 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-27 21:50:25,312 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-27 21:50:25,313 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-27 21:50:25,460 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-27 21:50:25,461 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-27 21:50:25,462 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-27 21:50:25,489 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-27 21:50:25,490 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-27 21:50:25,490 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-27 21:50:25,491 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-27 21:50:25,518 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-27 21:50:25,518 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-27 21:50:25,519 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-27 21:50:25,520 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-27 21:50:25,546 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-27 21:50:25,547 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-27 21:50:25,547 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-27 21:50:25,548 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-27 21:50:25,575 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-27 21:50:25,575 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-27 21:50:25,575 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-27 21:50:25,577 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-27 21:50:25,738 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-27 21:50:25,738 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-27 21:50:25,738 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-27 21:50:25,739 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-27 21:50:25,766 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-27 21:50:25,767 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-27 21:50:25,767 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-27 21:50:25,768 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-27 21:50:25,794 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-27 21:50:25,795 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-27 21:50:25,795 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-27 21:50:25,796 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-27 21:50:25,822 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-27 21:50:25,823 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-27 21:50:25,823 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-27 21:50:25,824 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-27 21:50:25,850 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-27 21:50:25,850 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-27 21:50:25,851 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-27 21:50:25,852 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-27 21:50:25,878 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-27 21:50:25,879 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-27 21:50:25,879 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-27 21:50:25,879 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-27 21:58:02,491 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-27 21:58:03,634 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-27 21:58:03,634 [test_audit.py-->line:31]:注册普通用户15804373831成功
INFO 2021-04-27 21:58:04,286 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-27 21:58:05,447 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-27 21:58:05,448 [test_audit.py-->line:47]:注册用户15819729137成功
INFO 2021-04-27 21:58:06,155 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-27 21:58:06,214 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-27 21:58:06,215 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-27 21:58:06,215 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-27 21:58:06,264 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-27 21:58:06,265 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-27 21:58:06,299 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-27 21:58:06,299 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-27 21:58:06,370 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-27 21:58:06,370 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-27 21:58:06,371 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-27 21:58:06,395 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-27 21:58:06,395 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-27 21:58:06,432 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-27 21:58:06,433 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-27 21:58:06,488 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-27 21:58:06,489 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-27 21:58:06,489 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-27 21:58:06,514 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-27 21:58:06,514 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-27 21:58:06,514 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-27 21:58:06,582 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-27 21:58:06,582 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-27 21:58:06,583 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-27 21:58:06,605 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-27 21:58:06,606 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-27 21:58:06,606 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-27 21:58:06,606 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-27 21:58:06,606 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-27 21:58:06,864 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-27 21:58:06,864 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-27 21:58:06,864 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-27 21:58:06,888 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-27 21:58:06,888 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-27 21:58:06,889 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-27 21:58:06,950 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-27 21:58:06,951 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-27 21:58:06,951 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-27 21:58:06,973 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-27 21:58:06,973 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-27 21:58:06,973 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-27 21:58:07,020 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-27 21:58:07,021 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-27 21:58:07,021 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-27 21:58:07,044 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-27 21:58:07,044 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-27 21:58:07,044 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-27 21:58:07,045 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-27 21:58:07,046 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-27 21:58:07,046 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-27 21:58:07,341 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-27 21:58:07,341 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-27 21:58:07,342 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-27 21:58:07,343 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-27 21:58:07,686 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-27 21:58:07,687 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-27 21:58:07,687 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-27 21:58:07,688 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-27 21:58:07,690 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-27 21:58:07,691 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-27 21:58:08,879 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-27 21:58:08,880 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-27 21:58:08,880 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-27 21:58:08,883 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-27 21:58:09,546 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-27 21:58:09,546 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-27 21:58:09,546 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-27 21:58:09,548 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-27 21:58:09,593 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-27 21:58:09,593 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-27 21:58:09,593 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-27 21:58:09,595 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-27 21:58:10,757 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-27 21:58:10,758 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-27 21:58:10,758 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-27 21:58:10,759 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-27 21:58:11,503 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-27 21:58:11,504 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-27 21:58:11,505 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-27 21:58:11,506 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-27 21:58:11,530 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-27 21:58:11,530 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-27 21:58:11,530 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-27 21:58:11,532 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-27 21:58:12,735 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-27 21:58:12,736 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-27 21:58:12,736 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-27 21:58:12,737 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-27 21:58:13,419 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-27 21:58:13,420 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-27 21:58:13,420 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-27 21:58:13,421 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-27 21:58:13,445 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-27 21:58:13,445 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-27 21:58:13,445 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-27 21:58:13,447 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-27 21:58:14,644 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-27 21:58:14,645 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-27 21:58:14,646 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-27 21:58:14,653 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-27 21:58:15,355 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-27 21:58:15,355 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-27 21:58:15,356 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-27 21:58:15,357 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-27 21:58:15,381 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-27 21:58:15,381 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-27 21:58:15,381 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-27 21:58:15,383 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-27 21:58:15,404 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-27 21:58:15,404 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-27 21:58:15,405 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-27 21:58:15,406 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-27 21:58:15,426 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-27 21:58:15,426 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-27 21:58:15,427 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-27 21:58:15,428 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-27 21:58:15,448 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-27 21:58:15,448 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-27 21:58:15,448 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-27 21:58:15,449 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-27 21:58:15,470 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-27 21:58:15,470 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-27 21:58:15,471 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-27 21:58:15,471 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-27 21:58:15,471 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-27 21:58:15,481 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-27 21:58:15,508 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-27 21:58:15,508 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-27 21:58:15,939 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-27 21:58:15,939 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-27 21:58:15,940 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-27 21:58:15,963 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-27 21:58:15,963 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-27 21:58:15,963 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-27 21:58:15,965 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-27 21:58:16,009 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-27 21:58:16,009 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-27 21:58:16,509 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-27 21:58:16,509 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-27 21:58:16,510 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-27 21:58:16,511 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-27 21:58:16,512 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-27 21:58:17,826 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-27 21:58:17,826 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-27 21:58:18,488 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-27 21:58:18,488 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-27 21:58:18,490 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-27 21:58:19,603 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-27 21:58:19,603 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-27 21:58:19,604 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-27 21:58:19,605 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-27 21:58:19,630 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-27 21:58:19,630 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-27 21:58:19,631 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-27 21:58:19,632 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-27 21:58:21,802 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-27 21:58:21,803 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-27 21:58:21,803 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-27 21:58:21,805 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-27 21:58:23,227 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-27 21:58:23,227 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-27 21:58:23,227 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-27 21:58:23,229 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-27 21:58:23,256 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-27 21:58:23,256 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-27 21:58:23,257 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-27 21:58:23,258 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-27 21:58:25,810 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-27 21:58:25,810 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-27 21:58:25,810 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-27 21:58:25,812 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-27 21:58:27,132 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-27 21:58:27,133 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-27 21:58:27,133 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-27 21:58:27,135 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-27 21:58:27,159 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-27 21:58:27,160 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-27 21:58:27,160 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-27 21:58:27,161 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-27 21:58:27,190 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-27 21:58:27,191 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-27 21:58:27,191 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-27 21:58:27,192 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-27 21:58:27,193 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-27 21:58:27,194 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-27 21:58:29,575 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-27 21:58:29,575 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-27 21:58:29,576 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-27 21:58:29,577 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-27 21:58:30,886 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-27 21:58:30,886 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-27 21:58:30,886 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-27 21:58:30,888 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-27 21:58:30,914 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-27 21:58:30,914 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-27 21:58:30,914 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-27 21:58:30,916 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-27 21:58:33,195 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-27 21:58:33,195 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-27 21:58:34,192 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-27 21:58:34,192 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-27 21:58:34,193 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-27 21:58:35,535 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-27 21:58:35,536 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-27 21:58:35,536 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-27 21:58:35,538 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-27 21:58:35,567 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-27 21:58:35,567 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-27 21:58:35,567 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-27 21:58:35,568 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-27 21:58:35,569 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-27 21:58:38,155 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-27 21:58:38,156 [test_recharge.py-->line:33]:注册用户15805643750成功
INFO 2021-04-27 21:58:39,484 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-27 21:58:39,485 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-27 21:58:39,535 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-27 21:58:39,537 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-27 21:58:39,568 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-27 21:58:39,568 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-27 21:58:39,570 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-27 21:58:39,593 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-27 21:58:39,593 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-27 21:58:39,624 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-27 21:58:39,624 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-27 21:58:39,625 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-27 21:58:39,665 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-27 21:58:39,665 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-27 21:58:39,696 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-27 21:58:39,696 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-27 21:58:39,697 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-27 21:58:39,802 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-27 21:58:39,802 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-27 21:58:39,833 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-27 21:58:39,833 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-27 21:58:39,834 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-27 21:58:39,854 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-27 21:58:39,854 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-27 21:58:39,854 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-27 21:58:39,856 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-27 21:58:39,875 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-27 21:58:39,875 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-27 21:58:39,875 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-27 21:58:39,877 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-27 21:58:39,906 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-27 21:58:39,907 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-27 21:58:39,908 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-27 21:58:39,908 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-27 21:58:39,908 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000402598, 'leave_amount': 503553.68, 'mobile_phone': '15805643750', 'reg_name': '小柠檬', 'reg_time': '2021-04-27 21:58:38.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-27 21:58:39,917 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-27 21:58:39,936 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-27 21:58:39,936 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-27 21:58:39,936 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-27 21:58:39,938 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-27 21:58:39,960 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-27 21:58:39,962 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-27 21:58:39,963 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-27 21:58:39,964 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-27 21:58:39,964 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000402598, 'leave_amount': 503553.68, 'mobile_phone': '15805643750', 'reg_name': '小柠檬', 'reg_time': '2021-04-27 21:58:38.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-27 21:58:39,974 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-27 21:58:39,996 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-27 21:58:39,996 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-27 21:58:39,996 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-27 21:58:39,997 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-27 21:58:40,017 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-27 21:58:40,017 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-27 21:58:40,018 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-27 21:58:40,019 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-27 21:58:40,037 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-27 21:58:40,037 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-27 21:58:40,037 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-27 21:58:40,039 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-27 21:58:40,058 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-27 21:58:40,058 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-27 21:58:40,058 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-27 21:58:40,060 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-27 21:58:40,080 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-27 21:58:40,081 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-27 21:58:40,082 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-27 21:58:40,084 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-27 21:58:40,088 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-27 21:58:40,088 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-27 21:58:42,374 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-27 21:58:42,374 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-27 21:58:43,413 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-27 21:58:43,413 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-27 21:58:43,414 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-27 21:58:45,860 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-27 21:58:45,861 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-27 21:58:46,877 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-27 21:58:46,877 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-27 21:58:46,878 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-27 21:58:49,310 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-27 21:58:49,310 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-27 21:58:50,434 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-27 21:58:50,434 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-27 21:58:50,436 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-27 21:58:50,455 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-27 21:58:50,455 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-27 21:58:50,455 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-27 21:58:50,457 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-27 21:58:50,476 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-27 21:58:50,476 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-27 21:58:50,476 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-27 21:58:50,478 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-27 21:58:50,498 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-27 21:58:50,498 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-27 21:58:50,498 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-27 21:58:50,499 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-27 21:58:50,518 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-27 21:58:50,518 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-27 21:58:50,518 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-27 21:58:50,520 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-27 21:58:51,959 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-27 21:58:51,960 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-27 21:58:51,960 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-27 21:58:51,961 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-27 21:58:51,981 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-27 21:58:51,981 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-27 21:58:51,981 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-27 21:58:51,983 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-27 21:58:52,004 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-27 21:58:52,004 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-27 21:58:52,004 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-27 21:58:52,006 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-27 21:58:52,027 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-27 21:58:52,027 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-27 21:58:52,027 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-27 21:58:52,028 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-27 21:58:52,048 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-27 21:58:52,049 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-27 21:58:52,049 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-27 21:58:52,052 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-27 21:58:52,074 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-27 21:58:52,074 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-27 21:58:52,074 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-27 21:58:52,075 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-28 14:50:10,389 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-28 14:50:10,729 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-28 14:50:10,729 [test_audit.py-->line:31]:注册普通用户15899217946成功
INFO 2021-04-28 14:50:10,969 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-28 14:50:11,388 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-28 14:50:11,388 [test_audit.py-->line:47]:注册用户15849950718成功
INFO 2021-04-28 14:50:11,658 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-28 14:50:11,719 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 14:50:11,719 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 14:50:11,719 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-28 14:50:11,769 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-28 14:50:11,769 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-28 14:50:11,788 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-28 14:50:11,788 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-28 14:50:11,839 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 14:50:11,848 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 14:50:11,848 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-28 14:50:11,869 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-28 14:50:11,869 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-28 14:50:11,889 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-28 14:50:11,889 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-28 14:50:11,959 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 14:50:11,959 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 14:50:11,959 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-28 14:50:11,979 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-28 14:50:11,979 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-28 14:50:11,979 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-28 14:50:12,029 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 14:50:12,029 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 14:50:12,029 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-28 14:50:12,059 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-28 14:50:12,059 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-28 14:50:12,063 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-28 14:50:12,063 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-28 14:50:12,063 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-28 14:50:12,289 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 14:50:12,289 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 14:50:12,289 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-28 14:50:12,309 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-28 14:50:12,309 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-28 14:50:12,309 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-28 14:50:12,359 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 14:50:12,359 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 14:50:12,359 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-28 14:50:12,379 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-28 14:50:12,379 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-28 14:50:12,379 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-28 14:50:12,429 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 14:50:12,429 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 14:50:12,439 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-28 14:50:12,459 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-28 14:50:12,459 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-28 14:50:12,459 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-28 14:50:12,459 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-28 14:50:12,459 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-28 14:50:12,459 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-28 14:50:12,778 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-28 14:50:12,778 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-28 14:50:12,778 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-28 14:50:12,778 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-28 14:50:13,079 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-28 14:50:13,079 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-28 14:50:13,079 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-28 14:50:13,079 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-28 14:50:13,079 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-28 14:50:13,079 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-28 14:50:13,369 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-28 14:50:13,369 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-28 14:50:13,369 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-28 14:50:13,379 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-28 14:50:13,539 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-28 14:50:13,539 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-28 14:50:13,539 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-28 14:50:13,539 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-28 14:50:13,609 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-28 14:50:13,609 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-28 14:50:13,609 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-28 14:50:13,609 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-28 14:50:13,949 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-28 14:50:13,949 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-28 14:50:13,949 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-28 14:50:13,949 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-28 14:50:14,109 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-28 14:50:14,109 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-28 14:50:14,109 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-28 14:50:14,109 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-28 14:50:14,138 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-28 14:50:14,138 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-28 14:50:14,138 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-28 14:50:14,138 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-28 14:50:14,489 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-28 14:50:14,489 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-28 14:50:14,489 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-28 14:50:14,489 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-28 14:50:14,665 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-28 14:50:14,665 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-28 14:50:14,669 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-28 14:50:14,669 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-28 14:50:14,699 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-28 14:50:14,699 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-28 14:50:14,699 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-28 14:50:14,699 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-28 14:50:14,979 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-28 14:50:14,979 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-28 14:50:14,979 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-28 14:50:14,988 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-28 14:50:15,148 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-28 14:50:15,148 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-28 14:50:15,148 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-28 14:50:15,148 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-28 14:50:15,169 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-28 14:50:15,169 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-28 14:50:15,169 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-28 14:50:15,178 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-28 14:50:15,199 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-28 14:50:15,199 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-28 14:50:15,199 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-28 14:50:15,199 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-28 14:50:15,229 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-28 14:50:15,229 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-28 14:50:15,229 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-28 14:50:15,229 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-28 14:50:15,258 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-28 14:50:15,258 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-28 14:50:15,258 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-28 14:50:15,265 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-28 14:50:15,289 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-28 14:50:15,289 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-28 14:50:15,289 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-28 14:50:15,289 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-28 14:50:15,289 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-28 14:50:15,319 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-28 14:50:15,349 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-28 14:50:15,349 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-28 14:50:15,489 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-28 14:50:15,489 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-28 14:50:15,489 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-28 14:50:15,519 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-28 14:50:15,519 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-28 14:50:15,519 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-28 14:50:15,519 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-28 14:50:15,559 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-28 14:50:15,559 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-28 14:50:15,719 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-28 14:50:15,719 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-28 14:50:15,719 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-28 14:50:15,719 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-28 14:50:15,729 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-28 14:50:16,009 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-28 14:50:16,009 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-28 14:50:16,118 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-28 14:50:16,128 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-28 14:50:16,128 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-28 14:50:16,329 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-28 14:50:16,329 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-28 14:50:16,329 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-28 14:50:16,329 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-28 14:50:16,349 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-28 14:50:16,349 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-28 14:50:16,349 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-28 14:50:16,358 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-28 14:50:16,639 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-28 14:50:16,639 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-28 14:50:16,639 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-28 14:50:16,639 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-28 14:50:16,799 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-28 14:50:16,799 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-28 14:50:16,799 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-28 14:50:16,799 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-28 14:50:16,829 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-28 14:50:16,830 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-28 14:50:16,830 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-28 14:50:16,830 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-28 14:50:17,102 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-28 14:50:17,102 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-28 14:50:17,108 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-28 14:50:17,108 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-28 14:50:17,279 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-28 14:50:17,279 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-28 14:50:17,279 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-28 14:50:17,279 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-28 14:50:17,310 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-28 14:50:17,310 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-28 14:50:17,310 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-28 14:50:17,318 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-28 14:50:17,349 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-28 14:50:17,349 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-28 14:50:17,349 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-28 14:50:17,359 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-28 14:50:17,359 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-28 14:50:17,359 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-28 14:50:17,628 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-28 14:50:17,628 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-28 14:50:17,628 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-28 14:50:17,638 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-28 14:50:17,799 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-28 14:50:17,799 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-28 14:50:17,799 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-28 14:50:17,799 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-28 14:50:17,819 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-28 14:50:17,828 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-28 14:50:17,828 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-28 14:50:17,828 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-28 14:50:18,109 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-28 14:50:18,109 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-28 14:50:18,229 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-28 14:50:18,229 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-28 14:50:18,229 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-28 14:50:18,389 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-28 14:50:18,389 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-28 14:50:18,389 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-28 14:50:18,398 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-28 14:50:18,418 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-28 14:50:18,418 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-28 14:50:18,418 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-28 14:50:18,429 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-28 14:50:18,438 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-28 14:50:18,739 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-28 14:50:18,739 [test_recharge.py-->line:33]:注册用户15812742473成功
INFO 2021-04-28 14:50:18,929 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-28 14:50:18,929 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-28 14:50:18,949 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-28 14:50:18,958 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-28 14:50:18,976 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-28 14:50:18,979 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-28 14:50:18,979 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-28 14:50:19,009 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-28 14:50:19,018 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-28 14:50:19,029 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-28 14:50:19,038 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-28 14:50:19,038 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-28 14:50:19,059 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-28 14:50:19,059 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-28 14:50:19,079 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-28 14:50:19,079 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-28 14:50:19,094 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-28 14:50:19,119 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-28 14:50:19,119 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-28 14:50:19,142 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-28 14:50:19,142 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-28 14:50:19,142 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-28 14:50:19,168 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-28 14:50:19,168 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-28 14:50:19,168 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-28 14:50:19,168 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-28 14:50:19,189 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-28 14:50:19,189 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-28 14:50:19,189 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-28 14:50:19,198 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-28 14:50:19,229 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-28 14:50:19,229 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-28 14:50:19,238 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-28 14:50:19,238 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-28 14:50:19,238 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000423234, 'leave_amount': 503553.68, 'mobile_phone': '15812742473', 'reg_name': '小柠檬', 'reg_time': '2021-04-28 14:50:18.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-28 14:50:19,248 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-28 14:50:19,269 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-28 14:50:19,269 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-28 14:50:19,269 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-28 14:50:19,269 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-28 14:50:19,299 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-28 14:50:19,299 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day29\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-28 14:50:19,299 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-28 14:50:19,299 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-28 14:50:19,299 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000423234, 'leave_amount': 503553.68, 'mobile_phone': '15812742473', 'reg_name': '小柠檬', 'reg_time': '2021-04-28 14:50:18.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-28 14:50:19,308 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-28 14:50:19,328 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-28 14:50:19,328 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-28 14:50:19,328 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-28 14:50:19,328 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-28 14:50:19,348 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-28 14:50:19,348 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-28 14:50:19,348 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-28 14:50:19,360 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-28 14:50:19,379 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-28 14:50:19,379 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-28 14:50:19,379 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-28 14:50:19,389 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-28 14:50:19,408 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-28 14:50:19,408 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-28 14:50:19,408 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-28 14:50:19,408 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-28 14:50:19,428 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-28 14:50:19,428 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-28 14:50:19,428 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-28 14:50:19,438 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-28 14:50:19,438 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-28 14:50:19,438 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-28 14:50:19,739 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-28 14:50:19,739 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-28 14:50:19,869 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-28 14:50:19,869 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-28 14:50:19,869 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-28 14:50:20,180 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-28 14:50:20,180 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-28 14:50:20,299 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-28 14:50:20,308 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-28 14:50:20,308 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-28 14:50:20,609 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-28 14:50:20,609 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-28 14:50:20,729 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-28 14:50:20,729 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-28 14:50:20,729 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-28 14:50:20,749 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-28 14:50:20,749 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-28 14:50:20,749 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-28 14:50:20,749 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-28 14:50:20,779 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-28 14:50:20,779 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-28 14:50:20,781 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-28 14:50:20,781 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-28 14:50:20,799 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-28 14:50:20,799 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-28 14:50:20,799 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-28 14:50:20,799 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-28 14:50:20,828 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-28 14:50:20,828 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-28 14:50:20,828 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-28 14:50:20,828 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-28 14:50:20,988 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-28 14:50:20,988 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-28 14:50:20,988 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-28 14:50:20,988 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-28 14:50:21,009 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-28 14:50:21,009 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-28 14:50:21,009 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-28 14:50:21,009 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-28 14:50:21,039 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-28 14:50:21,039 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-28 14:50:21,039 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-28 14:50:21,039 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-28 14:50:21,068 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-28 14:50:21,068 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-28 14:50:21,068 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-28 14:50:21,068 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-28 14:50:21,099 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-28 14:50:21,099 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-28 14:50:21,099 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-28 14:50:21,099 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-28 14:50:21,129 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-28 14:50:21,129 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-28 14:50:21,129 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-28 14:50:21,129 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-28 20:09:07,317 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-28 20:09:07,649 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-28 20:09:07,649 [test_audit.py-->line:31]:注册普通用户15849463379成功
INFO 2021-04-28 20:09:07,830 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-28 20:09:08,139 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-28 20:09:08,139 [test_audit.py-->line:47]:注册用户15859952750成功
INFO 2021-04-28 20:09:08,340 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-28 20:09:08,399 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 20:09:08,400 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 20:09:08,400 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-28 20:09:08,459 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-28 20:09:08,459 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-28 20:09:08,484 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-28 20:09:08,485 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-28 20:09:08,546 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 20:09:08,547 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 20:09:08,547 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-28 20:09:08,576 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-28 20:09:08,577 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-28 20:09:08,601 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-28 20:09:08,601 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-28 20:09:08,647 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 20:09:08,647 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 20:09:08,647 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-28 20:09:08,675 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-28 20:09:08,675 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-28 20:09:08,676 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-28 20:09:08,721 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 20:09:08,721 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 20:09:08,721 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-28 20:09:08,751 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-28 20:09:08,751 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day32\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-28 20:09:08,755 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-28 20:09:08,756 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-28 20:09:08,756 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-28 20:09:09,040 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 20:09:09,041 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 20:09:09,041 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-28 20:09:09,068 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-28 20:09:09,069 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-28 20:09:09,069 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-28 20:09:09,120 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 20:09:09,121 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 20:09:09,121 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-28 20:09:09,148 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-28 20:09:09,148 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-28 20:09:09,148 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-28 20:09:09,198 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 20:09:09,199 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 20:09:09,199 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-28 20:09:09,226 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-28 20:09:09,226 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-28 20:09:09,226 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-28 20:09:09,227 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-28 20:09:09,229 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-28 20:09:09,230 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-28 20:09:09,482 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-28 20:09:09,482 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-28 20:09:09,482 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-28 20:09:09,484 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-28 20:09:09,784 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-28 20:09:09,786 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-28 20:09:09,786 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-28 20:09:09,787 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-28 20:09:09,789 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-28 20:09:09,790 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-28 20:09:10,104 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-28 20:09:10,104 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-28 20:09:10,105 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-28 20:09:10,106 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-28 20:09:10,286 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-28 20:09:10,287 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-28 20:09:10,287 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-28 20:09:10,289 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-28 20:09:10,355 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-28 20:09:10,355 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-28 20:09:10,356 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-28 20:09:10,358 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-28 20:09:10,660 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-28 20:09:10,660 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-28 20:09:10,660 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-28 20:09:10,663 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-28 20:09:10,916 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-28 20:09:10,916 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-28 20:09:10,921 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-28 20:09:10,923 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-28 20:09:10,957 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-28 20:09:10,958 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-28 20:09:10,958 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-28 20:09:10,960 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-28 20:09:11,315 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-28 20:09:11,316 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-28 20:09:11,316 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-28 20:09:11,318 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-28 20:09:11,565 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-28 20:09:11,565 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-28 20:09:11,565 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-28 20:09:11,567 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-28 20:09:11,600 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-28 20:09:11,600 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-28 20:09:11,601 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-28 20:09:11,603 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-28 20:09:11,895 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-28 20:09:11,896 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-28 20:09:11,896 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-28 20:09:11,897 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-28 20:09:12,060 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-28 20:09:12,060 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-28 20:09:12,060 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-28 20:09:12,062 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-28 20:09:12,094 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-28 20:09:12,095 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-28 20:09:12,095 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-28 20:09:12,097 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-28 20:09:12,126 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-28 20:09:12,127 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-28 20:09:12,127 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-28 20:09:12,130 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-28 20:09:12,159 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-28 20:09:12,159 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-28 20:09:12,159 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-28 20:09:12,161 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-28 20:09:12,189 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-28 20:09:12,189 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-28 20:09:12,189 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-28 20:09:12,192 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-28 20:09:12,225 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-28 20:09:12,225 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day32\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-28 20:09:12,226 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-28 20:09:12,226 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-28 20:09:12,226 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-28 20:09:12,255 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-28 20:09:12,290 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-28 20:09:12,290 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-28 20:09:12,438 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-28 20:09:12,438 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-28 20:09:12,440 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-28 20:09:12,471 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-28 20:09:12,471 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-28 20:09:12,472 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-28 20:09:12,473 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-28 20:09:12,519 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-28 20:09:12,519 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-28 20:09:12,697 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-28 20:09:12,697 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-28 20:09:12,698 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-28 20:09:12,699 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-28 20:09:12,700 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-28 20:09:12,991 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-28 20:09:12,992 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-28 20:09:13,116 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-28 20:09:13,116 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-28 20:09:13,118 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-28 20:09:13,296 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-28 20:09:13,296 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-28 20:09:13,297 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-28 20:09:13,298 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-28 20:09:13,329 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-28 20:09:13,329 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-28 20:09:13,330 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-28 20:09:13,331 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-28 20:09:13,614 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-28 20:09:13,614 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-28 20:09:13,614 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-28 20:09:13,617 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-28 20:09:13,781 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-28 20:09:13,781 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-28 20:09:13,781 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-28 20:09:13,783 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-28 20:09:13,813 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-28 20:09:13,813 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-28 20:09:13,813 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-28 20:09:13,815 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-28 20:09:14,098 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-28 20:09:14,099 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-28 20:09:14,099 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-28 20:09:14,100 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-28 20:09:14,269 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-28 20:09:14,269 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-28 20:09:14,270 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-28 20:09:14,271 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-28 20:09:14,304 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-28 20:09:14,305 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-28 20:09:14,305 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-28 20:09:14,308 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-28 20:09:14,345 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-28 20:09:14,345 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-28 20:09:14,345 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-28 20:09:14,346 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-28 20:09:14,347 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-28 20:09:14,347 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-28 20:09:14,640 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-28 20:09:14,641 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-28 20:09:14,641 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-28 20:09:14,643 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-28 20:09:14,815 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-28 20:09:14,816 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-28 20:09:14,816 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-28 20:09:14,818 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-28 20:09:14,848 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-28 20:09:14,849 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-28 20:09:14,849 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-28 20:09:14,851 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-28 20:09:15,137 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-28 20:09:15,137 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-28 20:09:15,268 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-28 20:09:15,268 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-28 20:09:15,270 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-28 20:09:15,432 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-28 20:09:15,432 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-28 20:09:15,432 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-28 20:09:15,434 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-28 20:09:15,463 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-28 20:09:15,464 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-28 20:09:15,464 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-28 20:09:15,465 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-28 20:09:15,467 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-28 20:09:15,769 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-28 20:09:15,770 [test_recharge.py-->line:33]:注册用户15829266196成功
INFO 2021-04-28 20:09:16,049 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-28 20:09:16,050 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-28 20:09:16,082 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-28 20:09:16,082 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-28 20:09:16,106 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-28 20:09:16,106 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-28 20:09:16,111 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-28 20:09:16,145 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-28 20:09:16,146 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-28 20:09:16,170 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-28 20:09:16,170 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-28 20:09:16,172 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-28 20:09:16,206 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-28 20:09:16,207 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-28 20:09:16,230 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-28 20:09:16,231 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-28 20:09:16,233 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-28 20:09:16,265 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-28 20:09:16,266 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-28 20:09:16,291 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-28 20:09:16,291 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-28 20:09:16,298 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-28 20:09:16,327 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-28 20:09:16,327 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-28 20:09:16,327 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-28 20:09:16,329 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-28 20:09:16,356 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-28 20:09:16,356 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-28 20:09:16,356 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-28 20:09:16,358 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-28 20:09:16,393 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-28 20:09:16,393 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day32\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-28 20:09:16,394 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-28 20:09:16,394 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-28 20:09:16,394 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000423926, 'leave_amount': 503553.68, 'mobile_phone': '15829266196', 'reg_name': '小柠檬', 'reg_time': '2021-04-28 20:09:15.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-28 20:09:16,404 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-28 20:09:16,432 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-28 20:09:16,432 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-28 20:09:16,432 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-28 20:09:16,434 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-28 20:09:16,469 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-28 20:09:16,469 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day32\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-28 20:09:16,470 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-28 20:09:16,470 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-28 20:09:16,470 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000423926, 'leave_amount': 503553.68, 'mobile_phone': '15829266196', 'reg_name': '小柠檬', 'reg_time': '2021-04-28 20:09:15.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-28 20:09:16,484 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-28 20:09:16,512 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-28 20:09:16,513 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-28 20:09:16,513 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-28 20:09:16,515 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-28 20:09:16,543 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-28 20:09:16,543 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-28 20:09:16,543 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-28 20:09:16,545 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-28 20:09:16,572 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-28 20:09:16,573 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-28 20:09:16,573 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-28 20:09:16,575 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-28 20:09:16,604 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-28 20:09:16,604 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-28 20:09:16,604 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-28 20:09:16,606 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-28 20:09:16,633 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-28 20:09:16,633 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-28 20:09:16,633 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-28 20:09:16,634 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-28 20:09:16,636 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-28 20:09:16,636 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-28 20:09:16,929 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-28 20:09:16,930 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-28 20:09:17,055 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-28 20:09:17,055 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-28 20:09:17,057 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-28 20:09:17,341 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-28 20:09:17,342 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-28 20:09:17,466 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-28 20:09:17,467 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-28 20:09:17,469 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-28 20:09:17,778 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-28 20:09:17,778 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-28 20:09:17,917 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-28 20:09:17,917 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-28 20:09:17,918 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-28 20:09:17,946 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-28 20:09:17,946 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-28 20:09:17,946 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-28 20:09:17,950 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-28 20:09:17,980 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-28 20:09:17,980 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-28 20:09:17,981 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-28 20:09:17,982 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-28 20:09:18,009 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-28 20:09:18,009 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-28 20:09:18,009 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-28 20:09:18,011 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-28 20:09:18,038 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-28 20:09:18,039 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-28 20:09:18,039 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-28 20:09:18,041 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-28 20:09:18,272 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-28 20:09:18,273 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-28 20:09:18,273 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-28 20:09:18,275 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-28 20:09:18,305 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-28 20:09:18,306 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-28 20:09:18,306 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-28 20:09:18,310 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-28 20:09:18,348 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-28 20:09:18,348 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-28 20:09:18,348 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-28 20:09:18,350 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-28 20:09:18,381 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-28 20:09:18,381 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-28 20:09:18,381 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-28 20:09:18,383 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-28 20:09:18,411 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-28 20:09:18,411 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-28 20:09:18,411 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-28 20:09:18,414 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-28 20:09:18,443 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-28 20:09:18,443 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-28 20:09:18,443 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-28 20:09:18,444 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-28 20:21:25,040 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-28 20:21:25,452 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-28 20:21:25,453 [test_audit.py-->line:31]:注册普通用户15825947552成功
INFO 2021-04-28 20:21:25,752 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-28 20:21:26,148 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-28 20:21:26,148 [test_audit.py-->line:47]:注册用户15821822378成功
INFO 2021-04-28 20:21:26,365 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-28 20:21:26,410 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 20:21:26,411 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 20:21:26,411 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-28 20:21:26,467 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-28 20:21:26,468 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-28 20:21:26,490 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-28 20:21:26,490 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-28 20:21:26,552 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 20:21:26,554 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 20:21:26,554 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-28 20:21:26,591 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-28 20:21:26,592 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-28 20:21:26,614 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-28 20:21:26,615 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-28 20:21:26,684 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 20:21:26,686 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 20:21:26,686 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-28 20:21:26,715 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-28 20:21:26,715 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-28 20:21:26,715 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-28 20:21:26,766 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 20:21:26,767 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 20:21:26,767 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-28 20:21:26,800 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-28 20:21:26,801 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day32\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-28 20:21:26,802 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-28 20:21:26,802 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-28 20:21:26,802 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-28 20:21:27,095 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 20:21:27,096 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 20:21:27,096 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-28 20:21:27,124 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-28 20:21:27,125 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-28 20:21:27,125 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-28 20:21:27,186 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 20:21:27,186 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 20:21:27,186 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-28 20:21:27,214 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-28 20:21:27,215 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-28 20:21:27,215 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-28 20:21:27,280 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 20:21:27,280 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 20:21:27,280 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-28 20:21:27,307 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-28 20:21:27,308 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-28 20:21:27,308 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-28 20:21:27,309 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-28 20:21:27,312 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-28 20:21:27,312 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-28 20:21:27,557 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-28 20:21:27,558 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-28 20:21:27,558 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-28 20:21:27,565 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-28 20:21:27,864 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-28 20:21:27,867 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-28 20:21:27,868 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-28 20:21:27,870 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-28 20:21:27,874 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-28 20:21:27,875 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-28 20:21:28,162 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-28 20:21:28,162 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-28 20:21:28,163 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-28 20:21:28,168 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-28 20:21:28,332 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-28 20:21:28,333 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-28 20:21:28,333 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-28 20:21:28,337 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-28 20:21:28,390 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-28 20:21:28,391 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-28 20:21:28,391 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-28 20:21:28,398 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-28 20:21:28,689 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-28 20:21:28,689 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-28 20:21:28,690 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-28 20:21:28,700 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-28 20:21:28,878 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-28 20:21:28,878 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-28 20:21:28,879 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-28 20:21:28,885 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-28 20:21:28,918 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-28 20:21:28,918 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-28 20:21:28,918 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-28 20:21:28,921 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-28 20:21:29,212 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-28 20:21:29,213 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-28 20:21:29,213 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-28 20:21:29,218 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-28 20:21:29,391 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-28 20:21:29,391 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-28 20:21:29,391 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-28 20:21:29,395 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-28 20:21:29,428 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-28 20:21:29,429 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-28 20:21:29,429 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-28 20:21:29,436 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-28 20:21:29,725 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-28 20:21:29,725 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-28 20:21:29,725 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-28 20:21:29,731 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-28 20:21:29,900 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-28 20:21:29,900 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-28 20:21:29,900 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-28 20:21:29,904 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-28 20:21:29,936 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-28 20:21:29,936 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-28 20:21:29,936 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-28 20:21:29,939 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-28 20:21:29,972 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-28 20:21:29,972 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-28 20:21:29,972 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-28 20:21:29,976 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-28 20:21:30,006 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-28 20:21:30,006 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-28 20:21:30,006 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-28 20:21:30,010 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-28 20:21:30,039 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-28 20:21:30,039 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-28 20:21:30,039 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-28 20:21:30,043 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-28 20:21:30,072 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-28 20:21:30,073 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day32\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-28 20:21:30,073 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-28 20:21:30,073 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-28 20:21:30,074 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-28 20:21:30,091 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-28 20:21:30,128 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-28 20:21:30,129 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-28 20:21:30,325 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-28 20:21:30,325 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-28 20:21:30,335 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-28 20:21:30,370 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-28 20:21:30,370 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-28 20:21:30,370 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-28 20:21:30,373 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-28 20:21:30,420 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-28 20:21:30,420 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-28 20:21:30,599 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-28 20:21:30,599 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-28 20:21:30,601 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-28 20:21:30,605 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-28 20:21:30,606 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-28 20:21:30,918 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-28 20:21:30,918 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-28 20:21:31,063 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-28 20:21:31,064 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-28 20:21:31,070 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-28 20:21:31,279 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-28 20:21:31,279 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-28 20:21:31,280 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-28 20:21:31,285 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-28 20:21:31,316 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-28 20:21:31,317 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-28 20:21:31,317 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-28 20:21:31,320 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-28 20:21:31,761 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-28 20:21:31,762 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-28 20:21:31,762 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-28 20:21:31,766 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-28 20:21:31,935 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-28 20:21:31,935 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-28 20:21:31,935 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-28 20:21:31,938 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-28 20:21:31,969 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-28 20:21:31,971 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-28 20:21:31,971 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-28 20:21:31,980 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-28 20:21:32,291 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-28 20:21:32,291 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-28 20:21:32,291 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-28 20:21:32,295 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-28 20:21:32,464 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-28 20:21:32,465 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-28 20:21:32,465 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-28 20:21:32,469 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-28 20:21:32,503 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-28 20:21:32,504 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-28 20:21:32,504 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-28 20:21:32,507 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-28 20:21:32,545 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-28 20:21:32,545 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-28 20:21:32,545 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-28 20:21:32,548 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-28 20:21:32,553 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-28 20:21:32,554 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-28 20:21:32,839 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-28 20:21:32,839 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-28 20:21:32,839 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-28 20:21:32,842 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-28 20:21:33,011 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-28 20:21:33,011 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-28 20:21:33,011 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-28 20:21:33,015 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-28 20:21:33,048 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-28 20:21:33,049 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-28 20:21:33,049 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-28 20:21:33,057 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-28 20:21:33,344 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-28 20:21:33,344 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-28 20:21:33,465 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-28 20:21:33,465 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-28 20:21:33,469 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-28 20:21:33,637 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-28 20:21:33,637 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-28 20:21:33,637 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-28 20:21:33,642 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-28 20:21:33,675 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-28 20:21:33,675 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-28 20:21:33,675 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-28 20:21:33,677 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-28 20:21:33,681 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-28 20:21:34,007 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-28 20:21:34,008 [test_recharge.py-->line:33]:注册用户15848994342成功
INFO 2021-04-28 20:21:34,195 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-28 20:21:34,197 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-28 20:21:34,231 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-28 20:21:34,231 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-28 20:21:34,253 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-28 20:21:34,253 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-28 20:21:34,257 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-28 20:21:34,290 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-28 20:21:34,290 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-28 20:21:34,312 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-28 20:21:34,312 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-28 20:21:34,316 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-28 20:21:34,348 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-28 20:21:34,349 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-28 20:21:34,371 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-28 20:21:34,372 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-28 20:21:34,377 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-28 20:21:34,409 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-28 20:21:34,410 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-28 20:21:34,435 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-28 20:21:34,435 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-28 20:21:34,441 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-28 20:21:34,470 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-28 20:21:34,470 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-28 20:21:34,470 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-28 20:21:34,475 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-28 20:21:34,502 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-28 20:21:34,502 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-28 20:21:34,503 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-28 20:21:34,506 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-28 20:21:34,540 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-28 20:21:34,540 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day32\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-28 20:21:34,540 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-28 20:21:34,541 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-28 20:21:34,541 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000424049, 'leave_amount': 503553.68, 'mobile_phone': '15848994342', 'reg_name': '小柠檬', 'reg_time': '2021-04-28 20:21:33.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-28 20:21:34,560 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-28 20:21:34,589 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-28 20:21:34,589 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-28 20:21:34,590 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-28 20:21:34,592 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-28 20:21:34,624 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-28 20:21:34,624 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day32\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-28 20:21:34,625 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-28 20:21:34,625 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-28 20:21:34,625 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000424049, 'leave_amount': 503553.68, 'mobile_phone': '15848994342', 'reg_name': '小柠檬', 'reg_time': '2021-04-28 20:21:33.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-28 20:21:34,675 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-28 20:21:34,703 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-28 20:21:34,705 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-28 20:21:34,705 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-28 20:21:34,708 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-28 20:21:34,736 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-28 20:21:34,736 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-28 20:21:34,736 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-28 20:21:34,744 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-28 20:21:34,773 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-28 20:21:34,773 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-28 20:21:34,773 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-28 20:21:34,776 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-28 20:21:34,804 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-28 20:21:34,804 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-28 20:21:34,804 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-28 20:21:34,807 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-28 20:21:34,836 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-28 20:21:34,836 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-28 20:21:34,837 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-28 20:21:34,838 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-28 20:21:34,843 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-28 20:21:34,843 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-28 20:21:35,148 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-28 20:21:35,148 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-28 20:21:35,271 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-28 20:21:35,271 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-28 20:21:35,279 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-28 20:21:35,565 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-28 20:21:35,565 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-28 20:21:35,686 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-28 20:21:35,686 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-28 20:21:35,690 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-28 20:21:35,983 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-28 20:21:35,984 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-28 20:21:36,168 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-28 20:21:36,169 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-28 20:21:36,176 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-28 20:21:36,205 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-28 20:21:36,206 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-28 20:21:36,206 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-28 20:21:36,209 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-28 20:21:36,237 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-28 20:21:36,237 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-28 20:21:36,237 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-28 20:21:36,240 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-28 20:21:36,268 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-28 20:21:36,268 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-28 20:21:36,268 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-28 20:21:36,272 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-28 20:21:36,301 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-28 20:21:36,301 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-28 20:21:36,301 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-28 20:21:36,305 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-28 20:21:36,465 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-28 20:21:36,466 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-28 20:21:36,466 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-28 20:21:36,470 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-28 20:21:36,498 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-28 20:21:36,498 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-28 20:21:36,499 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-28 20:21:36,503 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-28 20:21:36,531 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-28 20:21:36,531 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-28 20:21:36,531 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-28 20:21:36,535 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-28 20:21:36,562 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-28 20:21:36,562 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-28 20:21:36,563 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-28 20:21:36,567 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-28 20:21:36,596 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-28 20:21:36,596 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-28 20:21:36,596 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-28 20:21:36,600 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-28 20:21:36,627 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-28 20:21:36,627 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-28 20:21:36,627 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-28 20:21:36,628 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-28 21:09:09,406 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-28 21:09:10,305 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-28 21:09:10,305 [test_audit.py-->line:31]:注册普通用户15857521346成功
INFO 2021-04-28 21:09:10,593 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-28 21:09:10,919 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-28 21:09:10,919 [test_audit.py-->line:47]:注册用户15816960822成功
INFO 2021-04-28 21:09:11,114 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-28 21:09:11,165 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 21:09:11,166 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 21:09:11,166 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-28 21:09:11,226 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-28 21:09:11,226 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-28 21:09:11,250 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-28 21:09:11,250 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-28 21:09:11,298 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 21:09:11,299 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 21:09:11,299 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-28 21:09:11,330 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-28 21:09:11,330 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-28 21:09:11,353 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-28 21:09:11,354 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-28 21:09:11,408 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 21:09:11,408 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 21:09:11,408 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-28 21:09:11,437 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-28 21:09:11,437 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-28 21:09:11,438 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-28 21:09:11,486 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 21:09:11,487 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 21:09:11,488 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-28 21:09:11,520 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-28 21:09:11,521 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day32\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-28 21:09:11,525 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-28 21:09:11,525 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-28 21:09:11,525 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-28 21:09:11,831 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 21:09:11,832 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 21:09:11,832 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-28 21:09:11,866 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-28 21:09:11,866 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-28 21:09:11,866 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-28 21:09:11,921 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 21:09:11,923 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 21:09:11,924 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-28 21:09:11,952 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-28 21:09:11,953 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-28 21:09:11,953 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-28 21:09:12,006 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 21:09:12,008 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 21:09:12,008 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-28 21:09:12,037 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-28 21:09:12,038 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-28 21:09:12,038 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-28 21:09:12,040 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-28 21:09:12,045 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-28 21:09:12,046 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-28 21:09:12,274 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-28 21:09:12,275 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-28 21:09:12,276 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-28 21:09:12,297 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-28 21:09:12,592 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-28 21:09:12,594 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-28 21:09:12,594 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-28 21:09:12,595 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-28 21:09:12,598 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-28 21:09:12,599 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-28 21:09:12,906 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-28 21:09:12,907 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-28 21:09:12,908 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-28 21:09:12,913 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-28 21:09:13,088 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-28 21:09:13,088 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-28 21:09:13,089 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-28 21:09:13,093 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-28 21:09:13,180 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-28 21:09:13,181 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-28 21:09:13,181 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-28 21:09:13,192 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-28 21:09:13,554 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-28 21:09:13,556 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-28 21:09:13,557 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-28 21:09:13,573 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-28 21:09:13,750 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-28 21:09:13,750 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-28 21:09:13,751 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-28 21:09:13,760 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-28 21:09:13,800 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-28 21:09:13,801 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-28 21:09:13,801 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-28 21:09:13,807 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-28 21:09:14,097 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-28 21:09:14,098 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-28 21:09:14,098 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-28 21:09:14,108 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-28 21:09:14,289 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-28 21:09:14,290 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-28 21:09:14,291 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-28 21:09:14,304 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-28 21:09:14,341 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-28 21:09:14,342 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-28 21:09:14,342 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-28 21:09:14,345 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-28 21:09:14,642 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-28 21:09:14,643 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-28 21:09:14,644 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-28 21:09:14,661 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-28 21:09:14,834 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-28 21:09:14,834 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-28 21:09:14,836 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-28 21:09:14,845 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-28 21:09:14,877 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-28 21:09:14,877 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-28 21:09:14,877 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-28 21:09:14,882 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-28 21:09:14,914 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-28 21:09:14,915 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-28 21:09:14,915 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-28 21:09:14,933 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-28 21:09:14,972 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-28 21:09:14,973 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-28 21:09:14,973 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-28 21:09:14,982 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-28 21:09:15,012 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-28 21:09:15,013 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-28 21:09:15,013 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-28 21:09:15,022 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-28 21:09:15,057 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-28 21:09:15,058 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day32\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-28 21:09:15,059 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-28 21:09:15,060 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-28 21:09:15,060 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-28 21:09:15,076 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-28 21:09:15,113 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-28 21:09:15,113 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-28 21:09:15,266 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-28 21:09:15,267 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-28 21:09:15,283 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-28 21:09:15,324 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-28 21:09:15,324 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-28 21:09:15,324 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-28 21:09:15,328 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-28 21:09:15,376 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-28 21:09:15,377 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-28 21:09:15,565 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-28 21:09:15,565 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-28 21:09:15,569 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-28 21:09:15,580 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-28 21:09:15,583 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-28 21:09:15,956 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-28 21:09:15,956 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-28 21:09:16,111 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-28 21:09:16,112 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-28 21:09:16,115 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-28 21:09:16,281 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-28 21:09:16,282 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-28 21:09:16,282 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-28 21:09:16,294 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-28 21:09:16,327 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-28 21:09:16,328 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-28 21:09:16,328 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-28 21:09:16,337 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-28 21:09:16,658 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-28 21:09:16,658 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-28 21:09:16,658 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-28 21:09:16,663 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-28 21:09:16,829 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-28 21:09:16,830 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-28 21:09:16,831 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-28 21:09:16,839 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-28 21:09:16,872 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-28 21:09:16,872 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-28 21:09:16,872 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-28 21:09:16,876 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-28 21:09:17,172 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-28 21:09:17,172 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-28 21:09:17,172 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-28 21:09:17,175 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-28 21:09:17,360 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-28 21:09:17,362 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-28 21:09:17,362 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-28 21:09:17,368 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-28 21:09:17,402 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-28 21:09:17,402 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-28 21:09:17,402 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-28 21:09:17,407 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-28 21:09:17,445 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-28 21:09:17,445 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-28 21:09:17,445 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-28 21:09:17,446 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-28 21:09:17,450 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-28 21:09:17,452 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-28 21:09:17,769 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-28 21:09:17,769 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-28 21:09:17,769 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-28 21:09:17,773 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-28 21:09:17,946 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-28 21:09:17,947 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-28 21:09:17,947 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-28 21:09:17,953 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-28 21:09:17,988 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-28 21:09:17,988 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-28 21:09:17,988 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-28 21:09:17,991 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-28 21:09:18,287 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-28 21:09:18,288 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-28 21:09:18,439 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-28 21:09:18,439 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-28 21:09:18,442 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-28 21:09:18,628 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-28 21:09:18,628 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-28 21:09:18,628 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-28 21:09:18,631 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-28 21:09:18,663 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-28 21:09:18,664 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-28 21:09:18,664 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-28 21:09:18,665 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-28 21:09:18,672 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-28 21:09:18,985 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-28 21:09:18,985 [test_recharge.py-->line:33]:注册用户15828341593成功
INFO 2021-04-28 21:09:19,176 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-28 21:09:19,176 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-28 21:09:19,212 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-28 21:09:19,213 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-28 21:09:19,235 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-28 21:09:19,236 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-28 21:09:19,240 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-28 21:09:19,272 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-28 21:09:19,272 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-28 21:09:19,297 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-28 21:09:19,297 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-28 21:09:19,303 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-28 21:09:19,338 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-28 21:09:19,338 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-28 21:09:19,362 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-28 21:09:19,363 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-28 21:09:19,375 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-28 21:09:19,411 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-28 21:09:19,411 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-28 21:09:19,435 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-28 21:09:19,435 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-28 21:09:19,438 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-28 21:09:19,467 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-28 21:09:19,467 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-28 21:09:19,468 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-28 21:09:19,474 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-28 21:09:19,503 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-28 21:09:19,503 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-28 21:09:19,503 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-28 21:09:19,509 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-28 21:09:19,544 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-28 21:09:19,545 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day32\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-28 21:09:19,547 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-28 21:09:19,548 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-28 21:09:19,548 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000424527, 'leave_amount': 503553.68, 'mobile_phone': '15828341593', 'reg_name': '小柠檬', 'reg_time': '2021-04-28 21:09:18.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-28 21:09:19,591 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-28 21:09:19,622 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-28 21:09:19,623 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-28 21:09:19,623 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-28 21:09:19,632 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-28 21:09:19,669 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-28 21:09:19,670 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day32\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-28 21:09:19,671 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-28 21:09:19,671 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-28 21:09:19,672 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000424527, 'leave_amount': 503553.68, 'mobile_phone': '15828341593', 'reg_name': '小柠檬', 'reg_time': '2021-04-28 21:09:18.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-28 21:09:19,714 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-28 21:09:19,746 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-28 21:09:19,747 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-28 21:09:19,747 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-28 21:09:19,758 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-28 21:09:19,786 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-28 21:09:19,787 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-28 21:09:19,787 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-28 21:09:19,790 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-28 21:09:19,818 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-28 21:09:19,819 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-28 21:09:19,819 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-28 21:09:19,823 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-28 21:09:19,853 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-28 21:09:19,854 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-28 21:09:19,854 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-28 21:09:19,860 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-28 21:09:19,891 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-28 21:09:19,891 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-28 21:09:19,891 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-28 21:09:19,892 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-28 21:09:19,896 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-28 21:09:19,897 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-28 21:09:20,190 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-28 21:09:20,190 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-28 21:09:20,314 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-28 21:09:20,314 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-28 21:09:20,322 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-28 21:09:20,608 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-28 21:09:20,608 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-28 21:09:20,728 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-28 21:09:20,728 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-28 21:09:20,736 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-28 21:09:21,026 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-28 21:09:21,031 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-28 21:09:21,151 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-28 21:09:21,152 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-28 21:09:21,156 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-28 21:09:21,185 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-28 21:09:21,186 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-28 21:09:21,186 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-28 21:09:21,193 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-28 21:09:21,222 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-28 21:09:21,223 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-28 21:09:21,223 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-28 21:09:21,227 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-28 21:09:21,254 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-28 21:09:21,254 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-28 21:09:21,254 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-28 21:09:21,258 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-28 21:09:21,286 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-28 21:09:21,286 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-28 21:09:21,286 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-28 21:09:21,291 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-28 21:09:21,453 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-28 21:09:21,453 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-28 21:09:21,453 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-28 21:09:21,456 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-28 21:09:21,485 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-28 21:09:21,486 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-28 21:09:21,486 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-28 21:09:21,492 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-28 21:09:21,521 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-28 21:09:21,521 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-28 21:09:21,521 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-28 21:09:21,524 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-28 21:09:21,555 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-28 21:09:21,555 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-28 21:09:21,555 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-28 21:09:21,560 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-28 21:09:21,589 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-28 21:09:21,589 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-28 21:09:21,589 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-28 21:09:21,593 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-28 21:09:21,621 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-28 21:09:21,621 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-28 21:09:21,621 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-28 21:09:21,622 [base_case.py-->line:35]:**********注册接口测试结束**********
INFO 2021-04-28 21:58:05,156 [test_audit.py-->line:23]:=========添加项目接口开始测试==========
INFO 2021-04-28 21:58:05,466 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-28 21:58:05,466 [test_audit.py-->line:31]:注册普通用户15896166867成功
INFO 2021-04-28 21:58:05,642 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-28 21:58:05,943 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-28 21:58:05,943 [test_audit.py-->line:47]:注册用户15815517579成功
INFO 2021-04-28 21:58:06,148 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-28 21:58:06,206 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 21:58:06,206 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 21:58:06,206 [base_case.py-->line:39]:用例【审核成功-通过】开始测试>>>>>>>
INFO 2021-04-28 21:58:06,248 [base_case.py-->line:118]:用例【审核成功-通过】状态码断言成功！
INFO 2021-04-28 21:58:06,248 [base_case.py-->line:140]:用例【审核成功-通过】请求json结果断言成功！
INFO 2021-04-28 21:58:06,264 [base_case.py-->line:157]:用例【审核成功-通过】数据库断言成功
INFO 2021-04-28 21:58:06,264 [base_case.py-->line:53]:用例【审核成功-通过】测试结束<<<<<<<<
INFO 2021-04-28 21:58:06,317 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 21:58:06,317 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 21:58:06,317 [base_case.py-->line:39]:用例【审核成功-不通过】开始测试>>>>>>>
INFO 2021-04-28 21:58:06,340 [base_case.py-->line:118]:用例【审核成功-不通过】状态码断言成功！
INFO 2021-04-28 21:58:06,340 [base_case.py-->line:140]:用例【审核成功-不通过】请求json结果断言成功！
INFO 2021-04-28 21:58:06,356 [base_case.py-->line:157]:用例【审核成功-不通过】数据库断言成功
INFO 2021-04-28 21:58:06,356 [base_case.py-->line:53]:用例【审核成功-不通过】测试结束<<<<<<<<
INFO 2021-04-28 21:58:06,403 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 21:58:06,404 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 21:58:06,405 [base_case.py-->line:39]:用例【项目id为空】开始测试>>>>>>>
INFO 2021-04-28 21:58:06,428 [base_case.py-->line:118]:用例【项目id为空】状态码断言成功！
INFO 2021-04-28 21:58:06,428 [base_case.py-->line:140]:用例【项目id为空】请求json结果断言成功！
INFO 2021-04-28 21:58:06,428 [base_case.py-->line:53]:用例【项目id为空】测试结束<<<<<<<<
INFO 2021-04-28 21:58:06,485 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 21:58:06,486 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 21:58:06,486 [base_case.py-->line:39]:用例【项目id不是整数】开始测试>>>>>>>
INFO 2021-04-28 21:58:06,508 [base_case.py-->line:118]:用例【项目id不是整数】状态码断言成功！
ERROR 2021-04-28 21:58:06,509 [base_case.py-->line:134]:用例【项目id不是整数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day32\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数值参数格式不正确'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数值参数格式不正确'}
?          ^          ^^^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-28 21:58:06,511 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数值参数格式不正确'}
DEBUG 2021-04-28 21:58:06,511 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-28 21:58:06,511 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-28 21:58:06,782 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 21:58:06,782 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 21:58:06,782 [base_case.py-->line:39]:用例【不存在的项目id】开始测试>>>>>>>
INFO 2021-04-28 21:58:06,804 [base_case.py-->line:118]:用例【不存在的项目id】状态码断言成功！
INFO 2021-04-28 21:58:06,804 [base_case.py-->line:140]:用例【不存在的项目id】请求json结果断言成功！
INFO 2021-04-28 21:58:06,804 [base_case.py-->line:53]:用例【不存在的项目id】测试结束<<<<<<<<
INFO 2021-04-28 21:58:06,848 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 21:58:06,849 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 21:58:06,849 [base_case.py-->line:39]:用例【审核状态不是布尔值】开始测试>>>>>>>
INFO 2021-04-28 21:58:06,871 [base_case.py-->line:118]:用例【审核状态不是布尔值】状态码断言成功！
INFO 2021-04-28 21:58:06,873 [base_case.py-->line:140]:用例【审核状态不是布尔值】请求json结果断言成功！
INFO 2021-04-28 21:58:06,873 [base_case.py-->line:53]:用例【审核状态不是布尔值】测试结束<<<<<<<<
INFO 2021-04-28 21:58:06,921 [fixture.py-->line:96]:创建项目成功
INFO 2021-04-28 21:58:06,922 [test_audit.py-->line:64]:添加项目成功！
INFO 2021-04-28 21:58:06,922 [base_case.py-->line:39]:用例【审核状态不存在】开始测试>>>>>>>
INFO 2021-04-28 21:58:06,943 [base_case.py-->line:118]:用例【审核状态不存在】状态码断言成功！
INFO 2021-04-28 21:58:06,943 [base_case.py-->line:140]:用例【审核状态不存在】请求json结果断言成功！
INFO 2021-04-28 21:58:06,943 [base_case.py-->line:53]:用例【审核状态不存在】测试结束<<<<<<<<
INFO 2021-04-28 21:58:06,944 [base_case.py-->line:35]:**********审核接口测试结束**********
INFO 2021-04-28 21:58:06,948 [base_case.py-->line:31]:=========课堂派业务流接口开始测试==========
INFO 2021-04-28 21:58:06,949 [base_case.py-->line:39]:用例【课堂派登录】开始测试>>>>>>>
INFO 2021-04-28 21:58:07,254 [base_case.py-->line:118]:用例【课堂派登录】状态码断言成功！
INFO 2021-04-28 21:58:07,255 [test_course_flow.py-->line:54]:用例【课堂派登录】请求json结果断言成功！
INFO 2021-04-28 21:58:07,255 [base_case.py-->line:53]:用例【课堂派登录】测试结束<<<<<<<<
INFO 2021-04-28 21:58:07,260 [base_case.py-->line:39]:用例【获取所有课程信息】开始测试>>>>>>>
INFO 2021-04-28 21:58:07,598 [base_case.py-->line:118]:用例【获取所有课程信息】状态码断言成功！
INFO 2021-04-28 21:58:07,599 [test_course_flow.py-->line:54]:用例【获取所有课程信息】请求json结果断言成功！
INFO 2021-04-28 21:58:07,599 [base_case.py-->line:53]:用例【获取所有课程信息】测试结束<<<<<<<<
INFO 2021-04-28 21:58:07,600 [base_case.py-->line:35]:**********课堂派业务流接口测试结束**********
INFO 2021-04-28 21:58:07,607 [base_case.py-->line:31]:=========投资接口开始测试==========
INFO 2021-04-28 21:58:07,608 [base_case.py-->line:39]:用例【前置条件-注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-28 21:58:07,886 [base_case.py-->line:118]:用例【前置条件-注册普通融资用户】状态码断言成功！
INFO 2021-04-28 21:58:07,887 [base_case.py-->line:140]:用例【前置条件-注册普通融资用户】请求json结果断言成功！
INFO 2021-04-28 21:58:07,888 [base_case.py-->line:53]:用例【前置条件-注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-28 21:58:07,893 [base_case.py-->line:39]:用例【前置条件-登陆普通融资用户】开始测试>>>>>>>
INFO 2021-04-28 21:58:08,056 [base_case.py-->line:118]:用例【前置条件-登陆普通融资用户】状态码断言成功！
INFO 2021-04-28 21:58:08,056 [base_case.py-->line:140]:用例【前置条件-登陆普通融资用户】请求json结果断言成功！
INFO 2021-04-28 21:58:08,057 [base_case.py-->line:53]:用例【前置条件-登陆普通融资用户】测试结束<<<<<<<<
INFO 2021-04-28 21:58:08,062 [base_case.py-->line:39]:用例【前置条件-创建项目】开始测试>>>>>>>
INFO 2021-04-28 21:58:08,116 [base_case.py-->line:118]:用例【前置条件-创建项目】状态码断言成功！
INFO 2021-04-28 21:58:08,116 [base_case.py-->line:140]:用例【前置条件-创建项目】请求json结果断言成功！
INFO 2021-04-28 21:58:08,116 [base_case.py-->line:53]:用例【前置条件-创建项目】测试结束<<<<<<<<
INFO 2021-04-28 21:58:08,120 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户1】开始测试>>>>>>>
INFO 2021-04-28 21:58:08,401 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户1】状态码断言成功！
INFO 2021-04-28 21:58:08,402 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户1】请求json结果断言成功！
INFO 2021-04-28 21:58:08,402 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-28 21:58:08,410 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户1】开始测试>>>>>>>
INFO 2021-04-28 21:58:08,586 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户1】状态码断言成功！
INFO 2021-04-28 21:58:08,586 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户1】请求json结果断言成功！
INFO 2021-04-28 21:58:08,587 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户1】测试结束<<<<<<<<
INFO 2021-04-28 21:58:08,590 [base_case.py-->line:39]:用例【前置条件-投资普通用户1充值】开始测试>>>>>>>
INFO 2021-04-28 21:58:08,748 [base_case.py-->line:118]:用例【前置条件-投资普通用户1充值】状态码断言成功！
INFO 2021-04-28 21:58:08,748 [base_case.py-->line:140]:用例【前置条件-投资普通用户1充值】请求json结果断言成功！
INFO 2021-04-28 21:58:08,748 [base_case.py-->line:53]:用例【前置条件-投资普通用户1充值】测试结束<<<<<<<<
INFO 2021-04-28 21:58:08,752 [base_case.py-->line:39]:用例【前置条件-注册投资普通用户2】开始测试>>>>>>>
INFO 2021-04-28 21:58:09,048 [base_case.py-->line:118]:用例【前置条件-注册投资普通用户2】状态码断言成功！
INFO 2021-04-28 21:58:09,048 [base_case.py-->line:140]:用例【前置条件-注册投资普通用户2】请求json结果断言成功！
INFO 2021-04-28 21:58:09,048 [base_case.py-->line:53]:用例【前置条件-注册投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-28 21:58:09,053 [base_case.py-->line:39]:用例【前置条件-登录投资普通用户2】开始测试>>>>>>>
INFO 2021-04-28 21:58:09,247 [base_case.py-->line:118]:用例【前置条件-登录投资普通用户2】状态码断言成功！
INFO 2021-04-28 21:58:09,247 [base_case.py-->line:140]:用例【前置条件-登录投资普通用户2】请求json结果断言成功！
INFO 2021-04-28 21:58:09,247 [base_case.py-->line:53]:用例【前置条件-登录投资普通用户2】测试结束<<<<<<<<
INFO 2021-04-28 21:58:09,252 [base_case.py-->line:39]:用例【前置条件-投资普通用户2充值】开始测试>>>>>>>
INFO 2021-04-28 21:58:09,279 [base_case.py-->line:118]:用例【前置条件-投资普通用户2充值】状态码断言成功！
INFO 2021-04-28 21:58:09,279 [base_case.py-->line:140]:用例【前置条件-投资普通用户2充值】请求json结果断言成功！
INFO 2021-04-28 21:58:09,279 [base_case.py-->line:53]:用例【前置条件-投资普通用户2充值】测试结束<<<<<<<<
INFO 2021-04-28 21:58:09,283 [base_case.py-->line:39]:用例【前置条件-注册管理员用户】开始测试>>>>>>>
INFO 2021-04-28 21:58:09,568 [base_case.py-->line:118]:用例【前置条件-注册管理员用户】状态码断言成功！
INFO 2021-04-28 21:58:09,568 [base_case.py-->line:140]:用例【前置条件-注册管理员用户】请求json结果断言成功！
INFO 2021-04-28 21:58:09,569 [base_case.py-->line:53]:用例【前置条件-注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-28 21:58:09,574 [base_case.py-->line:39]:用例【前置条件-登陆管理员用户】开始测试>>>>>>>
INFO 2021-04-28 21:58:09,821 [base_case.py-->line:118]:用例【前置条件-登陆管理员用户】状态码断言成功！
INFO 2021-04-28 21:58:09,821 [base_case.py-->line:140]:用例【前置条件-登陆管理员用户】请求json结果断言成功！
INFO 2021-04-28 21:58:09,822 [base_case.py-->line:53]:用例【前置条件-登陆管理员用户】测试结束<<<<<<<<
INFO 2021-04-28 21:58:09,827 [base_case.py-->line:39]:用例【投资项目不是竞标中状态】开始测试>>>>>>>
INFO 2021-04-28 21:58:09,854 [base_case.py-->line:118]:用例【投资项目不是竞标中状态】状态码断言成功！
INFO 2021-04-28 21:58:09,854 [base_case.py-->line:140]:用例【投资项目不是竞标中状态】请求json结果断言成功！
INFO 2021-04-28 21:58:09,854 [base_case.py-->line:53]:用例【投资项目不是竞标中状态】测试结束<<<<<<<<
INFO 2021-04-28 21:58:09,861 [base_case.py-->line:39]:用例【前置条件-审核项目】开始测试>>>>>>>
INFO 2021-04-28 21:58:09,883 [base_case.py-->line:118]:用例【前置条件-审核项目】状态码断言成功！
INFO 2021-04-28 21:58:09,883 [base_case.py-->line:140]:用例【前置条件-审核项目】请求json结果断言成功！
INFO 2021-04-28 21:58:09,884 [base_case.py-->line:53]:用例【前置条件-审核项目】测试结束<<<<<<<<
INFO 2021-04-28 21:58:09,888 [base_case.py-->line:39]:用例【用户id为空】开始测试>>>>>>>
INFO 2021-04-28 21:58:09,911 [base_case.py-->line:118]:用例【用户id为空】状态码断言成功！
INFO 2021-04-28 21:58:09,912 [base_case.py-->line:140]:用例【用户id为空】请求json结果断言成功！
INFO 2021-04-28 21:58:09,912 [base_case.py-->line:53]:用例【用户id为空】测试结束<<<<<<<<
INFO 2021-04-28 21:58:09,915 [base_case.py-->line:39]:用例【投资金额为空】开始测试>>>>>>>
INFO 2021-04-28 21:58:09,937 [base_case.py-->line:118]:用例【投资金额为空】状态码断言成功！
INFO 2021-04-28 21:58:09,937 [base_case.py-->line:140]:用例【投资金额为空】请求json结果断言成功！
INFO 2021-04-28 21:58:09,938 [base_case.py-->line:53]:用例【投资金额为空】测试结束<<<<<<<<
INFO 2021-04-28 21:58:09,941 [base_case.py-->line:39]:用例【投资金额为不能被100整除的数】开始测试>>>>>>>
INFO 2021-04-28 21:58:09,972 [base_case.py-->line:118]:用例【投资金额为不能被100整除的数】状态码断言成功！
ERROR 2021-04-28 21:58:09,972 [base_case.py-->line:134]:用例【投资金额为不能被100整除的数】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day32\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'} != {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
- {'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
?                     ^^

+ {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
?                     ^^

DEBUG 2021-04-28 21:58:09,973 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '投资金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-28 21:58:09,973 [base_case.py-->line:136]:实际结果: {'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除'}
DEBUG 2021-04-28 21:58:09,973 [base_case.py-->line:137]:响应结果：{'code': 2, 'msg': '充值金额必须大于100，并且可以被100整除', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-28 21:58:09,989 [base_case.py-->line:39]:用例【投资成功】开始测试>>>>>>>
INFO 2021-04-28 21:58:10,019 [base_case.py-->line:118]:用例【投资成功】状态码断言成功！
INFO 2021-04-28 21:58:10,020 [base_case.py-->line:140]:用例【投资成功】请求json结果断言成功！
INFO 2021-04-28 21:58:10,148 [test_invest.py-->line:64]:用例【投资成功】数据库断言成功
INFO 2021-04-28 21:58:10,149 [base_case.py-->line:53]:用例【投资成功】测试结束<<<<<<<<
INFO 2021-04-28 21:58:10,155 [base_case.py-->line:39]:用例【投资金额大于项目剩余可投金额】开始测试>>>>>>>
INFO 2021-04-28 21:58:10,181 [base_case.py-->line:118]:用例【投资金额大于项目剩余可投金额】状态码断言成功！
INFO 2021-04-28 21:58:10,182 [base_case.py-->line:140]:用例【投资金额大于项目剩余可投金额】请求json结果断言成功！
INFO 2021-04-28 21:58:10,182 [base_case.py-->line:53]:用例【投资金额大于项目剩余可投金额】测试结束<<<<<<<<
INFO 2021-04-28 21:58:10,185 [base_case.py-->line:39]:用例【投资成功并满标】开始测试>>>>>>>
INFO 2021-04-28 21:58:10,227 [base_case.py-->line:118]:用例【投资成功并满标】状态码断言成功！
INFO 2021-04-28 21:58:10,227 [base_case.py-->line:140]:用例【投资成功并满标】请求json结果断言成功！
INFO 2021-04-28 21:58:10,383 [test_invest.py-->line:64]:用例【投资成功并满标】数据库断言成功
INFO 2021-04-28 21:58:10,383 [base_case.py-->line:53]:用例【投资成功并满标】测试结束<<<<<<<<
INFO 2021-04-28 21:58:10,384 [base_case.py-->line:35]:**********投资接口测试结束**********
INFO 2021-04-28 21:58:10,391 [base_case.py-->line:31]:=========投资业务流接口开始测试==========
INFO 2021-04-28 21:58:10,392 [base_case.py-->line:39]:用例【注册普通融资用户】开始测试>>>>>>>
INFO 2021-04-28 21:58:10,697 [base_case.py-->line:118]:用例【注册普通融资用户】状态码断言成功！
INFO 2021-04-28 21:58:10,697 [base_case.py-->line:140]:用例【注册普通融资用户】请求json结果断言成功！
INFO 2021-04-28 21:58:10,812 [base_case.py-->line:157]:用例【注册普通融资用户】数据库断言成功
INFO 2021-04-28 21:58:10,812 [base_case.py-->line:53]:用例【注册普通融资用户】测试结束<<<<<<<<
INFO 2021-04-28 21:58:10,815 [base_case.py-->line:39]:用例【登录普通融资用户】开始测试>>>>>>>
INFO 2021-04-28 21:58:10,978 [base_case.py-->line:118]:用例【登录普通融资用户】状态码断言成功！
INFO 2021-04-28 21:58:10,979 [base_case.py-->line:140]:用例【登录普通融资用户】请求json结果断言成功！
INFO 2021-04-28 21:58:10,980 [base_case.py-->line:53]:用例【登录普通融资用户】测试结束<<<<<<<<
INFO 2021-04-28 21:58:10,988 [base_case.py-->line:39]:用例【创建项目】开始测试>>>>>>>
INFO 2021-04-28 21:58:11,012 [base_case.py-->line:118]:用例【创建项目】状态码断言成功！
INFO 2021-04-28 21:58:11,012 [base_case.py-->line:140]:用例【创建项目】请求json结果断言成功！
INFO 2021-04-28 21:58:11,013 [base_case.py-->line:53]:用例【创建项目】测试结束<<<<<<<<
INFO 2021-04-28 21:58:11,017 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-28 21:58:11,295 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-28 21:58:11,295 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-28 21:58:11,295 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-28 21:58:11,299 [base_case.py-->line:39]:用例【登录管理员用户】开始测试>>>>>>>
INFO 2021-04-28 21:58:11,458 [base_case.py-->line:118]:用例【登录管理员用户】状态码断言成功！
INFO 2021-04-28 21:58:11,458 [base_case.py-->line:140]:用例【登录管理员用户】请求json结果断言成功！
INFO 2021-04-28 21:58:11,459 [base_case.py-->line:53]:用例【登录管理员用户】测试结束<<<<<<<<
INFO 2021-04-28 21:58:11,462 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-28 21:58:11,485 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-28 21:58:11,485 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-28 21:58:11,485 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-28 21:58:11,489 [base_case.py-->line:39]:用例【注册普通投资用户】开始测试>>>>>>>
INFO 2021-04-28 21:58:11,780 [base_case.py-->line:118]:用例【注册普通投资用户】状态码断言成功！
INFO 2021-04-28 21:58:11,781 [base_case.py-->line:140]:用例【注册普通投资用户】请求json结果断言成功！
INFO 2021-04-28 21:58:11,781 [base_case.py-->line:53]:用例【注册普通投资用户】测试结束<<<<<<<<
INFO 2021-04-28 21:58:11,793 [base_case.py-->line:39]:用例【登录普通投资用户】开始测试>>>>>>>
INFO 2021-04-28 21:58:11,951 [base_case.py-->line:118]:用例【登录普通投资用户】状态码断言成功！
INFO 2021-04-28 21:58:11,951 [base_case.py-->line:140]:用例【登录普通投资用户】请求json结果断言成功！
INFO 2021-04-28 21:58:11,952 [base_case.py-->line:53]:用例【登录普通投资用户】测试结束<<<<<<<<
INFO 2021-04-28 21:58:11,956 [base_case.py-->line:39]:用例【充值】开始测试>>>>>>>
INFO 2021-04-28 21:58:11,983 [base_case.py-->line:118]:用例【充值】状态码断言成功！
INFO 2021-04-28 21:58:11,983 [base_case.py-->line:140]:用例【充值】请求json结果断言成功！
INFO 2021-04-28 21:58:11,983 [base_case.py-->line:53]:用例【充值】测试结束<<<<<<<<
INFO 2021-04-28 21:58:11,987 [base_case.py-->line:39]:用例【投资项目】开始测试>>>>>>>
INFO 2021-04-28 21:58:12,018 [base_case.py-->line:118]:用例【投资项目】状态码断言成功！
INFO 2021-04-28 21:58:12,019 [base_case.py-->line:140]:用例【投资项目】请求json结果断言成功！
INFO 2021-04-28 21:58:12,019 [base_case.py-->line:53]:用例【投资项目】测试结束<<<<<<<<
INFO 2021-04-28 21:58:12,020 [base_case.py-->line:35]:**********投资业务流接口测试结束**********
INFO 2021-04-28 21:58:12,024 [base_case.py-->line:31]:=========贷款业务流接口开始测试==========
INFO 2021-04-28 21:58:12,025 [base_case.py-->line:39]:用例【普通投资用户注册】开始测试>>>>>>>
INFO 2021-04-28 21:58:12,308 [base_case.py-->line:118]:用例【普通投资用户注册】状态码断言成功！
INFO 2021-04-28 21:58:12,308 [base_case.py-->line:140]:用例【普通投资用户注册】请求json结果断言成功！
INFO 2021-04-28 21:58:12,308 [base_case.py-->line:53]:用例【普通投资用户注册】测试结束<<<<<<<<
INFO 2021-04-28 21:58:12,315 [base_case.py-->line:39]:用例【普通融资用户登录】开始测试>>>>>>>
INFO 2021-04-28 21:58:12,473 [base_case.py-->line:118]:用例【普通融资用户登录】状态码断言成功！
INFO 2021-04-28 21:58:12,473 [base_case.py-->line:140]:用例【普通融资用户登录】请求json结果断言成功！
INFO 2021-04-28 21:58:12,474 [base_case.py-->line:53]:用例【普通融资用户登录】测试结束<<<<<<<<
INFO 2021-04-28 21:58:12,477 [base_case.py-->line:39]:用例【添加项目】开始测试>>>>>>>
INFO 2021-04-28 21:58:12,501 [base_case.py-->line:118]:用例【添加项目】状态码断言成功！
INFO 2021-04-28 21:58:12,501 [base_case.py-->line:140]:用例【添加项目】请求json结果断言成功！
INFO 2021-04-28 21:58:12,501 [base_case.py-->line:53]:用例【添加项目】测试结束<<<<<<<<
INFO 2021-04-28 21:58:12,505 [base_case.py-->line:39]:用例【注册管理员用户】开始测试>>>>>>>
INFO 2021-04-28 21:58:12,788 [base_case.py-->line:118]:用例【注册管理员用户】状态码断言成功！
INFO 2021-04-28 21:58:12,788 [base_case.py-->line:140]:用例【注册管理员用户】请求json结果断言成功！
INFO 2021-04-28 21:58:12,908 [base_case.py-->line:157]:用例【注册管理员用户】数据库断言成功
INFO 2021-04-28 21:58:12,909 [base_case.py-->line:53]:用例【注册管理员用户】测试结束<<<<<<<<
INFO 2021-04-28 21:58:12,914 [base_case.py-->line:39]:用例【管理员用户登录】开始测试>>>>>>>
INFO 2021-04-28 21:58:13,074 [base_case.py-->line:118]:用例【管理员用户登录】状态码断言成功！
INFO 2021-04-28 21:58:13,074 [base_case.py-->line:140]:用例【管理员用户登录】请求json结果断言成功！
INFO 2021-04-28 21:58:13,074 [base_case.py-->line:53]:用例【管理员用户登录】测试结束<<<<<<<<
INFO 2021-04-28 21:58:13,081 [base_case.py-->line:39]:用例【审核项目】开始测试>>>>>>>
INFO 2021-04-28 21:58:13,105 [base_case.py-->line:118]:用例【审核项目】状态码断言成功！
INFO 2021-04-28 21:58:13,106 [base_case.py-->line:140]:用例【审核项目】请求json结果断言成功！
INFO 2021-04-28 21:58:13,106 [base_case.py-->line:53]:用例【审核项目】测试结束<<<<<<<<
INFO 2021-04-28 21:58:13,107 [base_case.py-->line:35]:**********贷款业务流接口测试结束**********
INFO 2021-04-28 21:58:13,111 [test_recharge.py-->line:25]:=========充值接口开始测试==========
INFO 2021-04-28 21:58:13,398 [fixture.py-->line:36]:注册用户成功
INFO 2021-04-28 21:58:13,399 [test_recharge.py-->line:33]:注册用户15836533967成功
INFO 2021-04-28 21:58:13,579 [fixture.py-->line:61]:登录用户成功
INFO 2021-04-28 21:58:13,579 [base_case.py-->line:39]:用例【充值成功-整数】开始测试>>>>>>>
INFO 2021-04-28 21:58:13,605 [base_case.py-->line:118]:用例【充值成功-整数】状态码断言成功！
INFO 2021-04-28 21:58:13,606 [base_case.py-->line:140]:用例【充值成功-整数】请求json结果断言成功！
INFO 2021-04-28 21:58:13,622 [base_case.py-->line:157]:用例【充值成功-整数】数据库断言成功
INFO 2021-04-28 21:58:13,622 [base_case.py-->line:53]:用例【充值成功-整数】测试结束<<<<<<<<
INFO 2021-04-28 21:58:13,633 [base_case.py-->line:39]:用例【充值成功-1位小数】开始测试>>>>>>>
INFO 2021-04-28 21:58:13,659 [base_case.py-->line:118]:用例【充值成功-1位小数】状态码断言成功！
INFO 2021-04-28 21:58:13,660 [base_case.py-->line:140]:用例【充值成功-1位小数】请求json结果断言成功！
INFO 2021-04-28 21:58:13,677 [base_case.py-->line:157]:用例【充值成功-1位小数】数据库断言成功
INFO 2021-04-28 21:58:13,677 [base_case.py-->line:53]:用例【充值成功-1位小数】测试结束<<<<<<<<
INFO 2021-04-28 21:58:13,680 [base_case.py-->line:39]:用例【充值成功-2位小数】开始测试>>>>>>>
INFO 2021-04-28 21:58:13,709 [base_case.py-->line:118]:用例【充值成功-2位小数】状态码断言成功！
INFO 2021-04-28 21:58:13,710 [base_case.py-->line:140]:用例【充值成功-2位小数】请求json结果断言成功！
INFO 2021-04-28 21:58:13,726 [base_case.py-->line:157]:用例【充值成功-2位小数】数据库断言成功
INFO 2021-04-28 21:58:13,726 [base_case.py-->line:53]:用例【充值成功-2位小数】测试结束<<<<<<<<
INFO 2021-04-28 21:58:13,731 [base_case.py-->line:39]:用例【充值成功-50万】开始测试>>>>>>>
INFO 2021-04-28 21:58:13,757 [base_case.py-->line:118]:用例【充值成功-50万】状态码断言成功！
INFO 2021-04-28 21:58:13,757 [base_case.py-->line:140]:用例【充值成功-50万】请求json结果断言成功！
INFO 2021-04-28 21:58:13,773 [base_case.py-->line:157]:用例【充值成功-50万】数据库断言成功
INFO 2021-04-28 21:58:13,774 [base_case.py-->line:53]:用例【充值成功-50万】测试结束<<<<<<<<
INFO 2021-04-28 21:58:13,779 [base_case.py-->line:39]:用例【会员id位空】开始测试>>>>>>>
INFO 2021-04-28 21:58:13,800 [base_case.py-->line:118]:用例【会员id位空】状态码断言成功！
INFO 2021-04-28 21:58:13,800 [base_case.py-->line:140]:用例【会员id位空】请求json结果断言成功！
INFO 2021-04-28 21:58:13,800 [base_case.py-->line:53]:用例【会员id位空】测试结束<<<<<<<<
INFO 2021-04-28 21:58:13,804 [base_case.py-->line:39]:用例【id不是当前登陆的用户】开始测试>>>>>>>
INFO 2021-04-28 21:58:13,824 [base_case.py-->line:118]:用例【id不是当前登陆的用户】状态码断言成功！
INFO 2021-04-28 21:58:13,824 [base_case.py-->line:140]:用例【id不是当前登陆的用户】请求json结果断言成功！
INFO 2021-04-28 21:58:13,824 [base_case.py-->line:53]:用例【id不是当前登陆的用户】测试结束<<<<<<<<
INFO 2021-04-28 21:58:13,828 [base_case.py-->line:39]:用例【会员id为字符串】开始测试>>>>>>>
INFO 2021-04-28 21:58:13,852 [base_case.py-->line:118]:用例【会员id为字符串】状态码断言成功！
ERROR 2021-04-28 21:58:13,853 [base_case.py-->line:134]:用例【会员id为字符串】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day32\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '数字格式化异常'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '数字格式化异常'}
?          ^          ^^^^^^^

+ {'code': 0, 'msg': 'OK'}
?          ^          ^^

DEBUG 2021-04-28 21:58:13,853 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '数字格式化异常'}
DEBUG 2021-04-28 21:58:13,854 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-28 21:58:13,854 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000424791, 'leave_amount': 503553.68, 'mobile_phone': '15836533967', 'reg_name': '小柠檬', 'reg_time': '2021-04-28 21:58:13.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-28 21:58:13,868 [base_case.py-->line:39]:用例【会员id位小数】开始测试>>>>>>>
INFO 2021-04-28 21:58:13,890 [base_case.py-->line:118]:用例【会员id位小数】状态码断言成功！
INFO 2021-04-28 21:58:13,890 [base_case.py-->line:140]:用例【会员id位小数】请求json结果断言成功！
INFO 2021-04-28 21:58:13,891 [base_case.py-->line:53]:用例【会员id位小数】测试结束<<<<<<<<
INFO 2021-04-28 21:58:13,894 [base_case.py-->line:39]:用例【充值金额为0】开始测试>>>>>>>
INFO 2021-04-28 21:58:13,921 [base_case.py-->line:118]:用例【充值金额为0】状态码断言成功！
ERROR 2021-04-28 21:58:13,922 [base_case.py-->line:134]:用例【充值金额为0】请求json结果断言失败！
Traceback (most recent call last):
  File "D:\project\classes\py38\day32\test_cases\base_case.py", line 132, in assert_json_response
    self.assertEqual(self.case['expect_data'], res)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Program Files\Python38\lib\unittest\case.py", line 1211, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Program Files\Python38\lib\unittest\case.py", line 753, in fail
    raise self.failureException(msg)
AssertionError: {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'} != {'code': 0, 'msg': 'OK'}
- {'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
+ {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-28 21:58:13,922 [base_case.py-->line:135]:期望数据：{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
DEBUG 2021-04-28 21:58:13,922 [base_case.py-->line:136]:实际结果: {'code': 0, 'msg': 'OK'}
DEBUG 2021-04-28 21:58:13,922 [base_case.py-->line:137]:响应结果：{'code': 0, 'msg': 'OK', 'data': {'id': 1000424791, 'leave_amount': 503553.68, 'mobile_phone': '15836533967', 'reg_name': '小柠檬', 'reg_time': '2021-04-28 21:58:13.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2020 湖南省零檬信息技术有限公司 All Rights Reserved'}
INFO 2021-04-28 21:58:13,957 [base_case.py-->line:39]:用例【充值金额为负数】开始测试>>>>>>>
INFO 2021-04-28 21:58:13,980 [base_case.py-->line:118]:用例【充值金额为负数】状态码断言成功！
INFO 2021-04-28 21:58:13,980 [base_case.py-->line:140]:用例【充值金额为负数】请求json结果断言成功！
INFO 2021-04-28 21:58:13,980 [base_case.py-->line:53]:用例【充值金额为负数】测试结束<<<<<<<<
INFO 2021-04-28 21:58:13,984 [base_case.py-->line:39]:用例【充值金额为空】开始测试>>>>>>>
INFO 2021-04-28 21:58:14,006 [base_case.py-->line:118]:用例【充值金额为空】状态码断言成功！
INFO 2021-04-28 21:58:14,006 [base_case.py-->line:140]:用例【充值金额为空】请求json结果断言成功！
INFO 2021-04-28 21:58:14,007 [base_case.py-->line:53]:用例【充值金额为空】测试结束<<<<<<<<
INFO 2021-04-28 21:58:14,012 [base_case.py-->line:39]:用例【充值金额3位小数】开始测试>>>>>>>
INFO 2021-04-28 21:58:14,033 [base_case.py-->line:118]:用例【充值金额3位小数】状态码断言成功！
INFO 2021-04-28 21:58:14,033 [base_case.py-->line:140]:用例【充值金额3位小数】请求json结果断言成功！
INFO 2021-04-28 21:58:14,033 [base_case.py-->line:53]:用例【充值金额3位小数】测试结束<<<<<<<<
INFO 2021-04-28 21:58:14,037 [base_case.py-->line:39]:用例【充值金额大于50万】开始测试>>>>>>>
INFO 2021-04-28 21:58:14,060 [base_case.py-->line:118]:用例【充值金额大于50万】状态码断言成功！
INFO 2021-04-28 21:58:14,061 [base_case.py-->line:140]:用例【充值金额大于50万】请求json结果断言成功！
INFO 2021-04-28 21:58:14,061 [base_case.py-->line:53]:用例【充值金额大于50万】测试结束<<<<<<<<
INFO 2021-04-28 21:58:14,065 [base_case.py-->line:39]:用例【充值金额非数字】开始测试>>>>>>>
INFO 2021-04-28 21:58:14,086 [base_case.py-->line:118]:用例【充值金额非数字】状态码断言成功！
INFO 2021-04-28 21:58:14,086 [base_case.py-->line:140]:用例【充值金额非数字】请求json结果断言成功！
INFO 2021-04-28 21:58:14,086 [base_case.py-->line:53]:用例【充值金额非数字】测试结束<<<<<<<<
INFO 2021-04-28 21:58:14,087 [base_case.py-->line:35]:**********充值接口测试结束**********
INFO 2021-04-28 21:58:14,093 [base_case.py-->line:31]:=========注册接口开始测试==========
INFO 2021-04-28 21:58:14,095 [base_case.py-->line:39]:用例【注册成功-不带昵称和类型】开始测试>>>>>>>
INFO 2021-04-28 21:58:14,435 [base_case.py-->line:118]:用例【注册成功-不带昵称和类型】状态码断言成功！
INFO 2021-04-28 21:58:14,436 [base_case.py-->line:140]:用例【注册成功-不带昵称和类型】请求json结果断言成功！
INFO 2021-04-28 21:58:14,553 [base_case.py-->line:157]:用例【注册成功-不带昵称和类型】数据库断言成功
INFO 2021-04-28 21:58:14,554 [base_case.py-->line:53]:用例【注册成功-不带昵称和类型】测试结束<<<<<<<<
INFO 2021-04-28 21:58:14,561 [base_case.py-->line:39]:用例【注册成功-带昵称-类型为0】开始测试>>>>>>>
INFO 2021-04-28 21:58:14,854 [base_case.py-->line:118]:用例【注册成功-带昵称-类型为0】状态码断言成功！
INFO 2021-04-28 21:58:14,854 [base_case.py-->line:140]:用例【注册成功-带昵称-类型为0】请求json结果断言成功！
INFO 2021-04-28 21:58:15,033 [base_case.py-->line:157]:用例【注册成功-带昵称-类型为0】数据库断言成功
INFO 2021-04-28 21:58:15,033 [base_case.py-->line:53]:用例【注册成功-带昵称-类型为0】测试结束<<<<<<<<
INFO 2021-04-28 21:58:15,037 [base_case.py-->line:39]:用例【注册成功-不带昵称-类型为1】开始测试>>>>>>>
INFO 2021-04-28 21:58:15,464 [base_case.py-->line:118]:用例【注册成功-不带昵称-类型为1】状态码断言成功！
INFO 2021-04-28 21:58:15,465 [base_case.py-->line:140]:用例【注册成功-不带昵称-类型为1】请求json结果断言成功！
INFO 2021-04-28 21:58:15,586 [base_case.py-->line:157]:用例【注册成功-不带昵称-类型为1】数据库断言成功
INFO 2021-04-28 21:58:15,586 [base_case.py-->line:53]:用例【注册成功-不带昵称-类型为1】测试结束<<<<<<<<
INFO 2021-04-28 21:58:15,591 [base_case.py-->line:39]:用例【不输入手机号】开始测试>>>>>>>
INFO 2021-04-28 21:58:15,611 [base_case.py-->line:118]:用例【不输入手机号】状态码断言成功！
INFO 2021-04-28 21:58:15,611 [base_case.py-->line:140]:用例【不输入手机号】请求json结果断言成功！
INFO 2021-04-28 21:58:15,611 [base_case.py-->line:53]:用例【不输入手机号】测试结束<<<<<<<<
INFO 2021-04-28 21:58:15,621 [base_case.py-->line:39]:用例【手机号长度10位】开始测试>>>>>>>
INFO 2021-04-28 21:58:15,643 [base_case.py-->line:118]:用例【手机号长度10位】状态码断言成功！
INFO 2021-04-28 21:58:15,643 [base_case.py-->line:140]:用例【手机号长度10位】请求json结果断言成功！
INFO 2021-04-28 21:58:15,643 [base_case.py-->line:53]:用例【手机号长度10位】测试结束<<<<<<<<
INFO 2021-04-28 21:58:15,647 [base_case.py-->line:39]:用例【手机号长度12位】开始测试>>>>>>>
INFO 2021-04-28 21:58:15,668 [base_case.py-->line:118]:用例【手机号长度12位】状态码断言成功！
INFO 2021-04-28 21:58:15,668 [base_case.py-->line:140]:用例【手机号长度12位】请求json结果断言成功！
INFO 2021-04-28 21:58:15,668 [base_case.py-->line:53]:用例【手机号长度12位】测试结束<<<<<<<<
INFO 2021-04-28 21:58:15,671 [base_case.py-->line:39]:用例【手机号含有非法字符】开始测试>>>>>>>
INFO 2021-04-28 21:58:15,691 [base_case.py-->line:118]:用例【手机号含有非法字符】状态码断言成功！
INFO 2021-04-28 21:58:15,691 [base_case.py-->line:140]:用例【手机号含有非法字符】请求json结果断言成功！
INFO 2021-04-28 21:58:15,691 [base_case.py-->line:53]:用例【手机号含有非法字符】测试结束<<<<<<<<
INFO 2021-04-28 21:58:15,695 [base_case.py-->line:39]:用例【已注册过的手机号】开始测试>>>>>>>
INFO 2021-04-28 21:58:15,870 [base_case.py-->line:118]:用例【已注册过的手机号】状态码断言成功！
INFO 2021-04-28 21:58:15,870 [base_case.py-->line:140]:用例【已注册过的手机号】请求json结果断言成功！
INFO 2021-04-28 21:58:15,870 [base_case.py-->line:53]:用例【已注册过的手机号】测试结束<<<<<<<<
INFO 2021-04-28 21:58:15,874 [base_case.py-->line:39]:用例【密码7位】开始测试>>>>>>>
INFO 2021-04-28 21:58:15,894 [base_case.py-->line:118]:用例【密码7位】状态码断言成功！
INFO 2021-04-28 21:58:15,895 [base_case.py-->line:140]:用例【密码7位】请求json结果断言成功！
INFO 2021-04-28 21:58:15,895 [base_case.py-->line:53]:用例【密码7位】测试结束<<<<<<<<
INFO 2021-04-28 21:58:15,900 [base_case.py-->line:39]:用例【密码17位】开始测试>>>>>>>
INFO 2021-04-28 21:58:15,920 [base_case.py-->line:118]:用例【密码17位】状态码断言成功！
INFO 2021-04-28 21:58:15,921 [base_case.py-->line:140]:用例【密码17位】请求json结果断言成功！
INFO 2021-04-28 21:58:15,921 [base_case.py-->line:53]:用例【密码17位】测试结束<<<<<<<<
INFO 2021-04-28 21:58:15,924 [base_case.py-->line:39]:用例【不输入密码】开始测试>>>>>>>
INFO 2021-04-28 21:58:15,946 [base_case.py-->line:118]:用例【不输入密码】状态码断言成功！
INFO 2021-04-28 21:58:15,946 [base_case.py-->line:140]:用例【不输入密码】请求json结果断言成功！
INFO 2021-04-28 21:58:15,946 [base_case.py-->line:53]:用例【不输入密码】测试结束<<<<<<<<
INFO 2021-04-28 21:58:15,950 [base_case.py-->line:39]:用例【昵称11位】开始测试>>>>>>>
INFO 2021-04-28 21:58:15,974 [base_case.py-->line:118]:用例【昵称11位】状态码断言成功！
INFO 2021-04-28 21:58:15,975 [base_case.py-->line:140]:用例【昵称11位】请求json结果断言成功！
INFO 2021-04-28 21:58:15,975 [base_case.py-->line:53]:用例【昵称11位】测试结束<<<<<<<<
INFO 2021-04-28 21:58:15,980 [base_case.py-->line:39]:用例【类型输入非0，1内容】开始测试>>>>>>>
INFO 2021-04-28 21:58:16,002 [base_case.py-->line:118]:用例【类型输入非0，1内容】状态码断言成功！
INFO 2021-04-28 21:58:16,003 [base_case.py-->line:140]:用例【类型输入非0，1内容】请求json结果断言成功！
INFO 2021-04-28 21:58:16,003 [base_case.py-->line:53]:用例【类型输入非0，1内容】测试结束<<<<<<<<
INFO 2021-04-28 21:58:16,004 [base_case.py-->line:35]:**********注册接口测试结束**********
